{
  "category": "Misc",
  "description": "Miscellaneous behaviors for various object types and functionalities",
  "behaviors": {
    "aircraft": {
      "name": "Aircraft",
      "file": "objects/aircraft.lua",
      "description": "Creates a controllable aircraft system that supports planes, helicopters, and VTOL vehicles. Features realistic flight physics, weapon systems, and landing mechanics.",
      "properties": [
        {
          "name": "VEHICLE_TYPE",
          "type": "dropdown",
          "default": "Plane",
          "options": [
            "Plane",
            "Helicopter",
            "VTOL-Vehicle"
          ],
          "description": "Type of aircraft to create"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 100,
          "description": "Distance at which the aircraft can be entered"
        },
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to Fly",
          "description": "Text shown when aircraft can be entered"
        },
        {
          "name": "USE_TEXT1",
          "type": "string",
          "default": "WASD=Control, Mouse=Pitch,Roll, Q=Exit craft",
          "description": "Primary control instructions"
        },
        {
          "name": "USE_TEXT2",
          "type": "string",
          "default": "Space=UP, Shift=DN",
          "description": "Secondary control instructions"
        },
        {
          "name": "LZ_TEXT",
          "type": "string",
          "default": "Landing Zone detected - Press X to commence Auto-landing",
          "description": "Text shown when landing zone is detected"
        },
        {
          "name": "DISPLAY_X",
          "type": "number",
          "default": 50,
          "description": "X position of on-screen text"
        },
        {
          "name": "DISPLAY_Y",
          "type": "number",
          "default": 88,
          "description": "Y position of on-screen text"
        },
        {
          "name": "PILOT_X",
          "type": "number",
          "range": "-500-500",
          "default": 0,
          "description": "X offset of pilot position"
        },
        {
          "name": "PILOT_Y",
          "type": "number",
          "range": "-500-500",
          "default": 30,
          "description": "Y offset of pilot position"
        },
        {
          "name": "PILOT_Z",
          "type": "number",
          "range": "-500-500",
          "default": -15,
          "description": "Z offset of pilot position"
        },
        {
          "name": "MAX_SPEED",
          "type": "number",
          "range": "1-500",
          "default": 30,
          "description": "Maximum speed of the aircraft"
        },
        {
          "name": "VELOCITY",
          "type": "number",
          "range": "1-20",
          "default": 1,
          "description": "Base velocity of the aircraft"
        },
        {
          "name": "FX_ANIMATION",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "AnimSetList"
          ],
          "description": "Animation set to use for effects"
        },
        {
          "name": "FX_MODULATION",
          "type": "number",
          "range": "1-100",
          "default": 60,
          "description": "Modulation rate for effects"
        },
        {
          "name": "SHOW_READOUTS",
          "type": "boolean",
          "default": true,
          "description": "Whether to show flight information"
        },
        {
          "name": "PARTICLE_NO",
          "type": "number",
          "default": 0,
          "description": "Particle effect to use"
        },
        {
          "name": "CAN_BAILOUT",
          "type": "boolean",
          "default": true,
          "description": "Whether player can exit the aircraft mid-flight"
        },
        {
          "name": "WEAPON_NAME",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "AnyWeaponList"
          ],
          "description": "Weapon to mount on the aircraft"
        },
        {
          "name": "WEAPON_AMMO",
          "type": "number",
          "range": "0-10000",
          "default": 500,
          "description": "Amount of ammunition for the weapon"
        },
        {
          "name": "USE_WEAPON",
          "type": "boolean",
          "default": false,
          "description": "Whether to enable weapon system"
        },
        {
          "name": "CROSSHAIR_IMAGEFILE",
          "type": "string",
          "default": "imagebank\\crosshairs\\crosshair.dds",
          "description": "Path to crosshair image file"
        }
      ],
      "features": [
        "Multiple aircraft types",
        "Realistic flight physics",
        "Weapon system integration",
        "Auto-landing system",
        "Particle effects",
        "Customizable controls",
        "Pilot position adjustment",
        "Crosshair system",
        "Sound effects",
        "Collision detection"
      ],
      "keywords": ["misc", "vehicle", "aircraft", "flight", "plane", "helicopter", "vtol", "transport", "weapon", "control"],
      "tutorial": {
        "videoId": "rzrLng7lq0U",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["vehicle_controller", "weapon_system", "particle_effects"]
    },
    "boat": {
      "name": "Boat",
      "file": "objects/boat.lua",
      "description": "Creates a fully functional boat that can be piloted by the player, featuring realistic water physics, buoyancy, and collision detection. Includes speed control, steering, and automatic water level adjustment.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to embark",
          "description": "Message displayed when player can enter the boat"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 80,
          "description": "Distance at which player can interact with boat"
        },
        {
          "name": "MIN_SPEED",
          "type": "number",
          "range": "0-10",
          "default": 2,
          "description": "Minimum speed of the boat"
        },
        {
          "name": "MAX_SPEED",
          "type": "number",
          "range": "0-100",
          "default": 4,
          "description": "Maximum speed of the boat"
        },
        {
          "name": "TURN_SPEED",
          "type": "number",
          "range": "1-10",
          "default": 2,
          "description": "How quickly the boat can turn"
        },
        {
          "name": "DRAG",
          "type": "number",
          "default": 5,
          "description": "Water resistance affecting boat movement"
        },
        {
          "name": "PLAYER_Z_POSITION",
          "type": "number",
          "range": "-100-100",
          "default": 0,
          "description": "Forward/back position of player on boat"
        },
        {
          "name": "PLAYER_Y_POSITION",
          "type": "number",
          "range": "-100-100",
          "default": 20,
          "description": "Height of player on boat"
        },
        {
          "name": "BOAT_ROTATION",
          "type": "number",
          "range": "0-180",
          "default": 0,
          "description": "Initial rotation of the boat"
        },
        {
          "name": "BOAT_DRAFT",
          "type": "number",
          "default": 30,
          "description": "How deep the boat sits in water"
        },
        {
          "name": "BOAT_POWER",
          "type": "number",
          "range": "0-50",
          "default": 5,
          "description": "Acceleration power of the boat"
        },
        {
          "name": "BOAT_BRAKE",
          "type": "number",
          "range": "0-50",
          "default": 5,
          "description": "Braking power of the boat"
        },
        {
          "name": "BOAT_BUOYANCY",
          "type": "number",
          "range": "0-5",
          "default": 1,
          "description": "How much the boat bobs in water"
        }
      ],
      "features": [
        "Realistic water physics",
        "Buoyancy system with bobbing effect",
        "WASD controls for movement",
        "Automatic water level adjustment",
        "Collision detection and grounding",
        "Water ripple effects",
        "Sound effect integration",
        "Player position management",
        "Speed and drag physics",
        "Terrain height detection",
        "Easy entry/exit system",
        "Multiple sound slots for different effects"
      ],
      "keywords": ["boat", "water", "vehicle", "physics", "buoyancy", "transport", "ripple", "float"],
      "tutorial": {
        "videoId": "MC-0WM1X4JQ",
        "timestamp": "0:00",
        "steps": [
          "Attach the boat behavior to a boat model",
          "Set Physics=ON, Gravity=OFF, IsImobile=YES on the object",
          "Configure boat properties like speed and buoyancy",
          "Add sound effects to Sound0 (Entry/Exit), Sound1 (Moving Loop), Sound2 (Run Aground)",
          "Place the boat in water",
          "Test controls: E to enter, WASD to move, Q to exit"
        ]
      },
      "relatedBehaviors": ["vehicle_control", "water_effects", "physics_object", "sound_object"]
    },
    "border_maps": {
      "name": "Border Maps",
      "file": "objects/border_maps.lua",
      "description": "Creates a system for managing map transitions when players reach map boundaries. Supports up to four connected maps with customizable spawn points and transition prompts.",
      "properties": [
        {
          "name": "NOTIFICATION_TEXT",
          "type": "string",
          "default": "Press E if you wish to leave the area",
          "description": "Text shown when player reaches a map border"
        },
        {
          "name": "MAP1",
          "type": "string",
          "default": "",
          "description": "Name of the map to load when leaving south border"
        },
        {
          "name": "MAP2",
          "type": "string",
          "default": "",
          "description": "Name of the map to load when leaving north border"
        },
        {
          "name": "MAP3",
          "type": "string",
          "default": "",
          "description": "Name of the map to load when leaving west border"
        },
        {
          "name": "MAP4",
          "type": "string",
          "default": "",
          "description": "Name of the map to load when leaving east border"
        },
        {
          "name": "BORDER_DISTANCE",
          "type": "number",
          "range": "100-1000",
          "default": 200,
          "description": "Distance from map edge to trigger border detection"
        },
        {
          "name": "LOAD_TYPE",
          "type": "dropdown",
          "default": "Ask",
          "options": [
            "Ask",
            "Auto"
          ],
          "description": "Whether to prompt player before loading next map"
        },
        {
          "name": "SPAWN_MARKER_USER_GLOBAL",
          "type": "string",
          "default": "MySpawnMarkers",
          "description": "User global variable for spawn marker system"
        },
        {
          "name": "SPAWN_MARKER_NAME1",
          "type": "string",
          "default": "",
          "description": "Spawn marker name for south border transition"
        },
        {
          "name": "SPAWN_MARKER_NAME2",
          "type": "string",
          "default": "",
          "description": "Spawn marker name for north border transition"
        },
        {
          "name": "SPAWN_MARKER_NAME3",
          "type": "string",
          "default": "",
          "description": "Spawn marker name for west border transition"
        },
        {
          "name": "SPAWN_MARKER_NAME4",
          "type": "string",
          "default": "",
          "description": "Spawn marker name for east border transition"
        }
      ],
      "features": [
        "Four-directional map transitions",
        "Customizable border detection",
        "Optional transition prompts",
        "Spawn point management",
        "Automatic map loading",
        "Border distance control",
        "User global variable support",
        "Seamless player transitions"
      ],
      "keywords": ["misc", "map", "border", "transition", "spawn", "teleport", "level", "world", "navigation"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["spawn_marker", "map_transition", "player_teleport"]
    },
    "forcewall": {
      "name": "Force Wall",
      "file": "objects/forcewall.lua",
      "description": "Creates an invisible or visible force field barrier that can block, repel, or damage players. Features multiple force modes, trigger systems, and customizable effects.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "You cannot pass",
          "description": "Text shown when player interacts with the force wall"
        },
        {
          "name": "FORCE_MODE",
          "type": "dropdown",
          "default": "Static",
          "options": [
            "Static",
            "Repel",
            "Hurt",
            "Kill"
          ],
          "description": "Type of force effect to apply"
        },
        {
          "name": "STATE",
          "type": "dropdown",
          "default": "Active",
          "options": [
            "Active",
            "Inactive"
          ],
          "description": "Whether the force wall is currently active"
        },
        {
          "name": "TRIGGER",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "Linked/IfUsed"
          ],
          "description": "Trigger system for the force wall"
        },
        {
          "name": "VISIBILITY",
          "type": "dropdown",
          "default": "Invisible",
          "options": [
            "Invisible",
            "Visible"
          ],
          "description": "Whether the force wall is visible"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": [
            "Local",
            "Screen"
          ],
          "description": "Where to display the prompt text"
        }
      ],
      "features": [
        "Multiple force effects",
        "Customizable visibility",
        "Trigger system integration",
        "Player interaction handling",
        "Sound effects",
        "Damage system integration",
        "Force application",
        "Prompt customization",
        "State management"
      ],
      "keywords": ["misc", "force", "wall", "barrier", "shield", "protection", "defense", "block", "repel", "damage"],
      "tutorial": {
        "videoId": "FdK9PFR1QqY",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["trigger_system", "damage_system", "force_field"]
    },
    "glue_entity": {
      "name": "Glue Entity",
      "file": "objects/glue_entity.lua",
      "description": "Creates a connection between objects that allows them to move together, with one object acting as the leader. Features automatic position and rotation synchronization, and support for multiple linked objects.",
      "properties": [
        {
          "name": "BehaviorName",
          "type": "string",
          "default": "",
          "description": "Name of the behavior script on the moving entity"
        }
      ],
      "features": [
        "Multi-object linking",
        "Position synchronization",
        "Rotation synchronization",
        "Quaternion-based calculations",
        "Collision handling",
        "Offset preservation",
        "Dynamic function wrapping",
        "Error reporting",
        "Multiple connection support",
        "Automatic relationship detection"
      ],
      "keywords": ["glue", "attach", "link", "connect", "move", "synchronize", "follow"],
      "tutorial": {
        "videoId": "YOtEH0rkemo",
        "timestamp": "0:00",
        "steps": [
          "Create base and follower objects",
          "Attach the glue_entity behavior to follower",
          "Set behavior name of moving object",
          "Create logic connections",
          "Position objects as desired",
          "Test movement synchronization",
          "Add additional followers if needed",
          "Check collision handling",
          "Verify rotation sync"
        ]
      },
      "relatedBehaviors": ["parent_child", "object_link", "movement_sync", "follow_path"]
    },
    "hurt_npc": {
      "name": "Hurt NPC",
      "file": "objects/hurt_npc.lua",
      "description": "Creates a system that damages NPCs within range of a specified entity. Features configurable damage amounts, timing intervals, and one-time or continuous damage options.",
      "properties": [
        {
          "name": "ENTITY_NAME",
          "type": "string",
          "default": "",
          "description": "Name of entity that will hurt nearby NPCs"
        },
        {
          "name": "HURT_RANGE",
          "type": "number",
          "range": "0-3000",
          "default": 500,
          "description": "Range within which NPCs will be damaged"
        },
        {
          "name": "HURT_AMOUNT",
          "type": "number",
          "range": "0-100",
          "default": 10,
          "description": "Amount of damage to deal to NPCs"
        },
        {
          "name": "HURT_TIME",
          "type": "number",
          "range": "1-10",
          "default": 3,
          "description": "Seconds between damage intervals"
        },
        {
          "name": "HurtOnceOnly",
          "type": "boolean",
          "default": false,
          "description": "Whether to damage NPCs only once then disable"
        }
      ],
      "features": [
        "Configurable damage radius",
        "Adjustable damage amounts",
        "Timed damage intervals",
        "Single or continuous damage modes",
        "Entity-based targeting",
        "Automatic NPC detection",
        "Health system integration",
        "Memory-efficient updates"
      ],
      "keywords": ["damage", "npc", "hurt", "area", "radius", "entity", "health", "timer"],
      "tutorial": {
        "videoId": "6Vn8f5s8R9Q",
        "timestamp": "0:00",
        "steps": [
          "Create or select a target object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the hurt_npc behavior",
          "Set ENTITY_NAME to target entity",
          "Configure HURT_RANGE for damage radius",
          "Set HURT_AMOUNT for damage dealt",
          "Adjust HURT_TIME for damage frequency",
          "Enable HurtOnceOnly if needed",
          "Test with different NPC types"
        ]
      },
      "relatedBehaviors": ["npc_control", "no_kill", "exploder", "global_modifier"]
    },
    "hud_interface": {
      "name": "HUD Interface",
      "file": "objects/hud_interface.lua",
      "description": "Creates a dynamic interface system that allows objects to display and control custom HUD screens with multiple interactive buttons. Features configurable actions, text prompts, and activation modes including proximity and zone-based triggers.",
      "properties": [
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which interface can be activated"
        },
        {
          "name": "USE_TEXT",
          "type": "string",
          "default": "E to Use",
          "description": "Text shown when player can activate interface"
        },
        {
          "name": "HUD_SCREEN",
          "type": "string",
          "default": "HUD Screen 9",
          "description": "Name of HUD screen to display"
        },
        {
          "name": "HUD_BUTTON1",
          "type": "string",
          "default": "Activate Link",
          "description": "Text for first button"
        },
        {
          "name": "HUD_ACTION1",
          "type": "enum",
          "default": 0,
          "options": ["0=Link 0", "1=Link 1", "2=Link 2", "3=Link 3", "4=Link 4", "5=Link 5", "6=Link 6", "7=Link 7", "8=Link 8", "9=Link 9", "10=Play Audio", "11=Destroy Object", "12=Activate IfUsed", "13=Exit Hud"],
          "description": "Action for first button"
        },
        {
          "name": "HUD_ACTION1_TEXT",
          "type": "string",
          "default": "Link Activated",
          "description": "Feedback text for first button"
        },
        {
          "name": "HUD_BUTTON2",
          "type": "string",
          "default": "Play Audio",
          "description": "Text for second button"
        },
        {
          "name": "HUD_ACTION2",
          "type": "enum",
          "default": 10,
          "options": ["0=Link 0", "1=Link 1", "2=Link 2", "3=Link 3", "4=Link 4", "5=Link 5", "6=Link 6", "7=Link 7", "8=Link 8", "9=Link 9", "10=Play Audio", "11=Destroy Object", "12=Activate IfUsed", "13=Exit Hud"],
          "description": "Action for second button"
        },
        {
          "name": "HUD_ACTION2_TEXT",
          "type": "string",
          "default": "Playing Audio",
          "description": "Feedback text for second button"
        },
        {
          "name": "HUD_BUTTON3",
          "type": "string",
          "default": "Destroy",
          "description": "Text for third button"
        },
        {
          "name": "HUD_ACTION3",
          "type": "enum",
          "default": 11,
          "options": ["0=Link 0", "1=Link 1", "2=Link 2", "3=Link 3", "4=Link 4", "5=Link 5", "6=Link 6", "7=Link 7", "8=Link 8", "9=Link 9", "10=Play Audio", "11=Destroy Object", "12=Activate IfUsed", "13=Exit Hud"],
          "description": "Action for third button"
        },
        {
          "name": "HUD_ACTION3_TEXT",
          "type": "string",
          "default": "Object Destroyed",
          "description": "Feedback text for third button"
        },
        {
          "name": "HUD_BUTTON4",
          "type": "string",
          "default": "Activate IfUsed",
          "description": "Text for fourth button"
        },
        {
          "name": "HUD_ACTION4",
          "type": "enum",
          "default": 12,
          "options": ["0=Link 0", "1=Link 1", "2=Link 2", "3=Link 3", "4=Link 4", "5=Link 5", "6=Link 6", "7=Link 7", "8=Link 8", "9=Link 9", "10=Play Audio", "11=Destroy Object", "12=Activate IfUsed", "13=Exit Hud"],
          "description": "Action for fourth button"
        },
        {
          "name": "HUD_ACTION4_TEXT",
          "type": "string",
          "default": "Activating",
          "description": "Feedback text for fourth button"
        },
        {
          "name": "HUD_BUTTON5",
          "type": "string",
          "default": "Exit",
          "description": "Text for fifth button"
        },
        {
          "name": "HUD_ACTION5",
          "type": "enum",
          "default": 13,
          "options": ["0=Link 0", "1=Link 1", "2=Link 2", "3=Link 3", "4=Link 4", "5=Link 5", "6=Link 6", "7=Link 7", "8=Link 8", "9=Link 9", "10=Play Audio", "11=Destroy Object", "12=Activate IfUsed", "13=Exit Hud"],
          "description": "Action for fifth button"
        },
        {
          "name": "HUD_ACTION5_TEXT",
          "type": "string",
          "default": "Exiting",
          "description": "Feedback text for fifth button"
        }
      ],
      "features": [
        "Interactive HUD screen system",
        "Up to 5 configurable buttons",
        "Multiple action types per button",
        "Proximity-based activation",
        "Zone-based triggering",
        "Custom feedback messages",
        "Sound effect support",
        "Logic connection integration",
        "Object state management",
        "Automatic cleanup"
      ],
      "keywords": ["hud", "interface", "buttons", "menu", "screen", "interaction", "ui", "control"],
      "tutorial": {
        "videoId": "vYjPqC7AO64",
        "timestamp": "0:00",
        "steps": [
          "Create or select target object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the hud_interface behavior",
          "Configure USE_RANGE and USE_TEXT",
          "Set up HUD_SCREEN name",
          "Configure button texts and actions",
          "Add activation sound to Sound0",
          "Add action sound to Sound1",
          "Create HUD screen with matching button names",
          "Test interface activation and buttons"
        ]
      },
      "relatedBehaviors": ["activehud", "hudcontrol", "hot_key", "interface"]
    },
    "life": {
      "name": "Life",
      "file": "objects/life.lua",
      "description": "Creates a collectible extra life object with customizable pickup behavior and display options. Features automatic or manual collection modes, visual highlighting, and logic connections.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to collect",
          "description": "Text shown when player can collect the life"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 90,
          "description": "Distance at which life can be collected"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "enum",
          "default": 1,
          "options": ["1=Automatic", "2=Manual"],
          "description": "Whether life is collected automatically or requires button press"
        },
        {
          "name": "COLLECTION_TEXT",
          "type": "string",
          "default": "Extra Life collected",
          "description": "Text shown when life is collected"
        },
        {
          "name": "ACTIVATE_LOGIC",
          "type": "boolean",
          "default": false,
          "description": "Whether to trigger logic connections on pickup"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "enum",
          "default": 1,
          "options": ["1=Local", "2=Screen"],
          "description": "Where to display prompt text"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "enum",
          "default": 0,
          "options": ["0=None", "1=Shape", "2=Outline"],
          "description": "Visual highlight effect for the life object"
        }
      ],
      "features": [
        "Automatic or manual collection modes",
        "Customizable pickup range",
        "Local or screen-based prompts",
        "Visual highlighting options",
        "Logic connection support",
        "Sound effect integration",
        "Automatic cleanup after collection",
        "Player lives system integration"
      ],
      "keywords": ["life", "extra life", "pickup", "collect", "powerup", "health", "player", "lives"],
      "tutorial": {
        "videoId": "0d46HhxrHBw",
        "timestamp": "0:00",
        "steps": [
          "Create a new object to serve as the life pickup",
          "Set Physics to OFF",
          "Set Always Active to ON",
          "Attach the life behavior",
          "Configure pickup text and range",
          "Choose pickup style (automatic/manual)",
          "Set up collection text",
          "Configure prompt display mode",
          "Add collection sound to Sound0",
          "Test life collection and lives counter"
        ]
      },
      "relatedBehaviors": ["healthbar", "hudcontrol", "activehud", "interface"]
    },
    "moon": {
      "name": "Moon",
      "file": "objects/moon.lua",
      "description": "Creates a moon object that can rotate and orbit around another object. Features customizable orbital mechanics, player detection, and trigger systems for cutscenes and level transitions.",
      "properties": [
        {
          "name": "MOON_ADJUST_X",
          "type": "number",
          "range": "-20000.0-20000.0",
          "default": 0.0,
          "description": "X-axis position adjustment"
        },
        {
          "name": "MOON_ADJUST_Y",
          "type": "number",
          "range": "-20000.0-20000.0",
          "default": 0.0,
          "description": "Y-axis position adjustment"
        },
        {
          "name": "MOON_ADJUST_Z",
          "type": "number",
          "range": "-20000.0-20000.0",
          "default": 0.0,
          "description": "Z-axis position adjustment"
        },
        {
          "name": "MOON_ROTATION",
          "type": "number",
          "range": "0-100",
          "default": 1,
          "description": "Speed of moon's rotation"
        },
        {
          "name": "ORBIT_PLANET_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the object to orbit around"
        },
        {
          "name": "ORBIT_DISTANCE",
          "type": "number",
          "range": "0-1000",
          "default": 300,
          "description": "Distance from the orbited object"
        },
        {
          "name": "ORBIT_SPEED",
          "type": "number",
          "range": "0.0-100.0",
          "default": 0.1,
          "description": "Speed of orbital movement"
        },
        {
          "name": "SENSE_RANGE",
          "type": "number",
          "default": 1000,
          "description": "Range at which player detection occurs"
        },
        {
          "name": "SENSE_TEXT",
          "type": "string",
          "default": "Detected in Range",
          "description": "Text shown when player is detected"
        },
        {
          "name": "SENSE_TRIGGER",
          "type": "dropdown",
          "default": "Linked",
          "options": [
            "Linked",
            "Video+ChangeLevel",
            "Video"
          ],
          "description": "Action to take when player is detected"
        },
        {
          "name": "VIDEO_SKIP",
          "type": "dropdown",
          "default": "Yes",
          "options": [
            "Yes",
            "No"
          ],
          "description": "Whether video can be skipped"
        },
        {
          "name": "GoToLevelMode",
          "type": "dropdown",
          "default": "Use Storyboard Logic",
          "options": [
            "Use Storyboard Logic",
            "Go to Specific Level"
          ],
          "description": "How to handle level transitions"
        },
        {
          "name": "ResetStates",
          "type": "boolean",
          "default": false,
          "description": "Whether to reset states when entering new level"
        }
      ],
      "features": [
        "Orbital mechanics",
        "Customizable rotation",
        "Position adjustment",
        "Player detection",
        "Cutscene integration",
        "Level transition system",
        "Trigger system integration",
        "Video playback control",
        "State management"
      ],
      "keywords": ["misc", "moon", "orbit", "rotation", "celestial", "cutscene", "transition", "detection", "trigger"],
      "tutorial": {
        "videoId": "Lw77EWngRfg",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["trigger_system", "cutscene_manager", "level_transition"]
    },
    "navblocker": {
      "name": "Navigation Blocker",
      "file": "objects/navblocker.lua",
      "description": "Creates a navigation mesh blocker for specified objects, preventing AI characters from moving through designated areas. Useful for creating dynamic barriers and restricted zones.",
      "properties": [
        {
          "name": "OBJECT_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the object to create a navigation blocker for"
        }
      ],
      "features": [
        "Dynamic navigation blocking",
        "Object-based barriers",
        "Automatic collision detection",
        "Mesh-based blocking",
        "Physics integration",
        "Real-time updates",
        "Multiple object support",
        "Angle-based blocking"
      ],
      "keywords": ["misc", "navigation", "blocker", "ai", "pathfinding", "mesh", "barrier", "restriction", "dynamic"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["ai_navigation", "physics_object", "collision_system"]
    },
    "planet": {
      "name": "Planet",
      "file": "objects/planet.lua",
      "description": "Creates a complex planetary system using multiple spherical objects to represent the planet, clouds, atmosphere, and optional rings. Features customizable positioning, scaling, rotation speeds, and proximity-based triggers, with support for video playback and level transitions.",
      "properties": [
        { "name": "PLANET_ADJUST_X", "type": "number", "range": "-20000-20000", "default": 0, "description": "X-axis position adjustment for the planet system" },
        { "name": "PLANET_ADJUST_Y", "type": "number", "range": "-20000-20000", "default": 0, "description": "Y-axis position adjustment for the planet system" },
        { "name": "PLANET_ADJUST_Z", "type": "number", "range": "-20000-20000", "default": 0, "description": "Z-axis position adjustment for the planet system" },
        { "name": "CLOUD_SPHERE", "type": "string", "default": "", "description": "Name of the cloud layer sphere object" },
        { "name": "ATMOS_SPHERE", "type": "string", "default": "", "description": "Name of the atmosphere sphere object" },
        { "name": "RINGS_CIRCLE", "type": "string", "default": "", "description": "Name of the planetary rings object" },
        { "name": "CLOUD_SCALE", "type": "number", "range": "0-100", "default": 10, "description": "Additional scale percentage for cloud layer" },
        { "name": "ATMOS_SCALE", "type": "number", "range": "0-100", "default": 15, "description": "Additional scale percentage for atmosphere" },
        { "name": "RINGS_SCALE", "type": "number", "range": "0-100", "default": 25, "description": "Additional scale percentage for rings" },
        { "name": "PLANET_ROTATION", "type": "number", "range": "0-100", "default": 1, "description": "Rotation speed of the planet core" },
        { "name": "CLOUD_ROTATION", "type": "number", "range": "0-100", "default": 5, "description": "Rotation speed of the cloud layer" },
        { "name": "RINGS_ROTATION", "type": "number", "range": "0-100", "default": 1, "description": "Rotation speed of the planetary rings" },
        { "name": "SENSE_RANGE", "type": "number", "range": "0-10000", "default": 1000, "description": "Range for proximity detection" },
        { "name": "SENSE_TEXT", "type": "string", "default": "Detected in Range", "description": "Message shown when player enters detection range" },
        {
          "name": "SENSE_TRIGGER",
          "type": "dropdown",
          "default": "Linked",
          "options": [
            "Linked",
            "Video+ChangeLevel"
          ],
          "description": "Action to take when player enters range"
        },
        {
          "name": "VIDEO_SKIP",
          "type": "dropdown",
          "default": "Yes",
          "options": [
            "Yes",
            "No"
          ],
          "description": "Whether video can be skipped"
        },
        {
          "name": "GoToLevelMode",
          "type": "dropdown",
          "default": "Use Storyboard Logic",
          "options": [
            "Use Storyboard Logic",
            "Go to Specific Level"
          ],
          "description": "Controls whether to load the next level in the Storyboard, or a specific level"
        },
        { "name": "RESETSTATES", "type": "boolean", "default": false, "description": "State reset value when entering the new level" }
      ],
      "features": [
        "Multi-object planetary system",
        "Independent layer and ring rotation",
        "Customizable scaling and positioning",
        "Proximity detection and triggers",
        "Video playback integration",
        "Level transition support",
        "Logic connection triggers",
        "Automatic gravity handling",
        "Animation speed integration"
      ],
      "keywords": ["planet", "space", "atmosphere", "clouds", "rings", "rotation", "scale", "trigger"],
      "tutorial": {
        "videoId": "eXOmYslVO3g",
        "timestamp": "0",
        "steps": [
          "Create main planet sphere object",
          "Create cloud sphere with same size",
          "Create atmosphere sphere with same size",
          "Optionally create rings object",
          "Set Physics to ON for all objects",
          "Attach planet behavior to main sphere",
          "Configure sphere names and scales",
          "Set rotation speeds",
          "Configure trigger settings",
          "Test proximity and triggers"
        ]
      },
      "relatedBehaviors": ["moon", "skybox", "light_source", "trigger_zone"]
    },
    "scenery": {
      "name": "Scenery",
      "file": "objects/scenery.lua",
      "description": "Allows an object to be used as scenery beyond the game area with customizable positioning and scaling. Perfect for creating background elements and distant objects.",
      "properties": [
        {
          "name": "SCENERY_SCALE",
          "type": "number",
          "range": "0-1000",
          "default": 0,
          "description": "Additional scale percentage to apply to the object"
        },
        {
          "name": "POSITION_AJUST_X",
          "type": "number",
          "range": "-20000-20000",
          "default": 0,
          "description": "X-axis position adjustment in world units"
        },
        {
          "name": "POSITION_AJUST_Y",
          "type": "number",
          "range": "-20000-20000",
          "default": 0,
          "description": "Y-axis position adjustment in world units"
        },
        {
          "name": "POSITION_AJUST_Z",
          "type": "number",
          "range": "-20000-20000",
          "default": 0,
          "description": "Z-axis position adjustment in world units"
        }
      ],
      "features": [
        "Automatic collision disabling",
        "Gravity disabling",
        "Position adjustment system",
        "Scale customization",
        "One-time setup",
        "Memory efficient",
        "Background object optimization",
        "Distant scenery support"
      ],
      "keywords": ["scenery", "background", "position", "scale", "adjust", "static", "distant", "decoration"],
      "tutorial": {
        "steps": [
          "Create or select scenery object",
          "Set Physics to ON or OFF as needed",
          "Set Always Active to ON",
          "Attach the scenery behavior",
          "Adjust position using POSITION_AJUST values",
          "Set SCENERY_SCALE if size adjustment needed",
          "Test visibility from intended viewing areas"
        ]
      },
      "relatedBehaviors": ["object_mover", "scale_control", "transform_object", "position_marker"]
    },
    "secret": {
      "name": "Secret Area",
      "file": "objects/secret.lua",
      "description": "Creates a hidden area or secret that can be discovered by players. Features customizable reveal conditions, visual/audio feedback, and progress tracking capabilities.",
      "properties": [
        {
          "name": "REVEAL_TYPE",
          "type": "dropdown",
          "default": "Proximity",
          "options": [
            "Proximity",
            "Interaction",
            "Item Required",
            "Puzzle Solved"
          ],
          "description": "How the secret is revealed"
        },
        {
          "name": "DETECTION_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 100,
          "description": "Distance at which secret can be detected"
        },
        {
          "name": "REQUIRED_ITEM",
          "type": "string",
          "default": "",
          "description": "Item needed to reveal secret (if applicable)"
        },
        {
          "name": "HINT_TEXT",
          "type": "string",
          "default": "There's something hidden nearby...",
          "description": "Message shown when secret is nearby"
        },
        {
          "name": "REVEAL_TEXT",
          "type": "string",
          "default": "Secret Found!",
          "description": "Message shown when secret is revealed"
        },
        {
          "name": "DISPLAY_STYLE",
          "type": "dropdown",
          "default": "Screen",
          "options": [
            "Screen",
            "Local",
            "Both",
            "None"
          ],
          "description": "How messages are displayed"
        },
        {
          "name": "VISUAL_EFFECT",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "Glow",
            "Sparkle",
            "Custom"
          ],
          "description": "Effect when secret is revealed"
        },
        {
          "name": "SAVE_PROGRESS",
          "type": "boolean",
          "default": true,
          "description": "Whether to save discovery state"
        },
        {
          "name": "SECRET_ID",
          "type": "string",
          "default": "",
          "description": "Unique identifier for progress tracking"
        },
        {
          "name": "HINT_FREQUENCY",
          "type": "number",
          "range": "0-60",
          "default": 0,
          "description": "Seconds between hint messages (0=off)"
        }
      ],
      "features": [
        "Multiple reveal conditions",
        "Visual effect options",
        "Progress tracking",
        "Customizable messages",
        "Item requirements",
        "Range-based detection",
        "Sound effect support",
        "State persistence",
        "Hint system",
        "Achievement integration"
      ],
      "keywords": ["secret", "hidden", "discovery", "puzzle", "collectible", "achievement", "mystery", "reveal"],
      "tutorial": {
        "videoId": "i67gqISeD1Q",
        "timestamp": "0",
        "steps": [
          "Create a secret area object",
          "Set Physics to ON",
          "Attach the secret behavior",
          "Choose reveal condition",
          "Configure detection settings",
          "Set up messages and effects",
          "Add discovery sound to Sound0",
          "Add hint sound to Sound1",
          "Configure progress tracking",
          "Test secret mechanics"
        ]
      },
      "relatedBehaviors": ["item_pickup", "puzzle_system", "achievement_tracker", "inventory_system"]
    },
    "shrink": {
      "name": "Shrink",
      "file": "objects/shrink.lua",
      "description": "Creates a dynamic shrinking effect that can reduce the size of objects along specified axes. Features smooth scaling transitions, range-based activation, and collision handling.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "What the hell",
          "description": "Text shown when shrinking is activated"
        },
        {
          "name": "ACTIVATION_RANGE",
          "type": "number",
          "range": "1-1000",
          "default": 100,
          "description": "Distance at which shrinking is triggered"
        },
        {
          "name": "SHRINK_MODE",
          "type": "dropdown",
          "default": "XYZ All",
          "options": [
            "XYZ All",
            "X Only",
            "Y Only",
            "Z Only"
          ],
          "description": "Which axes to apply shrinking to"
        },
        {
          "name": "SHRINK_SPEED",
          "type": "number",
          "range": "0.0-10.0",
          "default": 0.5,
          "description": "Speed of the shrinking effect"
        },
        {
          "name": "SHRINK_SCALE",
          "type": "number",
          "range": "1.0-100.0",
          "default": 1.0,
          "description": "Final scale percentage of the object"
        }
      ],
      "features": [
        "Multi-axis shrinking",
        "Range-based activation",
        "Smooth scaling transitions",
        "Collision handling",
        "Sound effect support",
        "Customizable speed",
        "Scale control",
        "Visual feedback"
      ],
      "keywords": ["shrink", "scale", "size", "transform", "effect", "physics", "trigger", "transition"],
      "tutorial": {
        "steps": [
          "Create or select target object",
          "Set Physics to ON",
          "Set Gravity to OFF",
          "Set IsImmobile to ON",
          "Set Always Active to ON",
          "Attach the shrink behavior",
          "Configure activation range",
          "Choose shrink mode (XYZ/X/Y/Z)",
          "Set shrink speed and scale",
          "Add shrink sound to Sound0",
          "Test shrinking functionality"
        ]
      },
      "relatedBehaviors": ["scale_control", "physics_object", "trigger_zone", "effect_manager"]
    },
    "sound_object": {
      "name": "Sound Object",
      "file": "objects/sound_object.lua",
      "description": "Creates an interactive sound emitter that plays a sound when activated by the player. Features customizable prompts, range-based activation, and logic connection support.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to activate",
          "description": "Text shown when player can activate the sound"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which player can activate the sound"
        },
        {
          "name": "ACTIVATED_TEXT",
          "type": "string",
          "default": "Activated",
          "description": "Text shown when sound is activated"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": [
            "Local",
            "Screen"
          ],
          "description": "Where to display prompt messages"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "Shape",
            "Outline"
          ],
          "description": "Visual highlight style for the object"
        },
        {
          "name": "ACTIVATE_LOGIC",
          "type": "boolean",
          "default": false,
          "description": "Whether to trigger logic connections when activated"
        },
        {
          "name": "SINGLE_USE",
          "type": "boolean",
          "default": false,
          "description": "Whether the object becomes inactive after one use"
        }
      ],
      "features": [
        "Interactive sound playback",
        "Range-based activation",
        "Customizable prompts",
        "Visual highlighting",
        "Logic connection support",
        "Single-use option",
        "Local/screen text display",
        "Sound effect integration"
      ],
      "keywords": ["sound", "audio", "interactive", "trigger", "activation", "prompt", "highlight"],
      "tutorial": {
        "steps": [
          "Create or select target object",
          "Attach the sound_object behavior",
          "Add sound file to Sound0",
          "Configure activation range",
          "Set up prompt texts",
          "Choose display style",
          "Configure highlight effect",
          "Set up logic connections if needed",
          "Test sound activation"
        ]
      },
      "relatedBehaviors": ["trigger_system", "logic_connector", "highlight_object", "interactive_object"]
    },
    "speeder": {
      "name": "Speeder",
      "file": "objects/speeder.lua",
      "description": "Creates a mountable speeder vehicle that can be driven by the player. Features WASD controls, physics-based movement, collision detection, and customizable player positioning.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to mount speeder",
          "description": "Message shown when player can enter the speeder"
        },
        {
          "name": "ENTER_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 150,
          "description": "Distance at which player can enter the speeder"
        },
        {
          "name": "ENTER_ANGLE",
          "type": "number",
          "range": "1-360",
          "default": 35,
          "description": "Angle range for entering the speeder"
        },
        {
          "name": "PLAYER_XZ_ADJUSTMENT",
          "type": "number",
          "range": "-100-100",
          "default": -8,
          "description": "Forward/back position offset of player on speeder"
        },
        {
          "name": "PLAYER_Y_ADJUSTMENT",
          "type": "number",
          "range": "0-100",
          "default": 40,
          "description": "Height offset of player on speeder"
        },
        {
          "name": "PLAYER_ANGLE_ADJUSTMENT",
          "type": "number",
          "range": "0-360",
          "default": 0,
          "description": "Rotation offset of player on speeder"
        },
        {
          "name": "MAXIMUM_SPEED",
          "type": "number",
          "range": "1.00-100.00",
          "default": 30.00,
          "description": "Maximum forward speed of the speeder"
        },
        {
          "name": "MINIMUM_SPEED",
          "type": "number",
          "range": "-100.00-100.00",
          "default": -20.00,
          "description": "Maximum reverse speed of the speeder"
        },
        {
          "name": "TURN_SPEED",
          "type": "number",
          "range": "0.00-50.00",
          "default": 5.00,
          "description": "How quickly the speeder can turn"
        },
        {
          "name": "ACCELERATION",
          "type": "number",
          "range": "0.0-10.0",
          "default": 3.0,
          "description": "How quickly the speeder gains speed"
        },
        {
          "name": "DECCELERATION",
          "type": "number",
          "range": "0.0-10.0",
          "default": 0.15,
          "description": "How quickly the speeder loses speed"
        },
        {
          "name": "IMPACT_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 150,
          "description": "Range for collision detection"
        },
        {
          "name": "IMPACT_ANGLE",
          "type": "number",
          "range": "1-360",
          "default": 40,
          "description": "Angle range for collision detection"
        },
        {
          "name": "SPEEDER_HEALTH",
          "type": "number",
          "range": "100-1000",
          "default": 1000,
          "description": "Health points of the speeder"
        },
        {
          "name": "MAXIMUM_SLOPE",
          "type": "number",
          "range": "1-100",
          "default": 19,
          "description": "Maximum slope angle the speeder can climb"
        },
        {
          "name": "USE_TEXT",
          "type": "string",
          "default": "WASD-drive, SPACE-Brake, /-Radio",
          "description": "Control instructions shown to player"
        },
        {
          "name": "LOCK_PLAYER",
          "type": "boolean",
          "default": false,
          "description": "Whether to lock player rotation to speeder"
        }
      ],
      "features": [
        "WASD driving controls",
        "Spacebar brake system",
        "Radio toggle with / key",
        "Collision detection and damage",
        "Health system",
        "Slope limitations",
        "Sound effects for movement",
        "Player position customization",
        "Automatic speed adjustment",
        "Impact detection with NPCs",
        "Terrain height awareness",
        "Underwater detection"
      ],
      "keywords": ["vehicle", "speeder", "transport", "drive", "mount", "movement", "collision", "physics"],
      "tutorial": {
        "steps": [
          "Create a vehicle model",
          "Set Physics to ON",
          "Set IsImmobile to YES",
          "Attach the speeder behavior",
          "Configure speed and handling",
          "Set up player positioning",
          "Add movement sound to Sound0",
          "Add idle sound to Sound1",
          "Add impact sound to Sound2",
          "Add radio sound to Sound3",
          "Test driving mechanics"
        ]
      },
      "relatedBehaviors": ["vehicle_control", "aircraft", "boat", "physics_object"]
    },
    "clone_entity": {
      "name": "Clone Entity",
      "file": "rpg/clone_entity.lua",
      "description": "A powerful entity cloning system that creates multiple copies of a named entity with configurable positioning, lifespan, health, and respawn cycles. Perfect for creating enemy spawners, object duplication, and dynamic entity generation.",
      "properties": [
        {
          "name": "CLONE_QUANTITY",
          "type": "number",
          "range": "1-100",
          "default": 1,
          "description": "Number of entities to clone (1 to 100)"
        },
        {
          "name": "CLONE_RANGE",
          "type": "number",
          "range": "25-1000",
          "default": 100,
          "description": "Range around the original entity for random positioning"
        },
        {
          "name": "CLONE_LIFESPAN",
          "type": "number",
          "range": "1-1000",
          "default": 3,
          "description": "Lifespan of cloned entities in minutes (1000 = eternal)"
        },
        {
          "name": "CLONE_HEALTH",
          "type": "dropdown",
          "default": "Cloned",
          "options": ["Cloned", "Random"],
          "description": "Health setting for cloned entities. Cloned = same as original, Random = random health"
        },
        {
          "name": "RESPAWN_CYCLE",
          "type": "dropdown",
          "default": "Off",
          "options": ["Off", "On"],
          "description": "Whether to respawn entities after they die or expire"
        },
        {
          "name": "RESPAWN_EVENTS",
          "type": "number",
          "range": "1-10",
          "default": 1,
          "description": "Number of respawn cycles allowed (1 to 10)"
        },
        {
          "name": "RESPAWN_INTERVAL",
          "type": "number",
          "range": "5-100",
          "default": 10,
          "description": "Time between respawns in seconds (5 to 100)"
        },
        {
          "name": "ENTITY_NAME",
          "type": "string",
          "default": "Rabbit",
          "description": "Name of the entity to clone (must match entity name exactly)"
        },
        {
          "name": "FORMATION",
          "type": "dropdown",
          "default": "Random",
          "options": ["Random", "Rows"],
          "description": "Positioning formation for cloned entities"
        },
        {
          "name": "NUMBER_PER_ROW",
          "type": "number",
          "range": "1-100",
          "default": 1,
          "description": "Number of entities per row when using row formation"
        }
      ],
      "features": [
        "Entity cloning with configurable quantity",
        "Random and row-based positioning systems",
        "Configurable entity lifespan and health",
        "Respawn cycle system with event limits",
        "Automatic entity discovery by name",
        "Surface height detection for proper positioning",
        "Gravity and collision management",
        "Logic connection triggers on completion",
        "Memory efficient entity tracking",
        "Player proximity activation",
        "Automatic cleanup of expired entities",
        "Formation-based positioning options",
        "Health randomization system",
        "Respawn interval control",
        "Entity rotation preservation"
      ],
      "keywords": ["clone", "entity", "spawn", "duplicate", "respawn", "formation", "lifespan", "health", "positioning", "generation"],
      "tutorial": {
        "videoId": "EWR9N6ZVQrc",
        "timestamp": "0:00",
        "steps": [
          "Create an entity to serve as the template for cloning",
          "Give the template entity a specific name",
          "Create an object to attach the clone_entity behavior to",
          "Set AlwaysActive to ON for the cloning object",
          "Attach the clone_entity behavior to the object",
          "Configure ENTITY_NAME to match the template entity name",
          "Set CLONE_QUANTITY for desired number of copies",
          "Configure CLONE_RANGE for positioning area",
          "Set CLONE_LIFESPAN for entity duration",
          "Choose CLONE_HEALTH setting (Cloned or Random)",
          "Configure FORMATION for positioning style",
          "Set RESPAWN_CYCLE and related respawn options",
          "Test cloning by triggering the behavior",
          "Verify entity positioning and lifespan",
          "Test respawn functionality if enabled",
          "Adjust settings for optimal gameplay"
        ]
      },
      "relatedBehaviors": ["spawn_system", "entity_manager", "respawn_system", "formation_controller", "entity_generator"]
    },
    "stealthshield": {
      "name": "Stealth Shield",
      "file": "rpg/stealthshield.lua",
      "description": "A comprehensive stealth system that provides temporary invisibility to enemies within a configurable radius. Features pickup mechanics, timed activation, weapon disabling options, and visual feedback with customizable HUD elements.",
      "properties": [
        {
          "name": "STYLE",
          "type": "dropdown",
          "default": "Pickup",
          "options": ["Pickup", "Collected"],
          "description": "Behavior style. Pickup = visible object to collect, Collected = already in inventory"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "0-100",
          "default": 80,
          "description": "Distance at which the player can pick up the stealth shield"
        },
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to Pickup",
          "description": "Text displayed when player is in range to pick up the shield"
        },
        {
          "name": "USE_TEXT",
          "type": "string",
          "default": "+ Shield On, - Shield Off",
          "description": "Text displayed after pickup showing how to use the shield"
        },
        {
          "name": "ON_TEXT",
          "type": "string",
          "default": "Stealth Shield ON",
          "description": "Text displayed when shield is activated"
        },
        {
          "name": "OFF_TEXT",
          "type": "string",
          "default": "Stealth Shield OFF",
          "description": "Text displayed when shield is deactivated"
        },
        {
          "name": "MODE",
          "type": "dropdown",
          "default": "Timed",
          "options": ["Timed", "Random"],
          "description": "Duration mode. Timed = fixed duration, Random = random duration"
        },
        {
          "name": "DURATION",
          "type": "number",
          "range": "1-60",
          "default": 30,
          "description": "Duration of stealth shield in seconds (1 to 60)"
        },
        {
          "name": "DISCOVERY_RANGE",
          "type": "number",
          "range": "50-2000",
          "default": 50,
          "description": "Minimum distance enemies must be to be affected by stealth"
        },
        {
          "name": "SHIELD_RADIUS",
          "type": "number",
          "range": "50-2000",
          "default": 800,
          "description": "Maximum distance enemies can be affected by stealth shield"
        },
        {
          "name": "NO_OF_USES",
          "type": "number",
          "range": "1-3",
          "default": 1,
          "description": "Number of times the stealth shield can be used (1 to 3)"
        },
        {
          "name": "ICON_IMAGEFILE",
          "type": "string",
          "default": "imagebank\\misc\\testimages\\stealthshield_icon.png",
          "description": "Path to the stealth shield icon image"
        },
        {
          "name": "ICON_POSITION_X",
          "type": "number",
          "range": "0-100",
          "default": 50,
          "description": "Horizontal position of shield icon on screen (0 to 100, percentage)"
        },
        {
          "name": "ICON_POSITION_Y",
          "type": "number",
          "range": "0-100",
          "default": 90,
          "description": "Vertical position of shield icon on screen (0 to 100, percentage)"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the stealth shield object"
        },
        {
          "name": "DISABLE_WEAPON",
          "type": "boolean",
          "default": false,
          "description": "Whether to disable player weapons while stealth shield is active"
        }
      ],
      "features": [
        "Interactive pickup system with proximity detection",
        "Temporary stealth activation with configurable duration",
        "Enemy allegiance manipulation for stealth effect",
        "Configurable stealth radius and discovery range",
        "Multiple use system with usage tracking",
        "Visual HUD icon with fade-out effect",
        "Real-time shield timer display",
        "Weapon disabling option during stealth",
        "Sound effects for pickup and activation",
        "Configurable prompt display locations",
        "Item highlighting and selection system",
        "Logic connection support for game events",
        "Memory efficient entity tracking",
        "Automatic cleanup after uses exhausted",
        "Random duration mode for unpredictable gameplay"
      ],
      "keywords": ["stealth", "shield", "invisibility", "pickup", "duration", "enemy", "allegiance", "hud", "timer", "weapon", "activation"],
      "tutorial": {
        "videoId": "9zr2kJ2bX6g",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the stealth shield",
          "Set AlwaysActive to ON for the object",
          "Attach the stealthshield behavior",
          "Configure STYLE (Pickup or Collected)",
          "Set PICKUP_RANGE for interaction distance",
          "Configure PROMPT_TEXT and USE_TEXT",
          "Set DURATION and MODE for shield timing",
          "Configure DISCOVERY_RANGE and SHIELD_RADIUS",
          "Set NO_OF_USES for multiple activations",
          "Configure ICON settings for HUD display",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Enable DISABLE_WEAPON if needed",
          "Add sound effects to Sound0 slot",
          "Test pickup functionality within range",
          "Verify shield activation with +/- keys",
          "Test enemy stealth effect within radius",
          "Verify HUD timer and icon display",
          "Test weapon disabling if enabled",
          "Verify multiple uses and cleanup"
        ]
      },
      "relatedBehaviors": ["stealth_system", "pickup_system", "hud_interface", "enemy_control", "weapon_system"]
    },
    "xp": {
      "name": "Experience Points",
      "file": "rpg/xp.lua",
      "description": "A flexible experience points system that allows players to gain or lose XP through interactive objects. Features configurable pickup styles, automatic/manual collection, global variable integration, and sound effects for RPG progression systems.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to consume",
          "description": "Text displayed when player is in range to use the XP object"
        },
        {
          "name": "PROMPT_IF_COLLECTABLE",
          "type": "string",
          "default": "E to collect",
          "description": "Text displayed when the object is collectable"
        },
        {
          "name": "USAGE_TEXT",
          "type": "string",
          "default": "XP consumed",
          "description": "Text displayed when XP is successfully consumed"
        },
        {
          "name": "QUANTITY",
          "type": "number",
          "range": "1-100",
          "default": 10,
          "description": "Amount of XP to add or deduct (1 to 100)"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can interact with the XP object"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "dropdown",
          "default": "Automatic",
          "options": ["Automatic", "Manual"],
          "description": "Collection style. Automatic = immediate pickup, Manual = requires E key press"
        },
        {
          "name": "EFFECT",
          "type": "dropdown",
          "default": "Add",
          "options": ["Add", "Deduct"],
          "description": "XP effect. Add = increase player XP, Deduct = decrease player XP"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Name of the global variable to store XP (e.g., MyXP)"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the XP object"
        }
      ],
      "features": [
        "Flexible XP gain and loss system",
        "Automatic and manual pickup styles",
        "Global variable integration for XP storage",
        "Configurable XP quantity and effects",
        "Collectable object support",
        "Sound effects for usage and collection",
        "Configurable prompt display locations",
        "Item highlighting and selection system",
        "Logic connection triggers on XP gain/loss",
        "Resource depletion system integration",
        "Proximity-based interaction",
        "Memory efficient variable management",
        "Automatic object cleanup after use",
        "Support for both positive and negative XP",
        "RPG progression system integration"
      ],
      "keywords": ["xp", "experience", "points", "rpg", "progression", "pickup", "global", "variable", "gain", "loss", "leveling"],
      "tutorial": {
        "videoId": "jLDd2dqnzuc",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the XP pickup",
          "Set AlwaysActive to ON for the object",
          "Attach the xp behavior to the object",
          "Configure PROMPT_TEXT for interaction message",
          "Set QUANTITY for desired XP amount",
          "Configure PICKUP_RANGE for interaction distance",
          "Choose PICKUP_STYLE (Automatic or Manual)",
          "Set EFFECT (Add or Deduct) for XP direction",
          "Configure USER_GLOBAL_AFFECTED with global variable name",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Add sound effects to Sound0 (usage) and Sound1 (collection)",
          "Test automatic pickup if using automatic style",
          "Test manual pickup with E key if using manual style",
          "Verify XP is added/deducted from global variable",
          "Test collectable object functionality",
          "Verify logic connections trigger correctly",
          "Test resource depletion system",
          "Adjust settings for optimal gameplay balance"
        ]
      },
      "relatedBehaviors": ["rpg_system", "global_variables", "pickup_system", "progression_system", "resource_system"]
    },
    "mousecontrol": {
      "name": "Mouse Control",
      "file": "puzzle/mousecontrol.lua",
      "description": "A comprehensive mouse interaction system that allows players to interact with objects using mouse clicks. Features configurable click controls, visual cursor feedback, object detection, and automatic weapon management for immersive point-and-click gameplay.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "1-300",
          "default": 100,
          "description": "Maximum range for mouse interaction with objects"
        },
        {
          "name": "TIMER_ADJUST",
          "type": "number",
          "range": "1-5000",
          "default": 500,
          "description": "Delay in milliseconds before allowing another click action"
        },
        {
          "name": "ACTION_CONTROL",
          "type": "dropdown",
          "default": "Left Button",
          "options": ["Left Button", "Right Button", "Left or Right Button", "Left and Right Buttons"],
          "description": "Which mouse buttons trigger the interaction"
        },
        {
          "name": "POINTER",
          "type": "dropdown",
          "default": "On",
          "options": ["On", "Off", "Crosshair", "Mouse", "Adaptive"],
          "description": "Visual cursor style. On = text pointer, Off = no pointer, Crosshair = + symbol, Mouse = graphic cursor, Adaptive = context-sensitive cursors"
        }
      ],
      "features": [
        "Mouse click interaction system",
        "Configurable click controls (left, right, or both buttons)",
        "Visual cursor feedback with multiple styles",
        "Object detection and targeting system",
        "Automatic weapon management during interactions",
        "Context-sensitive cursor changes based on object type",
        "Allegiance-based cursor adaptation",
        "Collectable object detection and highlighting",
        "NPC interaction cursors (speak, fight)",
        "Action-specific cursors (carry, hand)",
        "Click timing and cooldown system",
        "Sound effect integration for mouse clicks",
        "Ray casting for accurate object selection",
        "Camera-based interaction targeting",
        "Memory efficient sprite management"
      ],
      "keywords": ["mouse", "control", "interaction", "click", "cursor", "pointer", "targeting", "object", "detection", "allegiance"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an object to attach the mousecontrol behavior to",
          "Set AlwaysActive to ON for the object",
          "Attach the mousecontrol behavior",
          "Configure RANGE for interaction distance",
          "Set TIMER_ADJUST for click cooldown timing",
          "Choose ACTION_CONTROL for desired mouse button(s)",
          "Select POINTER style for visual feedback",
          "Add sound effects to Sound0 slot for click sounds",
          "Test mouse interaction with objects in range",
          "Verify cursor changes based on object allegiance",
          "Test different pointer styles and their effects",
          "Verify click timing and cooldown system",
          "Test weapon management during interactions",
          "Check context-sensitive cursor changes",
          "Verify object detection and targeting accuracy",
          "Test with different object types and allegiances",
          "Adjust settings for optimal gameplay experience"
        ]
      },
      "relatedBehaviors": ["interaction_system", "cursor_control", "object_detection", "weapon_system", "allegiance_system"]
    },
    "bottled_item": {
      "name": "Bottled Item",
      "file": "rpg/bottled_item.lua",
      "description": "A consumable item system that provides health restoration or damage effects when consumed. Features configurable health effects, poisoning mechanics, global variable integration, and visual feedback for potions, elixirs, and other bottled consumables.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "Press E to consume",
          "description": "Text displayed when player is in range to consume the bottled item"
        },
        {
          "name": "QUANTITY",
          "type": "number",
          "range": "1-40",
          "default": 10,
          "description": "Amount of health to add or deduct when consumed (1 to 40)"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can interact with the bottled item"
        },
        {
          "name": "EFFECT",
          "type": "dropdown",
          "default": "Add",
          "options": ["Add", "Deduct"],
          "description": "Health effect. Add = restore health, Deduct = damage player"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "MyHealth",
          "description": "Name of the global variable to track health (e.g., MyHealth)"
        },
        {
          "name": "POISONING_EFFECT",
          "type": "boolean",
          "default": false,
          "description": "Whether the item causes poisoning effects when consumed"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the bottled item"
        }
      ],
      "features": [
        "Health restoration and damage system",
        "Configurable health quantity and effects",
        "Poisoning mechanics with visual feedback",
        "Global variable integration for health tracking",
        "Proximity-based interaction system",
        "Sound effects for consumption and poisoning",
        "Configurable prompt display locations",
        "Item highlighting and selection system",
        "Health cap enforcement (cannot exceed max health)",
        "Poisoning duration and screen shake effects",
        "Automatic object cleanup after consumption",
        "Memory efficient variable management",
        "Logic connection support for game events",
        "Support for both beneficial and harmful items",
        "RPG consumable system integration"
      ],
      "keywords": ["bottle", "consumable", "health", "potion", "elixir", "poison", "restoration", "damage", "rpg", "item"],
      "tutorial": {
        "videoId": "vWj4JyHy8xg",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the bottled item",
          "Set AlwaysActive to ON for the object",
          "Attach the bottled_item behavior",
          "Configure PROMPT_TEXT for interaction message",
          "Set QUANTITY for desired health effect amount",
          "Configure PICKUP_RANGE for interaction distance",
          "Choose EFFECT (Add or Deduct) for health direction",
          "Set USER_GLOBAL_AFFECTED with global variable name",
          "Enable POISONING_EFFECT if desired",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Add sound effects to Sound0 (consumption) and Sound1 (poisoning)",
          "Test interaction within pickup range",
          "Verify health is added/deducted correctly",
          "Test health cap enforcement (max health limit)",
          "Verify global variable updates correctly",
          "Test poisoning effects if enabled",
          "Check screen shake and visual feedback",
          "Verify object cleanup after consumption",
          "Test with different quantity and effect settings"
        ]
      },
      "relatedBehaviors": ["health_system", "consumable_system", "poison_system", "global_variables", "rpg_system"]
    },
    "message": {
      "name": "Message Display",
      "file": "puzzle/message.lua",
      "description": "A sophisticated text display system that shows messages with typewriter effects, configurable colors, positioning, and timing. Features multi-line support, letter-by-letter typing animation, and optional player camera lock for immersive storytelling and mission briefings.",
      "properties": [
        {
          "name": "TEXT1",
          "type": "string",
          "default": "MISSION DEBRIEF: Operation X5s",
          "description": "First line of text to display"
        },
        {
          "name": "TEXT2",
          "type": "string",
          "default": "Cpt. Hughes - Infiltration Unit 6",
          "description": "Second line of text to display"
        },
        {
          "name": "TEXT3",
          "type": "string",
          "default": "Deploy and infiltrate Maersk Operations Complex",
          "description": "Third line of text to display"
        },
        {
          "name": "TEXT4",
          "type": "string",
          "default": "Seek and destroy valid targets and recover",
          "description": "Fourth line of text to display"
        },
        {
          "name": "TEXT5",
          "type": "string",
          "default": "classified documents from Dr. Gebchev",
          "description": "Fifth line of text to display"
        },
        {
          "name": "X",
          "type": "number",
          "default": 10,
          "description": "Horizontal position of text on screen"
        },
        {
          "name": "Y",
          "type": "number",
          "default": 10,
          "description": "Vertical position of text on screen"
        },
        {
          "name": "COLOUR",
          "type": "dropdown",
          "default": "White",
          "options": ["White", "Green", "Blue", "Yellow", "Orange", "Red"],
          "description": "Color of the displayed text"
        },
        {
          "name": "SIZE",
          "type": "number",
          "range": "1-5",
          "default": 3,
          "description": "Font size of the text (1 to 5)"
        },
        {
          "name": "STYLE",
          "type": "dropdown",
          "default": "Left",
          "options": ["Left", "Center"],
          "description": "Text alignment style"
        },
        {
          "name": "LINES_SHOWN",
          "type": "number",
          "range": "1-5",
          "default": 5,
          "description": "Number of text lines visible at once (1 to 5)"
        },
        {
          "name": "LETTER_DELAY",
          "type": "number",
          "default": 0.05,
          "description": "Delay between each letter appearing (in seconds)"
        },
        {
          "name": "LINES_DELAY",
          "type": "number",
          "default": 0.8,
          "description": "Delay between lines appearing (in seconds)"
        },
        {
          "name": "DISPLAY_TIME",
          "type": "number",
          "range": "1-10",
          "default": 5,
          "description": "Additional display time for the final line (1 to 10 seconds)"
        },
        {
          "name": "LOCK_PLAYER",
          "type": "boolean",
          "default": false,
          "description": "Whether to lock player camera during message display"
        }
      ],
      "features": [
        "Typewriter text animation system",
        "Multi-line message support (up to 5 lines)",
        "Configurable text colors and positioning",
        "Letter-by-letter typing effect with sound",
        "Line-by-line progression with delays",
        "Optional player camera lock during display",
        "Text alignment options (left or center)",
        "Configurable font sizes and display timing",
        "Sound effects for letter typing",
        "Automatic text scrolling for long messages",
        "Memory efficient text management",
        "Zone and switch trigger integration",
        "Immersive storytelling capabilities",
        "Mission briefing and tutorial support",
        "Camera override control system"
      ],
      "keywords": ["message", "text", "display", "typewriter", "story", "briefing", "tutorial", "animation", "color", "position"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an object to attach the message behavior to",
          "Set AlwaysActive to ON for the object",
          "Attach the message behavior",
          "Configure TEXT1 through TEXT5 with your message content",
          "Set X and Y for text positioning on screen",
          "Choose COLOUR for desired text appearance",
          "Configure SIZE for font size (1-5)",
          "Select STYLE for text alignment (Left or Center)",
          "Set LINES_SHOWN for visible line count",
          "Configure LETTER_DELAY for typing speed",
          "Set LINES_DELAY for line progression timing",
          "Configure DISPLAY_TIME for final line duration",
          "Enable LOCK_PLAYER if camera lock is desired",
          "Add sound effects to Sound0 for letter typing",
          "Link the object to a zone or switch for triggering",
          "Test message display and timing",
          "Verify text positioning and alignment",
          "Check camera lock functionality if enabled",
          "Adjust timing settings for optimal readability",
          "Test with different message lengths and content"
        ]
      },
      "relatedBehaviors": ["text_system", "camera_control", "story_system", "tutorial_system", "ui_system"]
    },
    "ring_counter": {
      "name": "Ring Counter",
      "file": "puzzle/ring_counter.lua",
      "description": "A dynamic ring system that players can pass through with configurable effects. Features static and alternating ring types, visual effects, health restoration, global variable integration, and multiple trigger options for creating interactive gameplay elements.",
      "properties": [
        {
          "name": "RING_RANGE",
          "type": "number",
          "range": "0-500",
          "default": 80,
          "description": "Distance at which the ring activates when player passes through"
        },
        {
          "name": "RING_TYPE",
          "type": "dropdown",
          "default": "Static Color",
          "options": ["Static Color", "Alternate Color"],
          "description": "Ring behavior type. Static = always active, Alternate = cycles between safe/unsafe states"
        },
        {
          "name": "ALTERNATING_TIME",
          "type": "number",
          "range": "1-30",
          "default": 5,
          "description": "Time in seconds for alternating ring state changes"
        },
        {
          "name": "TRIGGER_TYPE",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Lose Game", "Win Game", "Linked/IfUsed"],
          "description": "Action to take when ring is triggered"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Name of the global variable to affect (e.g., MyPoints)"
        },
        {
          "name": "AFFECT_AMOUNT",
          "type": "number",
          "range": "1-10",
          "default": 1,
          "description": "Amount to add or deduct from global variable or health"
        },
        {
          "name": "PULSE_EFFECT",
          "type": "dropdown",
          "default": "Off",
          "options": ["On", "Off"],
          "description": "Whether to enable pulsing emissive effect"
        },
        {
          "name": "PULSE_STRENGTH",
          "type": "number",
          "range": "1-2000",
          "default": 1000,
          "description": "Maximum strength of the pulse effect"
        },
        {
          "name": "PULSE_SPEED",
          "type": "number",
          "range": "1-100",
          "default": 20,
          "description": "Speed of the pulse effect"
        },
        {
          "name": "SPIN_EFFECT",
          "type": "dropdown",
          "default": "Off",
          "options": ["On", "Off"],
          "description": "Whether to enable spinning effect"
        },
        {
          "name": "SPINSPEED",
          "type": "number",
          "range": "1-500",
          "default": 5,
          "description": "Speed of the spinning effect"
        },
        {
          "name": "SPIN_X",
          "type": "boolean",
          "default": false,
          "description": "Whether to spin on X axis"
        },
        {
          "name": "SPIN_Y",
          "type": "boolean",
          "default": false,
          "description": "Whether to spin on Y axis"
        },
        {
          "name": "SPIN_Z",
          "type": "boolean",
          "default": true,
          "description": "Whether to spin on Z axis"
        },
        {
          "name": "SPIN_DIRECTION",
          "type": "dropdown",
          "default": "Clockwise",
          "options": ["Clockwise", "Anti-Clockwise"],
          "description": "Direction of the spinning effect"
        },
        {
          "name": "AUGMENTS",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Health", "Health+Repair"],
          "description": "Health effects. None = no health effect, Health = restore player health, Health+Repair = restore player and nearby entity health"
        }
      ],
      "features": [
        "Static and alternating ring types",
        "Configurable activation range and timing",
        "Visual effects with pulsing and spinning",
        "Health restoration and repair capabilities",
        "Global variable integration for scoring",
        "Multiple trigger actions (win/lose/linked)",
        "Emissive color changes for state indication",
        "Automatic ring destruction after use",
        "Sound effects for success and failure",
        "Logic connection support for game events",
        "Proximity-based activation system",
        "Memory efficient state management",
        "Entity health repair for nearby objects",
        "Configurable visual feedback systems",
        "Game state control integration"
      ],
      "keywords": ["ring", "counter", "trigger", "health", "repair", "pulse", "spin", "alternating", "static", "proximity"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the ring",
          "Set AlwaysActive to ON for the object",
          "Attach the ring_counter behavior",
          "Configure RING_RANGE for activation distance",
          "Choose RING_TYPE (Static or Alternate)",
          "Set ALTERNATING_TIME if using alternate type",
          "Choose TRIGGER_TYPE for desired action",
          "Configure USER_GLOBAL_AFFECTED if using global variables",
          "Set AFFECT_AMOUNT for effect strength",
          "Enable PULSE_EFFECT and configure pulse settings",
          "Enable SPIN_EFFECT and configure spin settings",
          "Set SPIN axes (X, Y, Z) and direction",
          "Choose AUGMENTS for health effects",
          "Add sound effects to Sound0 (success) and Sound1 (failure)",
          "Test ring activation by passing through",
          "Verify visual effects and state changes",
          "Test alternating ring timing if enabled",
          "Verify health restoration and repair",
          "Check global variable updates",
          "Test trigger actions and logic connections",
          "Adjust settings for optimal gameplay"
        ]
      },
      "relatedBehaviors": ["trigger_system", "health_system", "visual_effects", "global_variables", "game_state"]
    },
    "winkill": {
      "name": "Win Kill",
      "file": "puzzle/winkill.lua",
      "description": "A level completion system that monitors enemy elimination and triggers level progression when all enemies are defeated. Features enemy counter display, configurable completion messages, delay timing, and automatic level transitions for mission-based gameplay.",
      "properties": [
        {
          "name": "ENEMY_COUNTER",
          "type": "dropdown",
          "default": "Off",
          "options": ["Off", "On"],
          "description": "Whether to display the enemy counter on screen"
        },
        {
          "name": "COUNTER_TEXT",
          "type": "string",
          "default": "Targets Remaining",
          "description": "Text displayed with the enemy counter"
        },
        {
          "name": "END_TEXT",
          "type": "string",
          "default": "All Targets Eliminated",
          "description": "Text displayed when all enemies are eliminated"
        },
        {
          "name": "END_DELAY",
          "type": "number",
          "range": "1-60",
          "default": 1,
          "description": "Delay in seconds before level transition (1 to 60)"
        },
        {
          "name": "GoToLevelMode",
          "type": "dropdown",
          "default": "Use Storyboard Logic",
          "options": ["Use Storyboard Logic", "Go to Specific Level"],
          "description": "Controls whether to load the next level in the Storyboard or a specific level"
        },
        {
          "name": "ResetStates",
          "type": "boolean",
          "default": false,
          "description": "Whether to reset states when entering the new level"
        }
      ],
      "features": [
        "Automatic enemy monitoring and counting",
        "Real-time enemy counter display",
        "Configurable completion messages",
        "Level transition with delay timing",
        "Storyboard and specific level support",
        "State reset options for new levels",
        "Logic connection triggers on completion",
        "Sound effects for level completion",
        "Allegiance-based enemy detection",
        "Health-based enemy validation",
        "Memory efficient entity tracking",
        "Automatic level progression system",
        "Mission completion integration",
        "Game state management",
        "Visual feedback for player progress"
      ],
      "keywords": ["win", "kill", "enemy", "counter", "level", "completion", "transition", "mission", "elimination", "progression"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an object to attach the winkill behavior to",
          "Set AlwaysActive to ON for the object",
          "Attach the winkill behavior",
          "Enable ENEMY_COUNTER if you want on-screen counter",
          "Configure COUNTER_TEXT for counter display",
          "Set END_TEXT for completion message",
          "Configure END_DELAY for transition timing",
          "Choose GoToLevelMode for level progression",
          "Enable ResetStates if state reset is needed",
          "Add sound effects to Sound0 for completion",
          "Ensure enemies have allegiance set to 0 (enemy)",
          "Test enemy elimination and counter updates",
          "Verify completion message appears",
          "Check level transition timing and behavior",
          "Test logic connections if linked",
          "Verify sound effects play correctly",
          "Test with different enemy counts",
          "Check storyboard progression if enabled",
          "Verify state reset functionality if enabled",
          "Adjust settings for optimal gameplay flow"
        ]
      },
      "relatedBehaviors": ["enemy_system", "level_control", "mission_system", "game_state", "progression_system"]
    },
    "oxygen": {
      "name": "Oxygen Supply",
      "file": "rpg/oxygen.lua",
      "description": "A dual-purpose pickup system that provides both health restoration and oxygen supply extension. Features automatic and manual pickup styles, configurable quantities, and integration with the game's drowning system for underwater or space-based survival gameplay.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to use",
          "description": "Text displayed when player is in range to use the oxygen supply"
        },
        {
          "name": "HEALTH_QUANTITY",
          "type": "number",
          "range": "1-40",
          "default": 10,
          "description": "Amount of health to restore when collected (1 to 40)"
        },
        {
          "name": "OXYGEN_QUANTITY",
          "type": "number",
          "range": "1-80",
          "default": 10,
          "description": "Amount of oxygen time to add when collected (1 to 80)"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can interact with the oxygen supply"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "dropdown",
          "default": "Automatic",
          "options": ["Automatic", "Manual"],
          "description": "Collection style. Automatic = immediate pickup, Manual = requires E key press"
        },
        {
          "name": "COLLECTED_TEXT",
          "type": "string",
          "default": "Collected oxygen supply",
          "description": "Text displayed when oxygen supply is successfully collected"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the oxygen supply object"
        }
      ],
      "features": [
        "Dual restoration system (health and oxygen)",
        "Automatic and manual pickup styles",
        "Configurable health and oxygen quantities",
        "Integration with game drowning system",
        "Proximity-based interaction system",
        "Sound effects for collection",
        "Configurable prompt display locations",
        "Item highlighting and selection system",
        "Logic connection triggers on collection",
        "Automatic object cleanup after use",
        "Oxygen time extension calculation",
        "Health restoration with quantity limits",
        "Memory efficient variable management",
        "Survival gameplay integration",
        "Underwater and space environment support"
      ],
      "keywords": ["oxygen", "health", "supply", "pickup", "survival", "drowning", "underwater", "restoration", "breathing"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the oxygen supply",
          "Set AlwaysActive to ON for the object",
          "Attach the oxygen behavior",
          "Configure PROMPT_TEXT for interaction message",
          "Set HEALTH_QUANTITY for health restoration amount",
          "Set OXYGEN_QUANTITY for oxygen time extension",
          "Configure PICKUP_RANGE for interaction distance",
          "Choose PICKUP_STYLE (Automatic or Manual)",
          "Set COLLECTED_TEXT for success message",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Add sound effects to Sound0 slot",
          "Test automatic pickup if using automatic style",
          "Test manual pickup with E key if using manual style",
          "Verify health is restored correctly",
          "Test oxygen time extension in drowning scenarios",
          "Verify logic connections trigger correctly",
          "Test with different quantity settings",
          "Check prompt display and highlighting",
          "Verify object cleanup after collection"
        ]
      },
      "relatedBehaviors": ["health_system", "survival_system", "pickup_system", "drowning_system", "environmental_hazard"]
    },
    "shop": {
      "name": "Shop System",
      "file": "rpg/shop.lua",
      "description": "A comprehensive shop system that allows players to trade goods through an interactive interface. Features configurable shop containers, level-based inventory, HUD screen integration, and dynamic shop naming for creating merchants, vendors, and trading systems.",
      "properties": [
        {
          "name": "USE_RANGE",
          "type": "number",
          "default": 100,
          "description": "Distance at which the player can interact with the shop"
        },
        {
          "name": "USE_PROMPT",
          "type": "string",
          "default": "Press E to shop",
          "description": "Text displayed when player is in range to access the shop"
        },
        {
          "name": "SHOP_SCREEN",
          "type": "string",
          "default": "HUD Screen 5",
          "description": "HUD screen to display when shop is opened"
        },
        {
          "name": "SHOP_CONTAINER",
          "type": "string",
          "default": "shop",
          "description": "Container entity that holds the shop inventory (e.g., 'shop')"
        },
        {
          "name": "SHOP_NAME",
          "type": "string",
          "default": "The Shop",
          "description": "Name displayed for the shop in the interface"
        },
        {
          "name": "LEVEL_BIAS",
          "type": "boolean",
          "default": false,
          "description": "Whether to rename shop container based on player level (e.g., 'shop' becomes 'shop5' for level 5)"
        }
      ],
      "features": [
        "Interactive shop interface system",
        "Configurable interaction range and prompts",
        "HUD screen integration for shop display",
        "Container-based inventory management",
        "Dynamic shop naming and identification",
        "Level-based inventory system",
        "Sound effects for shop interaction",
        "Proximity-based activation system",
        "Global variable integration for shop data",
        "Automatic container name generation",
        "Screen toggle functionality",
        "Memory efficient shop management",
        "Merchant and vendor system support",
        "Trading and economy integration",
        "Player level progression support"
      ],
      "keywords": ["shop", "merchant", "vendor", "trade", "inventory", "container", "economy", "buy", "sell", "interface"],
      "tutorial": {
        "videoId": "CgKyusdZmzY",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the shop",
          "Set AlwaysActive to ON for the object",
          "Attach the shop behavior",
          "Configure USE_RANGE for interaction distance",
          "Set USE_PROMPT for interaction message",
          "Configure SHOP_SCREEN for HUD display",
          "Set SHOP_CONTAINER with inventory container name",
          "Configure SHOP_NAME for shop identification",
          "Enable LEVEL_BIAS if level-based inventory is desired",
          "Add sound effects to Sound0 slot",
          "Create a container entity with the specified SHOP_CONTAINER name",
          "Populate the container with items for sale",
          "Test shop interaction within range",
          "Verify HUD screen opens correctly",
          "Check shop name display in interface",
          "Test level-based container naming if enabled",
          "Verify sound effects play correctly",
          "Test with different container configurations",
          "Check global variable integration",
          "Verify shop interface functionality"
        ]
      },
      "relatedBehaviors": ["inventory_system", "hud_interface", "container_system", "economy_system", "merchant_system"]
    },
    "ammo": {
      "name": "Ammo",
      "file": "ammo.lua",
      "description": "An ammunition pickup system that gives the player ammunition when collected. Features configurable pickup styles (ranged and accurate), visual highlighting options, logic connections, and sound effects. Perfect for creating ammunition pickups, weapon supplies, and collectible ammo items in games.",
      "properties": [
        {
          "name": "PROMPTTEXT",
          "type": "string",
          "default": "E to use",
          "description": "Text displayed when the player can collect the ammunition"
        },
        {
          "name": "QUANTITY",
          "type": "number",
          "range": "1-100",
          "default": 0,
          "description": "Amount of ammunition to give to the player"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 90,
          "description": "Distance at which the player can collect the ammunition"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "dropdown",
          "default": "Ranged",
          "options": ["Ranged", "Accurate"],
          "description": "Pickup style: Ranged = automatic pickup, Accurate = requires targeting and key press"
        },
        {
          "name": "COLLECTION_TEXT",
          "type": "string",
          "default": "Ammunition collected",
          "description": "Text displayed when ammunition is successfully collected"
        },
        {
          "name": "PLAY_PICKUP",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether to play pickup sound when collecting ammunition"
        },
        {
          "name": "ACTIVATE_LOGIC",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether to activate logic connections when collecting ammunition"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline", "Icon"],
          "description": "Visual highlighting method for the ammunition object"
        },
        {
          "name": "HIGHLIGHT_ICON_IMAGEFILE",
          "type": "string",
          "default": "imagebank\\icons\\pickup.png",
          "description": "Path to icon image file for icon highlighting"
        }
      ],
      "features": [
        "Ammunition pickup system",
        "Configurable pickup styles (ranged and accurate)",
        "Visual highlighting options",
        "Logic connection integration",
        "Sound effect integration",
        "Player ammo management",
        "Automatic pickup functionality",
        "Targeted pickup system",
        "Icon highlighting system",
        "Collection feedback system",
        "Range-based interaction",
        "Weapon supply management"
      ],
      "keywords": ["ammo", "ammunition", "pickup", "weapon", "supply", "collect", "highlight", "range", "target", "icon"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an ammo object",
          "Set AlwaysActive to ON",
          "Attach the ammo behavior",
          "Configure prompt text and pickup range",
          "Set up ammunition quantity",
          "Choose pickup style (ranged or accurate)",
          "Configure collection text",
          "Set up sound and logic preferences",
          "Configure visual highlighting options",
          "Set up icon image file if using icon highlighting",
          "Test pickup functionality",
          "Verify ammunition addition to player",
          "Check logic connections and sound effects",
          "Test different pickup styles"
        ]
      },
            "relatedBehaviors": ["pickup_system", "weapon_system", "ammunition_system", "highlight_system", "logic_connections", "sound_system"]
    },
    "face_object": {
      "name": "Face Object",
      "file": "objects/face_object.lua",
      "description": "An object rotation system that makes an object automatically rotate to face the nearest other object within a specified range. Features configurable detection range, nearest entity detection, automatic rotation calculation, and Y-axis rotation only. Perfect for creating turrets, security cameras, tracking objects, and directional entities in games.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "60-3000",
          "default": 300,
          "description": "Detection range within which the object will look for other entities to face"
        }
      ],
      "features": [
        "Automatic object rotation system",
        "Nearest entity detection",
        "Configurable detection range",
        "Y-axis rotation only",
        "Distance-based targeting",
        "Active entity filtering",
        "Health-based entity filtering",
        "Real-time rotation calculation",
        "Automatic angle computation",
        "Entity proximity detection",
        "Tracking system functionality",
        "Directional object behavior"
      ],
      "keywords": ["face", "object", "rotation", "tracking", "nearest", "entity", "range", "detection", "turret", "camera", "direction"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create a face object entity",
          "Set AlwaysActive to ON",
          "Attach the face_object behavior",
          "Configure detection range for entity targeting",
          "Position the object in your game world",
          "Add other entities within the detection range",
          "Test object rotation functionality",
          "Verify nearest entity detection",
          "Check rotation to face nearest entity",
          "Test range-based detection limits",
          "Verify Y-axis rotation only",
          "Test with multiple entities in range"
        ]
      },
      "relatedBehaviors": ["rotation_system", "tracking_system", "entity_detection", "proximity_system", "direction_system", "turret_system"]
    },
    "save_point": {
      "name": "Save Point",
      "file": "effects/save_point.lua",
      "description": "A comprehensive save point system that allows players to save their game progress with configurable activation methods, prompts, and save functionality. Features automatic save slot creation, player state preservation, animation support, and logic connections. Perfect for creating save stations, progress checkpoints, and game state preservation in games.",
      "properties": [
        {
          "name": "ACTIVATION",
          "type": "dropdown",
          "default": "By This Object",
          "options": ["By This Object", "By External Zone/Switch"],
          "description": "How the save point is activated: direct object interaction or external trigger"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 80,
          "description": "Distance at which the player can interact with the save point"
        },
        {
          "name": "PROMPT_MESSAGE",
          "type": "string",
          "default": "Press E to save",
          "description": "Text displayed when the player can interact with the save point"
        },
        {
          "name": "SAVE_MESSAGE",
          "type": "string",
          "default": "Saving..",
          "description": "Text displayed when the save point is activated"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompt messages"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting method for the save point object"
        }
      ],
      "features": [
        "Save point system",
        "Configurable activation methods",
        "Automatic save slot creation",
        "Player state preservation",
        "Animation support (on/off states)",
        "Sound effect integration",
        "Logic connection support",
        "Prompt display customization",
        "Visual highlighting options",
        "Game data management",
        "Player attribute saving",
        "Save slot naming system",
        "Cooldown timer system"
      ],
      "keywords": ["save", "point", "checkpoint", "progress", "game", "data", "slot", "state", "preservation", "activation", "prompt"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create a save point object",
          "Set AlwaysActive to ON",
          "Attach the save_point behavior",
          "Configure activation method (object or external)",
          "Set up use range and prompt messages",
          "Configure prompt display location",
          "Set up visual highlighting if needed",
          "Add save sound to Sound0",
          "Set up ON/OFF animations if desired",
          "Test save point interaction",
          "Verify save slot creation",
          "Check player state preservation",
          "Test logic connections",
          "Verify cooldown timer functionality"
        ]
      },
      "relatedBehaviors": ["save_system", "checkpoint_system", "game_data_system", "animation_system", "logic_connections", "prompt_system"]
    },
    "play_animation": {
      "name": "Play Animation",
      "file": "people/play_animation.lua",
      "description": "A proximity-based animation system that plays different animations based on player distance. Features action and idle animation states, configurable ranges, sound effects, and optional melee weapon integration. Perfect for creating responsive NPCs, animated characters, and dynamic behavior systems in games.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "1-1000",
          "default": 400,
          "description": "Distance at which the entity switches from idle to action animations"
        },
        {
          "name": "ActionPlay",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to play when player is within range (action state)"
        },
        {
          "name": "ActionLoop",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to loop when player is within range (action state)"
        },
        {
          "name": "IdlePlay",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to play when player is outside range (idle state)"
        },
        {
          "name": "IdleLoop",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to loop when player is outside range (idle state)"
        }
      ],
      "features": [
        "Proximity-based animation system",
        "Action and idle animation states",
        "Configurable detection range",
        "Sound effect integration",
        "Optional melee weapon support",
        "Master interpreter integration",
        "Animation state management",
        "Player distance detection",
        "Dynamic behavior switching",
        "Character responsiveness",
        "NPC animation system",
        "Behavior state transitions"
      ],
      "keywords": ["play", "animation", "proximity", "range", "action", "idle", "npc", "character", "behavior", "state", "transition"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the play_animation behavior",
          "Configure detection range for animation switching",
          "Set up action animations (play and loop)",
          "Configure idle animations (play and loop)",
          "Add trigger sound to Sound0",
          "Set up melee weapon if desired",
          "Position the character in your game world",
          "Test player proximity to the character",
          "Verify animation state transitions",
          "Check action and idle animation playback",
          "Test sound effect integration",
          "Verify range-based behavior switching"
        ]
      },
      "relatedBehaviors": ["animation_system", "proximity_system", "npc_system", "character_system", "behavior_system", "state_management"]
    },
    "remover": {
      "name": "Remover",
      "file": "effects/remover.lua",
      "description": "A global entity removal system that destroys all entities with a specified name when activated by a switch or zone. Features case-insensitive name matching, effect stopping, sound integration, and logic connections. Perfect for creating cleanup systems, entity removal triggers, and dynamic object management in games.",
      "properties": [
        {
          "name": "ENTITY_NAME",
          "type": "string",
          "default": "",
          "description": "Name of entities to remove (case-insensitive, removes all entities with this name)"
        }
      ],
      "features": [
        "Global entity removal system",
        "Case-insensitive name matching",
        "Effect stopping before removal",
        "Sound effect integration",
        "Logic connection support",
        "Switch/zone activation",
        "Bulk entity cleanup",
        "Dynamic object management",
        "Entity destruction system",
        "Cleanup trigger functionality",
        "Mass removal capability"
      ],
      "keywords": ["remover", "entity", "destroy", "cleanup", "name", "global", "removal", "trigger", "switch", "zone"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create a remover object",
          "Set AlwaysActive to ON",
          "Attach the remover behavior",
          "Configure entity name to remove",
          "Add removal sound to Sound0",
          "Link to a switch or zone for activation",
          "Position entities with the target name in your game world",
          "Test activation via switch or zone",
          "Verify entity removal functionality",
          "Check sound effect playback",
          "Test logic connections",
          "Verify case-insensitive name matching"
        ]
      },
      "relatedBehaviors": ["effects_system", "entity_management", "cleanup_system", "trigger_system", "sound_system", "logic_connections"]
    },
    "vendor": {
      "name": "Vendor",
      "file": "objects/vendor.lua",
      "description": "A comprehensive vending machine system that dispenses items to players with configurable costs, quantities, lifespans, and empty state behaviors. Features global variable payment integration, entity spawning, animation support, and multiple empty state options. Perfect for creating vending machines, item dispensers, and automated shops in games.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to dispense item",
          "description": "Text displayed when the player can interact with the vendor"
        },
        {
          "name": "PROMPT_RANGE",
          "type": "number",
          "range": "0-100",
          "default": 80,
          "description": "Distance at which the player can interact with the vendor"
        },
        {
          "name": "NOISE_RANGE",
          "type": "number",
          "range": "0-5000",
          "default": 500,
          "description": "Range at which AI can hear the vendor being used"
        },
        {
          "name": "VENDOR_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to play when vending (0 = AnimSetList)"
        },
        {
          "name": "VENDORED_MAX_QUANTITY",
          "type": "number",
          "range": "1-50",
          "default": 1,
          "description": "Maximum number of items the vendor can dispense"
        },
        {
          "name": "VENDORED_ENTITY_COST",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Cost of each item in the specified global variable"
        },
        {
          "name": "VENDORED_ENTITY_LIFESPAN",
          "type": "number",
          "range": "0-100",
          "default": 1,
          "description": "Lifespan of dispensed items in minutes (0 = eternal)"
        },
        {
          "name": "VENDORED_ENTITY_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the entity to dispense (case-insensitive)"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Name of user global variable for payment (e.g., 'MyMoney')"
        },
        {
          "name": "WHEN_EMPTY",
          "type": "dropdown",
          "default": "Nothing",
          "options": ["Nothing", "Destroy Vendor", "Event Triggers", "Lose Game", "Win Game"],
          "description": "What happens when vendor is empty"
        },
        {
          "name": "VENDING_DELAY",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Delay in seconds before dispensing item"
        },
        {
          "name": "VENDING_FORCE",
          "type": "number",
          "range": "0-100",
          "default": 20,
          "description": "Force applied to dispensed items in the direction of the vendor"
        }
      ],
      "features": [
        "Vending machine system",
        "Configurable item costs",
        "Global variable payment integration",
        "Entity spawning and management",
        "Item lifespan control",
        "Multiple empty state behaviors",
        "Animation support",
        "Sound effect integration",
        "AI noise generation",
        "Vending delay system",
        "Item force application",
        "Quantity tracking",
        "Payment validation",
        "Entity cloning system"
      ],
      "keywords": ["vendor", "vending", "machine", "dispense", "item", "cost", "payment", "global", "variable", "lifespan", "quantity", "spawn"],
      "tutorial": {
        "videoId": "6cFGFb_98fc",
        "timestamp": "0:00",
        "steps": [
          "Create a vendor object",
          "Set AlwaysActive to ON",
          "Attach the vendor behavior",
          "Configure prompt text and range",
          "Set up item name to dispense",
          "Configure item cost and global variable",
          "Set maximum quantity and lifespan",
          "Choose empty state behavior",
          "Configure vending delay and force",
          "Add activation sound to Sound0",
          "Add vending sound to Sound1",
          "Add empty sound to Sound2",
          "Set up vendor animation if desired",
          "Test vendor interaction",
          "Verify payment and item dispensing",
          "Check empty state functionality"
        ]
      },
      "relatedBehaviors": ["vending_system", "payment_system", "entity_spawning", "global_variable", "animation_system", "sound_system"]
    },
    "weapon": {
      "name": "Weapon",
      "file": "weapon.lua",
      "description": "A comprehensive weapon pickup system that allows players to collect weapons with advanced inventory management. Features two pickup styles (ranged and accurate), weapon slot management, preferred slot assignment, inventory integration, and automatic ammo collection. Perfect for creating weapon pickups, weapon management, and inventory systems in games.",
      "properties": [
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 75,
          "description": "Distance at which the player can pick up the weapon"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "dropdown",
          "default": "Ranged",
          "options": ["Ranged", "Accurate"],
          "description": "Pickup style: Ranged = look at weapon, Accurate = pinpoint selection"
        },
        {
          "name": "PLAY_PICKUP",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether to play pickup sound when weapon is collected"
        },
        {
          "name": "ACTIVATE_LOGIC",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether to activate logic connections when weapon is collected"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline", "Icon"],
          "description": "Visual highlighting method for the weapon object"
        },
        {
          "name": "HIGHLIGHT_ICON_IMAGEFILE",
          "type": "string",
          "default": "imagebank\\icons\\pickup.png",
          "description": "Path to the highlight icon image file (used when ITEM_HIGHLIGHT is set to Icon)"
        }
      ],
      "features": [
        "Advanced weapon pickup system",
        "Two pickup styles (ranged and accurate)",
        "Weapon slot management (up to 9 slots)",
        "Preferred slot assignment system",
        "Inventory integration",
        "Automatic ammo collection",
        "Weapon replacement mechanics",
        "Visual highlighting options",
        "Sound effect integration",
        "Logic connection support",
        "Controller and keyboard support",
        "Head tracker compatibility",
        "Weapon slot preference system",
        "Collection feedback system",
        "Slot availability checking",
        "Inventory fallback system"
      ],
      "keywords": ["weapon", "pickup", "inventory", "slot", "ammo", "collection", "replacement", "preferred", "ranged", "accurate", "highlight"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create a weapon object",
          "Set AlwaysActive to ON",
          "Attach the weapon behavior",
          "Configure pickup range and style",
          "Set up visual highlighting options",
          "Configure highlight icon if using icon mode",
          "Set up sound effects (Sound0 for pickup)",
          "Configure logic connections if needed",
          "Test weapon pickup functionality",
          "Verify weapon slot assignment",
          "Check preferred slot system",
          "Test inventory integration",
          "Verify ammo collection mechanics"
        ]
      },
      "relatedBehaviors": ["inventory_system", "pickup_system", "ammo_system", "weapon_system", "slot_management"]
    }
  }
} 