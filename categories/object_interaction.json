{
  "category": "Object Interaction",
  "description": "Behaviors for object-to-object and player-to-object interactions",
  "behaviors": {
    "actionplate": {
      "name": "Action Plate",
      "file": "objects/actionplate.lua",
      "description": "Creates an interactive pressure plate that can trigger events when stepped on. Features configurable movement, single or multi-use modes, and customizable activation messages.",
      "properties": [
        {
          "name": "ACTIVATION_TEXT",
          "type": "string",
          "default": "You have activated a panel",
          "description": "Message displayed when plate is activated"
        },
        {
          "name": "ACTIVATION_TYPE",
          "type": "dropdown",
          "default": "Single Use",
          "options": ["Single Use", "Multi Use"],
          "description": "Whether plate can be used once or multiple times"
        },
        {
          "name": "MOVEMENT",
          "type": "number",
          "range": "0-100",
          "default": 3,
          "description": "How far the plate moves down when activated"
        }
      ],
      "features": [
        "Pressure-sensitive activation",
        "Configurable plate movement",
        "Single or multi-use modes",
        "Customizable messages",
        "Sound effect support",
        "Automatic reset for multi-use",
        "Collision detection",
        "Event trigger system",
        "Physics integration",
        "Surface height detection"
      ],
      "keywords": ["plate", "pressure", "trigger", "switch", "activate", "panel", "button", "floor"],
      "tutorial": {
        "videoId": "R0MX2w8fAWk",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["trigger_zone", "switch", "door_control", "elevator"]
    },
    "break_object": {
      "name": "Break Object",
      "file": "objects/break_object.lua",
      "description": "Creates a breakable object that can be destroyed with configurable animations, particles, and fade effects. Perfect for creating destructible environment objects.",
      "properties": [
        {
          "name": "BREAK_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Animation to play when object breaks"
        },
        {
          "name": "FADE_DELAY",
          "type": "number",
          "range": "1-10",
          "default": 2,
          "description": "Seconds to wait before fading out broken object"
        },
        {
          "name": "BREAK_PARTICLE",
          "type": "boolean",
          "default": false,
          "description": "Whether to show a particle effect when breaking"
        },
        {
          "name": "PARTICLE_NAME",
          "type": "string",
          "default": "",
          "description": "Name of particle entity to show on break"
        },
        {
          "name": "HIDE_OBJECT",
          "type": "boolean",
          "default": false,
          "description": "Whether to hide object initially and show on break"
        }
      ],
      "features": [
        "Configurable break animation",
        "Fade-out effect after breaking",
        "Optional particle effects",
        "Sound effect support",
        "Health-based breaking",
        "Trigger connections",
        "Collision handling",
        "Gravity control",
        "Initial visibility options",
        "Automatic cleanup"
      ],
      "keywords": ["break", "destroy", "damage", "particle", "animation", "fade", "destructible", "object"],
      "tutorial": {
        "videoId": "SrDYH_gnz5Q",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["damage_system", "particle_system", "object_health"]
    },
    "carry_object": {
      "name": "Carry Object",
      "file": "objects/carry_object.lua",
      "description": "Creates an interactive object that can be picked up, carried, and thrown by the player. Features weight-based restrictions, throwing mechanics, and detailed object handling.",
      "properties": [
        {
          "name": "PICKUP_TEXT",
          "type": "string",
          "default": "Press Q or Hold LMB to carry, RMB to carry/throw",
          "description": "Text shown when player can pick up object"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 80,
          "description": "Distance at which object can be picked up"
        },
        {
          "name": "MAX_PICKUP_WEIGHT",
          "type": "number",
          "range": "1-99",
          "default": 99,
          "description": "Maximum weight of objects that can be picked up"
        },
        {
          "name": "MAX_PICKUP_SIZE",
          "type": "number",
          "range": "1-100",
          "default": 40,
          "description": "Maximum size of objects that can be picked up"
        },
        {
          "name": "RELEASE_TEXT",
          "type": "string",
          "default": "R or LMB to drop, MMW Up/Down, Z to Rotate",
          "description": "Text shown when carrying object"
        },
        {
          "name": "THROW_TEXT",
          "type": "string",
          "default": "Shift to add force - Release RMB to throw",
          "description": "Text shown when preparing to throw"
        },
        {
          "name": "REARM_WEAPON",
          "type": "boolean",
          "default": false,
          "description": "Whether to rearm player's weapon after dropping object"
        },
        {
          "name": "THROW_DAMAGE",
          "type": "boolean",
          "default": false,
          "description": "Whether thrown objects can take damage on impact"
        },
        {
          "name": "DIAGNOSTICS",
          "type": "boolean",
          "default": false,
          "description": "Whether to show debug information"
        },
        {
          "name": "ITEM_OUTLINE",
          "type": "boolean",
          "default": false,
          "description": "Whether to show outline on pickupable objects"
        },
        {
          "name": "USE_PICKUP_ICON",
          "type": "boolean",
          "default": false,
          "description": "Whether to show pickup icon"
        },
        {
          "name": "ICON_IMAGEFILE",
          "type": "string",
          "default": "imagebank\\HUD\\cursor.png",
          "description": "Image file to use for pickup icon"
        }
      ],
      "features": [
        "Weight-based pickup restrictions",
        "Size-based pickup restrictions",
        "Throwing mechanics with force control",
        "Object rotation control",
        "Distance-based interaction",
        "Weapon management",
        "Impact damage system",
        "Visual feedback (outlines/icons)",
        "Customizable UI text",
        "Physics-based handling",
        "Collision detection",
        "Multiple carry modes"
      ],
      "keywords": ["carry", "pickup", "throw", "physics", "interaction", "weight", "object", "force", "handle"],
      "tutorial": {
        "videoId": "zMaR75CP01c",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["break_object", "physics_object", "damage_system", "weight_system"]
    },
    "destroy_object": {
      "name": "Destroy Object",
      "file": "objects/destroy_object.lua",
      "description": "Creates a system that can monitor and destroy named objects based on health or trigger conditions. Features particle effects, global variable manipulation, and customizable destruction messages.",
      "properties": [
        {
          "name": "MESSAGE",
          "type": "string",
          "default": "Destroyed",
          "description": "Message displayed when object is destroyed"
        },
        {
          "name": "OBJECT_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the object to monitor/destroy"
        },
        {
          "name": "PARTICLE_NAME",
          "type": "string",
          "default": "",
          "description": "Name of particle effect to show on destruction"
        },
        {
          "name": "DESTROY_PARTICLE",
          "type": "boolean",
          "default": false,
          "description": "Whether to destroy the particle after effect completes"
        },
        {
          "name": "HEALTH_MONITOR",
          "type": "boolean",
          "default": false,
          "description": "Whether to monitor object health for destruction"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Name of global variable to modify on destruction"
        },
        {
          "name": "AFFECT_TYPE",
          "type": "dropdown",
          "default": "Add",
          "options": ["Add", "Deduct"],
          "description": "How to modify the global variable"
        },
        {
          "name": "AFFECT_VALUE",
          "type": "number",
          "range": "1-100",
          "default": 1,
          "description": "Amount to add/deduct from global variable"
        }
      ],
      "features": [
        "Health-based destruction",
        "Trigger-based destruction",
        "Particle effect system",
        "Global variable manipulation",
        "Customizable messages",
        "Automatic cleanup",
        "Collision handling",
        "Multiple destruction modes",
        "Event connections",
        "Object state management"
      ],
      "keywords": ["destroy", "monitor", "health", "particle", "global", "trigger", "message", "effect"],
      "tutorial": {
        "videoId": "qcr5z-FBEzw",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["break_object", "global_monitor", "particle_system", "trigger_zone"]
    },
    "affected": {
      "name": "Affected",
      "file": "objects/affected.lua",
      "description": "Creates an object that can apply various status effects to the player including drunk, poisoned, and shudder effects. Can also modify player health and user globals.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "You are affected",
          "description": "Message displayed when effect is applied"
        },
        {
          "name": "EFFECT_TYPE",
          "type": "dropdown",
          "default": "Drunk",
          "options": ["Drunk", "Poisoned", "Shudder"],
          "description": "Type of screen effect to apply"
        },
        {
          "name": "EFFECT_TIME",
          "type": "number",
          "default": 5,
          "description": "Duration of effect in seconds"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Name of user global variable to modify"
        },
        {
          "name": "GLOBAL_AFFECT",
          "type": "dropdown",
          "default": "Add",
          "options": ["Add", "Deduct"],
          "description": "Whether to add or subtract from global value"
        },
        {
          "name": "AFFECT_AMOUNT",
          "type": "number",
          "range": "1-100",
          "default": 0,
          "description": "Amount to modify health/global by"
        },
        {
          "name": "AFFECT_HEALTH",
          "type": "boolean",
          "default": false,
          "description": "Whether to modify player health"
        },
        {
          "name": "ACTIVATE_LOGIC",
          "type": "boolean",
          "default": false,
          "description": "Whether to trigger logic connections"
        }
      ],
      "features": [
        "Multiple effect types (Drunk, Poisoned, Shudder)",
        "Screen shake trauma control",
        "Screen shake period control",
        "Health modification system",
        "User global variable control",
        "Effect duration timing",
        "Gradual effect fade-out",
        "Sound effect support",
        "Logic connection triggers",
        "Value clamping (0-100)"
      ],
      "keywords": ["effect", "status", "drunk", "poison", "shake", "health", "global", "trauma"],
      "tutorial": {
        "videoId": "7_4WZojGvjg",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["global_affected_object", "health_system", "screen_effects"]
    },
    "animated_object": {
      "name": "Animated Object",
      "file": "objects/animated_object.lua",
      "description": "Controls the built-in animation of an object with configurable speed and variable-based modulation. Supports sound synchronization and global variable integration for dynamic animation control.",
      "properties": [
        {
          "name": "RUN_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Animation to play from the object's animation set"
        },
        {
          "name": "ANIMATION_SPEED",
          "type": "number",
          "range": "0.0-100.0",
          "default": 1.0,
          "description": "Speed multiplier for the animation playback"
        },
        {
          "name": "VARIABLE_SWITCH_USER_GLOBAL",
          "type": "string",
          "default": "",
          "description": "Name of a user global variable to control animation speed (e.g. Variable_Switch1)"
        }
      ],
      "features": [
        "Built-in animation control",
        "Variable animation speed",
        "Dynamic speed modulation through global variables",
        "Sound synchronization with animation",
        "Automatic sound control based on speed",
        "Loop animation support",
        "State management system",
        "Zero-speed handling"
      ],
      "keywords": ["animation", "speed", "control", "variable", "sound", "modulate", "dynamic"],
      "tutorial": {
        "videoId": "MPHGC9Hgzu4",
        "timestamp": "0:00",
        "steps": [
          "Attach the animated_object behavior to an object with animations",
          "Select the desired animation from the object's animation set",
          "Set the base animation speed (default is 1.0)",
          "Optionally link a global variable for dynamic speed control",
          "Add animation sound to Sound0 if desired",
          "Test the animation and adjust speed as needed"
        ]
      },
      "relatedBehaviors": ["object_mover", "global_modifier", "variable_switch", "sound_object"]
    },
    "autoreload": {
      "name": "Auto Reload",
      "file": "objects/autoreload.lua",
      "description": "Creates an automatic weapon reloading system that can reload weapons when their clip is empty. Features configurable modes including always-on, off, and user prompt options.",
      "properties": [
        {
          "name": "MODE",
          "type": "dropdown",
          "default": "On",
          "options": ["On", "Off", "Ask"],
          "description": "How the auto-reload feature should behave"
        },
        {
          "name": "PROMPT",
          "type": "string",
          "default": "Select Y or N for Weapon Auto-Reloading",
          "description": "Message shown when asking player to enable/disable auto-reload"
        }
      ],
      "features": [
        "Automatic weapon reloading",
        "Multiple operation modes",
        "User preference prompting",
        "Ammo count monitoring",
        "Automatic key simulation",
        "Global state management",
        "Configurable user messages",
        "Key buffer management",
        "Always active operation",
        "Instant reload triggering"
      ],
      "keywords": ["weapon", "reload", "automatic", "ammo", "clip", "gun", "prompt", "preference"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Attach the autoreload behavior to an object",
          "Set Always Active to ON for the object",
          "Choose the desired MODE (On, Off, or Ask)",
          "Customize the PROMPT message if using Ask mode",
          "If using Ask mode, players can press Y/N to set preference",
          "Test with different weapons to ensure proper reloading"
        ]
      },
      "relatedBehaviors": ["weapon_system", "ammo_pickup", "gun_control", "player_mode"]
    },
    "break_wall": {
      "name": "Break Wall",
      "file": "objects/break_wall.lua",
      "description": "Creates an interactive wall that can be broken by the player when in range. Features configurable animations, fade-out effects, and automatic cleanup after destruction.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "1-500",
          "default": 100,
          "description": "Distance at which player can interact with wall"
        },
        {
          "name": "PROMPT",
          "type": "string",
          "default": "Press E to Break Wall",
          "description": "Message shown when player is in range"
        },
        {
          "name": "BREAK_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Animation to play when wall breaks"
        },
        {
          "name": "CLEANUP_DELAY",
          "type": "number",
          "range": "0-10",
          "default": 3,
          "description": "Seconds to wait before fading out broken wall"
        }
      ],
      "features": [
        "Interactive wall destruction",
        "Configurable interaction range",
        "Custom break animations",
        "Sound effect support",
        "Automatic cleanup system",
        "Fade-out effect",
        "Collision handling",
        "Entity management",
        "Distance-based interaction",
        "Transparency control"
      ],
      "keywords": ["wall", "break", "destroy", "interactive", "animation", "fade", "cleanup", "collision"],
      "tutorial": {
        "videoId": "SrDYH_gnz5Q",
        "timestamp": "0:00",
        "steps": [
          "Attach the break_wall behavior to a wall object",
          "Set Always Active to ON",
          "Configure the interaction RANGE",
          "Set up the BREAK_ANIMATION",
          "Add a break sound to Sound0",
          "Adjust CLEANUP_DELAY if needed",
          "Test by approaching wall and pressing E"
        ]
      },
      "relatedBehaviors": ["break_object", "destroy_object", "particle_system", "sound_object"]
    },
    "buy_object": {
      "name": "Buy Object",
      "file": "objects/buy_object.lua",
      "description": "Creates a purchasable object that can be bought using a global currency variable. Features configurable costs, messages, and automatic cleanup after purchase. Perfect for creating in-game shops and purchasable items.",
      "properties": [
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which player can interact with object"
        },
        {
          "name": "BUY_TEXT",
          "type": "string",
          "default": "E to purchase",
          "description": "Message shown when player can buy object"
        },
        {
          "name": "BOUGHT_TEXT",
          "type": "string",
          "default": "Purchased",
          "description": "Message shown after successful purchase"
        },
        {
          "name": "INSUFFICIENT_TEXT",
          "type": "string",
          "default": "Insufficient funds",
          "description": "Message shown when player lacks required funds"
        },
        {
          "name": "TEXT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display interaction messages"
        },
        {
          "name": "BUY_COST",
          "type": "number",
          "range": "1-500",
          "default": 10,
          "description": "Cost to purchase the object"
        },
        {
          "name": "DELETE_ON_BUY",
          "type": "dropdown",
          "default": "Yes",
          "options": ["Yes", "No"],
          "description": "Whether to remove object after purchase"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Global variable name for currency (e.g. MyMoney)"
        }
      ],
      "features": [
        "Currency-based purchasing system",
        "Configurable interaction range",
        "Custom messages for all states",
        "Local or screen-wide notifications",
        "Sound effect support",
        "Automatic cleanup option",
        "Global variable integration",
        "Logic connection triggers",
        "Distance-based interaction",
        "Purchase validation system"
      ],
      "keywords": ["buy", "purchase", "shop", "currency", "money", "store", "item", "transaction"],
      "tutorial": {
        "videoId": "3Pv7FS5aMCA",
        "timestamp": "0:00",
        "steps": [
          "Attach the buy_object behavior to a purchasable item",
          "Set up your currency global variable (e.g. MyMoney)",
          "Configure the BUY_COST and USE_RANGE",
          "Choose message display type (Local/Screen)",
          "Add purchase sound to Sound0 if desired",
          "Set DELETE_ON_BUY based on your needs",
          "Create logic connections for purchase effects",
          "Test by approaching with sufficient/insufficient funds"
        ]
      },
      "relatedBehaviors": ["global_modifier", "inventory_system", "shop_system", "currency_manager"]
    },
    "destructible": {
      "name": "Destructible",
      "file": "objects/destructible.lua",
      "description": "Creates a destructible object with animated fragments and navmesh blocking capabilities. Features health-based or trigger-based destruction, customizable animations, and automatic cleanup.",
      "properties": [
        {
          "name": "SOLID_LIMB",
          "type": "number",
          "default": 2,
          "description": "Limb number that represents the solid/intact state"
        },
        {
          "name": "ANIMATION_NAME",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to play during destruction"
        },
        {
          "name": "ANIMATION_SPEED",
          "type": "number",
          "default": 50,
          "description": "Speed of destruction animation"
        },
        {
          "name": "COLLISION_OFF_TIME",
          "type": "number",
          "default": 250,
          "description": "Time in milliseconds before collision is disabled"
        },
        {
          "name": "DESTROY_AT_END",
          "type": "boolean",
          "default": true,
          "description": "Whether to remove object after animation"
        },
        {
          "name": "DESTROY_ANIM_TRIM",
          "type": "number",
          "default": 40,
          "description": "Frame number to consider animation complete"
        }
      ],
      "features": [
        "Health-based destruction",
        "Trigger-based destruction",
        "Fragment animation system",
        "NavMesh blocking",
        "Collision management",
        "Sound effect support",
        "Logic connection triggers",
        "Automatic cleanup",
        "Animation speed control",
        "Fragment visibility control",
        "Multi-state management",
        "Performance optimized"
      ],
      "keywords": ["destructible", "break", "fragment", "navmesh", "collision", "animation", "destroy", "interactive"],
      "tutorial": {
        "videoId": "hKoTPcsP8Wk",
        "timestamp": "0:00",
        "steps": [
          "Create or select an object with destruction fragments",
          "Set IsImmobile to YES",
          "Attach the destructible behavior",
          "Configure SOLID_LIMB for intact state",
          "Set up destruction animation if needed",
          "Add destruction sound to Sound0",
          "Set health or create trigger for destruction",
          "Test destruction sequence and cleanup"
        ]
      },
      "relatedBehaviors": ["break_wall", "buy_object", "damage_system", "physics_object"]
    },
    "document": {
      "name": "Document",
      "file": "objects/document.lua",
      "description": "Creates an interactive document or image that can be viewed, zoomed, and scrolled by the player. Features customizable display options, screen locking, and narration support.",
      "properties": [
        {
          "name": "PICKUP_TEXT",
          "type": "string",
          "default": "E to look at document",
          "description": "Message shown when player can interact with document"
        },
        {
          "name": "SCREEN_X",
          "type": "number",
          "range": "0-100",
          "default": 50,
          "description": "Horizontal position on screen (percentage)"
        },
        {
          "name": "SCREEN_Y",
          "type": "number",
          "range": "0-100",
          "default": 50,
          "description": "Vertical position on screen (percentage)"
        },
        {
          "name": "SPRITE_SIZE",
          "type": "number",
          "range": "1-100",
          "default": 15,
          "description": "Initial size of document as percentage of screen"
        },
        {
          "name": "IMAGEFILE",
          "type": "string",
          "default": "imagebank\\documents\\default_doc.png",
          "description": "Path to document image file"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-300",
          "default": 80,
          "description": "Distance at which player can interact"
        },
        {
          "name": "USAGE_TEXT",
          "type": "string",
          "default": "MB to +-Zoom, MMW to scroll, Q to return document",
          "description": "Instructions shown while viewing document"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to show interaction prompts"
        },
        {
          "name": "LOCK_SCREEN",
          "type": "boolean",
          "default": false,
          "description": "Whether to lock camera when viewing"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "How to highlight document when in range"
        }
      ],
      "features": [
        "Interactive document viewing",
        "Mouse-based zoom control",
        "Scroll functionality",
        "Aspect ratio preservation",
        "Screen position control",
        "Camera lock option",
        "Narration support",
        "Highlight effects",
        "Range-based interaction",
        "Sound effect integration",
        "Multiple display modes",
        "Automatic cleanup"
      ],
      "keywords": ["document", "image", "view", "zoom", "scroll", "read", "narrate", "interactive"],
      "tutorial": {
        "videoId": "uYojoLKL6kc",
        "timestamp": "0:00",
        "steps": [
          "Create or select an object to be the document",
          "Attach the document behavior",
          "Set up your document image file",
          "Configure display position and size",
          "Set interaction range and prompts",
          "Add pickup sound to Sound0 if desired",
          "Add narration to Sound1 if needed",
          "Add return sound to Sound2 if desired",
          "Test document interaction and controls"
        ]
      },
      "relatedBehaviors": ["carry_object", "pickup_object", "hud_display", "screen_text"]
    },
    "dynamite": {
      "name": "Dynamite",
      "file": "objects/dynamite.lua",
      "description": "Creates a deployable explosive device that can be picked up, placed, and detonated in various ways. Features multiple detonation modes, safety distances, and enemy alert system.",
      "properties": [
        {
          "name": "WEAPON_NAME",
          "type": "string",
          "default": "Dynamite",
          "description": "Name of the explosive device"
        },
        {
          "name": "PLACEMENT_TIME",
          "type": "number",
          "range": "1-3",
          "default": 1,
          "description": "Seconds needed to hold key before bomb is placed"
        },
        {
          "name": "EXPLOSION_DELAY",
          "type": "number",
          "range": "1-50",
          "default": 1,
          "description": "Seconds before bomb explodes once triggered"
        },
        {
          "name": "BOMB_TYPE",
          "type": "dropdown",
          "default": "Manual",
          "options": ["Manual", "Timer", "Remote", "Switch"],
          "description": "How the explosive is detonated"
        },
        {
          "name": "PLAYER_SAFE_DISTANCE",
          "type": "number",
          "range": "1-1000",
          "default": 220,
          "description": "Minimum safe distance for remote detonation"
        },
        {
          "name": "ENEMY_HEAR_DISTANCE",
          "type": "number",
          "range": "0-3000",
          "default": 1000,
          "description": "Distance at which enemies can hear explosion"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which player can collect explosive"
        },
        {
          "name": "PICKUP_TEXT",
          "type": "string",
          "default": "E to collect",
          "description": "Message shown when explosive can be picked up"
        }
      ],
      "features": [
        "Multiple detonation modes",
        "Safety distance system",
        "Enemy alert mechanism",
        "Placement preview",
        "Timer countdown display",
        "Surface detection",
        "Gravity physics",
        "Sound effect support",
        "State management",
        "Transparency control"
      ],
      "keywords": ["dynamite", "explosive", "bomb", "detonate", "timer", "remote", "switch", "manual"],
      "tutorial": {
        "videoId": "IR5F35glKA0",
        "timestamp": "0:00",
        "steps": [
          "Create an explosive object",
          "Attach the dynamite behavior",
          "Choose detonation mode",
          "Configure safety distances",
          "Set placement and explosion delays",
          "Add pickup sound to Sound0",
          "Add primed/armed sound to Sound1",
          "Test all detonation modes"
        ]
      },
      "relatedBehaviors": ["break_wall", "destroy_object", "particle_system", "switch"]
    },
    "income_generator": {
      "name": "Income Generator",
      "file": "objects/income_generator.lua",
      "description": "Creates an object that generates income over time and adds it to a specified global variable. Features multiple collection modes, customizable income/upkeep rates, and visual feedback.",
      "properties": [
        {
          "name": "COLLECTION_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which income can be collected"
        },
        {
          "name": "COLLECTION_STYLE",
          "type": "dropdown",
          "default": "Ranged",
          "options": ["Ranged", "Manual", "Automatic"],
          "description": "How income is collected"
        },
        {
          "name": "COLLECTION_PROMPT",
          "type": "string",
          "default": "E to Collect",
          "description": "Text shown when income can be collected"
        },
        {
          "name": "COLLECTED_TEXT",
          "type": "string",
          "default": "Income Collected",
          "description": "Text shown when income is collected"
        },
        {
          "name": "GENERATING_TEXT",
          "type": "string",
          "default": "Accumulating Income",
          "description": "Text shown while income is generating"
        },
        {
          "name": "INCOME",
          "type": "number",
          "range": "0-500",
          "default": 10,
          "description": "Amount of income generated per cycle"
        },
        {
          "name": "UPKEEP",
          "type": "number",
          "range": "0-500",
          "default": 10,
          "description": "Maintenance cost deducted from income"
        },
        {
          "name": "ELAPSE_TIME",
          "type": "number",
          "range": "1-100",
          "default": 10,
          "description": "Seconds between income generation cycles"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Global variable to store income (e.g. MyMoney)"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to show prompt messages"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlight style for generator"
        },
        {
          "name": "ACTIVE_AT_START",
          "type": "boolean",
          "default": true,
          "description": "Whether generator is active when created"
        }
      ],
      "features": [
        "Multiple collection modes",
        "Configurable income rates",
        "Upkeep cost system",
        "Timed generation cycles",
        "Global variable integration",
        "Visual feedback system",
        "Object highlighting",
        "Sound effect support",
        "Automatic state management",
        "Range-based interaction",
        "Custom message display",
        "Switch/trigger activation"
      ],
      "keywords": ["income", "money", "generator", "economy", "resource", "collection", "upkeep", "automatic"],
      "tutorial": {
        "videoId": "dJOy8BJ3geI",
        "timestamp": "0:00",
        "steps": [
          "Create or select target object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the income_generator behavior",
          "Configure collection range and style",
          "Set income and upkeep amounts",
          "Adjust generation cycle time",
          "Set up global variable name",
          "Add collection sound to Sound0",
          "Test different collection modes"
        ]
      },
      "relatedBehaviors": ["money", "buy_object", "vendor", "global_modifier"]
    },
    "mines": {
      "name": "Mines",
      "file": "objects/mines.lua",
      "description": "Creates an explosive mine that can be triggered by player proximity or other entities. Features configurable damage, blast radius, and various trigger modes with optional arming delay and visual indicators.",
      "properties": [
        {
          "name": "TRIGGER_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 100,
          "description": "Distance at which mine detects targets"
        },
        {
          "name": "DAMAGE_RANGE",
          "type": "number",
          "range": "1-1000",
          "default": 200,
          "description": "Radius of explosion damage"
        },
        {
          "name": "DAMAGE_AMOUNT",
          "type": "number",
          "range": "0-100",
          "default": 50,
          "description": "Amount of damage dealt by explosion"
        },
        {
          "name": "ARMING_DELAY",
          "type": "number",
          "range": "0-10",
          "default": 1.0,
          "description": "Seconds before mine becomes active"
        },
        {
          "name": "TRIGGER_MODE",
          "type": "dropdown",
          "default": "Player Only",
          "options": ["Player Only", "Any Entity", "Enemies Only"],
          "description": "What can trigger the mine"
        },
        {
          "name": "VISUAL_INDICATOR",
          "type": "boolean",
          "default": true,
          "description": "Whether to show activation light"
        },
        {
          "name": "DESTROY_ON_EXPLODE",
          "type": "boolean",
          "default": true,
          "description": "Whether mine is destroyed after explosion"
        },
        {
          "name": "CHAIN_REACTION",
          "type": "boolean",
          "default": true,
          "description": "Whether explosion triggers nearby mines"
        },
        {
          "name": "WARNING_TEXT",
          "type": "string",
          "default": "Mine Detected!",
          "description": "Text shown when player detects mine"
        }
      ],
      "features": [
        "Proximity-based detection",
        "Configurable damage system",
        "Multiple trigger modes",
        "Visual warning indicators",
        "Chain reaction support",
        "Arming delay system",
        "Particle effect integration",
        "Sound effect support",
        "Entity damage handling",
        "Explosion force physics"
      ],
      "keywords": ["mine", "explosive", "trap", "damage", "proximity", "trigger", "explosion", "hazard"],
      "tutorial": {
        "videoId": "IR5F35glKA0",
        "timestamp": "0:00",
        "steps": [
          "Create a mine object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the mines behavior",
          "Configure trigger and damage ranges",
          "Set damage amount",
          "Choose trigger mode",
          "Add arming sound to Sound0",
          "Add detection sound to Sound1",
          "Add explosion sound to Sound2",
          "Test mine activation and effects"
        ]
      },
      "relatedBehaviors": ["exploder", "damage_zone", "trigger_zone", "particle_system"]
    },
    "money": {
      "name": "Money",
      "file": "objects/money.lua",
      "description": "Creates a collectible money object that adds to a global currency variable when picked up. Features automatic or manual collection, visual effects, and customizable amounts.",
      "properties": [
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 80,
          "description": "Distance at which money can be collected"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "dropdown",
          "default": "Automatic",
          "options": ["Automatic", "Manual"],
          "description": "Whether money is collected automatically or requires button press"
        },
        {
          "name": "PICKUP_TEXT",
          "type": "string",
          "default": "E to collect money",
          "description": "Text shown when money can be collected"
        },
        {
          "name": "COLLECTION_TEXT",
          "type": "string",
          "default": "Money collected",
          "description": "Text shown when money is collected"
        },
        {
          "name": "AMOUNT",
          "type": "number",
          "range": "1-1000",
          "default": 10,
          "description": "Amount of money to add when collected"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Global variable to store money (e.g. MyMoney)"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to show prompt messages"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlight style for money object"
        },
        {
          "name": "HOVER_EFFECT",
          "type": "boolean",
          "default": true,
          "description": "Whether money object hovers in place"
        },
        {
          "name": "SPIN_EFFECT",
          "type": "boolean",
          "default": true,
          "description": "Whether money object spins in place"
        }
      ],
      "features": [
        "Automatic or manual collection",
        "Configurable pickup range",
        "Global variable integration",
        "Visual feedback system",
        "Object highlighting",
        "Hover animation",
        "Spin animation",
        "Sound effect support",
        "Custom message display",
        "Range-based interaction",
        "Automatic cleanup",
        "Economy system integration"
      ],
      "keywords": ["money", "currency", "collect", "pickup", "economy", "cash", "coins", "wealth"],
      "tutorial": {
        "videoId": "vivZL3AjU_w",
        "timestamp": "0:00",
        "steps": [
          "Create or select money object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the money behavior",
          "Configure pickup range and style",
          "Set money amount",
          "Set up global variable name",
          "Add collection sound to Sound0",
          "Configure visual effects",
          "Test collection mechanics"
        ]
      },
      "relatedBehaviors": ["income_generator", "buy_object", "vendor", "global_modifier"]
    },
    "mouse_switch": {
      "name": "Mouse Switch",
      "file": "objects/mouse_switch.lua",
      "description": "Creates an interactive object that responds to mouse clicks with configurable actions and visual feedback. Features multiple click modes, hover effects, and customizable trigger actions.",
      "properties": [
        {
          "name": "CLICK_MODE",
          "type": "dropdown",
          "default": "Left Click",
          "options": ["Left Click", "Right Click", "Middle Click", "Any Click"],
          "description": "Which mouse button triggers the switch"
        },
        {
          "name": "INTERACTION_RANGE",
          "type": "number",
          "range": "1-1000",
          "default": 200,
          "description": "Maximum distance for mouse interaction"
        },
        {
          "name": "HOVER_TEXT",
          "type": "string",
          "default": "Click to activate",
          "description": "Text shown when hovering over object"
        },
        {
          "name": "ACTIVATION_TEXT",
          "type": "string",
          "default": "Activated",
          "description": "Text shown when switch is activated"
        },
        {
          "name": "TOGGLE_MODE",
          "type": "boolean",
          "default": true,
          "description": "Whether switch toggles on/off or triggers once"
        },
        {
          "name": "HIGHLIGHT_ON_HOVER",
          "type": "boolean",
          "default": true,
          "description": "Whether to highlight object on mouse hover"
        },
        {
          "name": "HIGHLIGHT_TYPE",
          "type": "dropdown",
          "default": "Outline",
          "options": ["Outline", "Glow", "Color Change"],
          "description": "Type of highlight effect to show"
        },
        {
          "name": "COOLDOWN_TIME",
          "type": "number",
          "range": "0-10",
          "default": 0.5,
          "description": "Seconds before switch can be activated again"
        },
        {
          "name": "REQUIRE_CURSOR",
          "type": "boolean",
          "default": true,
          "description": "Whether to require cursor mode for interaction"
        },
        {
          "name": "CURSOR_MODE_KEY",
          "type": "string",
          "default": "tab",
          "description": "Key to toggle cursor mode if required"
        }
      ],
      "features": [
        "Multiple click modes",
        "Range-based interaction",
        "Toggle or trigger modes",
        "Hover highlighting",
        "Visual feedback system",
        "Cooldown management",
        "Cursor mode integration",
        "Sound effect support",
        "Logic connection triggers",
        "State persistence"
      ],
      "keywords": ["mouse", "switch", "click", "interact", "hover", "cursor", "trigger", "button"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create or select target object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the mouse_switch behavior",
          "Configure click mode and range",
          "Set up hover and activation text",
          "Choose highlight settings",
          "Add activation sound to Sound0",
          "Add hover sound to Sound1",
          "Test mouse interaction modes"
        ]
      },
      "relatedBehaviors": ["switch", "button", "trigger_zone", "interactive_object"]
    },
    "move_near": {
      "name": "Move Near",
      "file": "objects/move_near.lua",
      "description": "Creates an object that moves when players or entities come within range. Features configurable movement patterns, trigger distances, and optional return-to-origin functionality.",
      "properties": [
        {
          "name": "TRIGGER_RANGE",
          "type": "number",
          "range": "1-1000",
          "default": 200,
          "description": "Distance at which object starts moving"
        },
        {
          "name": "MOVEMENT_SPEED",
          "type": "number",
          "range": "0-100",
          "default": 10,
          "description": "Speed of object movement"
        },
        {
          "name": "MOVEMENT_TYPE",
          "type": "dropdown",
          "default": "Away From Player",
          "options": ["Away From Player", "Toward Player", "Circle Player", "Random Direction"],
          "description": "How the object moves when triggered"
        },
        {
          "name": "TRIGGER_MODE",
          "type": "dropdown",
          "default": "Player Only",
          "options": ["Player Only", "Any Entity", "Specific Entity"],
          "description": "What can trigger the movement"
        },
        {
          "name": "TARGET_ENTITY",
          "type": "string",
          "default": "",
          "description": "Name of specific entity to react to (if mode 3)"
        },
        {
          "name": "MAX_DISTANCE",
          "type": "number",
          "range": "0-5000",
          "default": 1000,
          "description": "Maximum distance object can move from start"
        },
        {
          "name": "RETURN_TO_START",
          "type": "boolean",
          "default": true,
          "description": "Whether object returns to origin when trigger leaves range"
        },
        {
          "name": "RETURN_SPEED",
          "type": "number",
          "range": "0-100",
          "default": 5,
          "description": "Speed of return movement"
        },
        {
          "name": "SMOOTH_MOVEMENT",
          "type": "boolean",
          "default": true,
          "description": "Whether to use smooth acceleration/deceleration"
        },
        {
          "name": "AVOID_OBSTACLES",
          "type": "boolean",
          "default": true,
          "description": "Whether to detect and avoid obstacles"
        }
      ],
      "features": [
        "Proximity-based activation",
        "Multiple movement patterns",
        "Entity-specific targeting",
        "Return-to-origin system",
        "Obstacle avoidance",
        "Smooth movement transitions",
        "Distance limitations",
        "Position tracking",
        "Sound effect support",
        "Collision handling"
      ],
      "keywords": ["move", "proximity", "trigger", "follow", "avoid", "return", "circle", "movement"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create or select target object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the move_near behavior",
          "Configure trigger range and mode",
          "Choose movement type and speed",
          "Set maximum movement distance",
          "Configure return behavior",
          "Add movement sound to Sound0",
          "Test proximity activation"
        ]
      },
      "relatedBehaviors": ["follow_path", "object_mover", "trigger_zone", "proximity_trigger"]
    },
    "object_collider": {
      "name": "Object Collider",
      "file": "objects/object_collider.lua",
      "description": "Creates an object with advanced collision response behaviors. Features include customizable collision events, physics reactions, and trigger-based interactions.",
      "properties": [
        {
          "name": "COLLISION_TYPE",
          "type": "dropdown",
          "default": "Solid",
          "options": ["Solid", "Trigger", "Bounce", "Push", "Custom"],
          "description": "How the object responds to collisions"
        },
        {
          "name": "COLLISION_SHAPE",
          "type": "dropdown",
          "default": "Box",
          "options": ["Box", "Sphere", "Cylinder", "Custom"],
          "description": "Shape of the collision volume"
        },
        {
          "name": "COLLISION_SCALE",
          "type": "string",
          "default": "1,1,1",
          "description": "Scale multiplier for collision volume (X,Y,Z)"
        },
        {
          "name": "COLLISION_OFFSET",
          "type": "string",
          "default": "0,0,0",
          "description": "Offset from object center (X,Y,Z)"
        },
        {
          "name": "BOUNCE_FACTOR",
          "type": "number",
          "range": "0-1",
          "default": 0.5,
          "description": "How bouncy the object is (0-1)"
        },
        {
          "name": "PUSH_FORCE",
          "type": "number",
          "range": "0-1000",
          "default": 100,
          "description": "Force applied when pushing other objects"
        },
        {
          "name": "TRIGGER_ONCE",
          "type": "boolean",
          "default": false,
          "description": "Whether trigger activates only once"
        },
        {
          "name": "COLLISION_SOUND",
          "type": "string",
          "default": "",
          "description": "Sound to play on collision"
        },
        {
          "name": "COLLISION_EFFECT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Particles", "Flash", "Custom"],
          "description": "Visual effect on collision"
        },
        {
          "name": "DAMAGE_ON_COLLISION",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Damage dealt on collision"
        },
        {
          "name": "COLLISION_GROUPS",
          "type": "string",
          "default": "all",
          "description": "Groups this object can collide with"
        },
        {
          "name": "ON_COLLISION_SCRIPT",
          "type": "string",
          "default": "",
          "description": "Custom script to run on collision"
        }
      ],
      "features": [
        "Multiple collision types",
        "Customizable collision shapes",
        "Physics-based responses",
        "Trigger system",
        "Sound effect integration",
        "Visual feedback",
        "Damage system",
        "Custom script support",
        "Collision grouping",
        "Performance optimized"
      ],
      "keywords": ["collision", "physics", "trigger", "interaction", "bounce", "push", "damage", "object"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create or select target object",
          "Add the object_collider behavior",
          "Choose collision type",
          "Configure collision shape",
          "Set up collision responses",
          "Add collision sounds",
          "Configure visual effects",
          "Set up collision groups",
          "Add custom scripts if needed",
          "Test collision behavior"
        ]
      },
      "relatedBehaviors": ["physics_object", "trigger_zone", "damage_system"]
    },
    "object_mover": {
      "name": "Object Mover",
      "file": "objects/object_mover.lua",
      "description": "Creates a system for moving objects along predefined paths or to specific positions with customizable speed, rotation, and movement patterns.",
      "properties": [
        {
          "name": "MOVEMENT_TYPE",
          "type": "dropdown",
          "default": "Linear",
          "options": ["Linear", "Circular", "Oscillating"],
          "description": "Type of movement pattern for the object"
        },
        {
          "name": "MOVE_SPEED",
          "type": "number",
          "range": "0-100",
          "default": 10,
          "description": "Speed at which object moves"
        },
        {
          "name": "ROTATION_ENABLED",
          "type": "boolean",
          "default": false,
          "description": "Whether object should rotate during movement"
        },
        {
          "name": "ROTATION_SPEED",
          "type": "number",
          "range": "0-360",
          "default": 45,
          "description": "Speed of rotation in degrees per second"
        },
        {
          "name": "MOVEMENT_RANGE",
          "type": "number",
          "range": "0-1000",
          "default": 100,
          "description": "Distance or radius of movement"
        },
        {
          "name": "PAUSE_TIME",
          "type": "number",
          "range": "0-60",
          "default": 0,
          "description": "Time to pause at movement endpoints"
        },
        {
          "name": "TRIGGER_START",
          "type": "boolean",
          "default": false,
          "description": "Whether movement requires trigger to start"
        }
      ],
      "features": [
        "Multiple movement patterns",
        "Adjustable movement speed",
        "Optional rotation",
        "Trigger-based activation",
        "Pause functionality",
        "Path following",
        "Collision handling",
        "Position tracking",
        "Movement synchronization",
        "Event system integration"
      ],
      "keywords": ["move", "transport", "rotate", "path", "position", "motion", "platform", "animation"],
      "tutorial": {
        "videoId": "RRyiy531bjw",
        "timestamp": "0"
      },
      "relatedBehaviors": ["carry_object", "actionplate", "elevator_control", "path_follow"]
    },
    "object_randomiser": {
      "name": "Object Randomiser",
      "file": "objects/object_randomiser.lua",
      "description": "Creates a system that can randomly modify object properties, positions, or states based on various triggers. Perfect for creating dynamic environments and unpredictable gameplay elements.",
      "properties": [
        {
          "name": "RANDOMISE_MODE",
          "type": "dropdown",
          "default": "Position",
          "options": ["Position", "Rotation", "Scale", "State", "Multiple"],
          "description": "What aspect of the object to randomise"
        },
        {
          "name": "TARGET_OBJECT",
          "type": "string",
          "default": "",
          "description": "Name of object to randomise (empty for self)"
        },
        {
          "name": "TRIGGER_TYPE",
          "type": "dropdown",
          "default": "On Start",
          "options": ["On Start", "On Timer", "On Trigger", "On Proximity"],
          "description": "When randomisation occurs"
        },
        {
          "name": "TIMER_INTERVAL",
          "type": "number",
          "range": "0.1-60",
          "default": 5.0,
          "description": "Seconds between randomisation (if timer mode)"
        },
        {
          "name": "POSITION_RANGE",
          "type": "string",
          "default": "100,0,100",
          "description": "Maximum position offset (X,Y,Z)"
        },
        {
          "name": "ROTATION_RANGE",
          "type": "string",
          "default": "360,360,360",
          "description": "Maximum rotation angles (X,Y,Z)"
        },
        {
          "name": "SCALE_RANGE",
          "type": "string",
          "default": "1,1,1",
          "description": "Maximum scale multiplier (X,Y,Z)"
        },
        {
          "name": "MAINTAIN_GROUND_CONTACT",
          "type": "boolean",
          "default": true,
          "description": "Whether to keep object on ground when moving"
        },
        {
          "name": "SMOOTH_TRANSITION",
          "type": "boolean",
          "default": false,
          "description": "Whether to smoothly transition between states"
        },
        {
          "name": "TRANSITION_TIME",
          "type": "number",
          "range": "0-10",
          "default": 1.0,
          "description": "Seconds to complete transition if smooth"
        }
      ],
      "features": [
        "Multiple randomisation modes",
        "Timer-based automation",
        "Trigger system integration",
        "Proximity detection",
        "Ground contact maintenance",
        "Smooth state transitions",
        "Position constraints",
        "Rotation control",
        "Scale manipulation",
        "Multi-object support"
      ],
      "keywords": ["random", "position", "rotation", "scale", "state", "dynamic", "trigger", "transform"],
      "tutorial": {
        "videoId": "",
        "timestamp": "0",
        "steps": [
          "Create or select target object",
          "Set Physics to ON if using position randomisation",
          "Set Always Active to ON",
          "Attach the object_randomiser behavior",
          "Choose randomisation mode",
          "Configure trigger settings",
          "Set appropriate ranges",
          "Add transition sound to Sound0 if desired",
          "Test randomisation behavior"
        ]
      },
      "relatedBehaviors": ["object_mover", "trigger_zone", "proximity_trigger", "state_manager"]
    },
    "object_switch": {
      "name": "Object Switch",
      "file": "objects/object_switch.lua",
      "description": "Creates an interactive switch that can toggle object states, visibility, or trigger events. Features multiple activation methods, visual feedback, and customizable switch behaviors.",
      "properties": [
        {
          "name": "ACTIVATION_TYPE",
          "type": "dropdown",
          "default": "Press E",
          "options": ["Press E", "Mouse Click", "Proximity", "Collision"],
          "description": "How the switch is activated"
        },
        {
          "name": "INTERACTION_RANGE",
          "type": "number",
          "range": "1-500",
          "default": 100,
          "description": "Distance at which switch can be activated"
        },
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "Press E to toggle switch",
          "description": "Message shown when switch can be activated"
        },
        {
          "name": "ON_STATE_TEXT",
          "type": "string",
          "default": "Switch is ON",
          "description": "Message shown when switch is turned on"
        },
        {
          "name": "OFF_STATE_TEXT",
          "type": "string",
          "default": "Switch is OFF",
          "description": "Message shown when switch is turned off"
        },
        {
          "name": "TARGET_OBJECT",
          "type": "string",
          "default": "",
          "description": "Name of object to control (empty for self)"
        },
        {
          "name": "SWITCH_TYPE",
          "type": "dropdown",
          "default": "Toggle",
          "options": ["Toggle", "Hold", "Timer", "One-Shot"],
          "description": "How the switch behaves when activated"
        },
        {
          "name": "HOLD_TIME",
          "type": "number",
          "range": "0.1-60",
          "default": 2.0,
          "description": "Seconds to hold for timer/hold modes"
        },
        {
          "name": "VISUAL_FEEDBACK",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Animation", "Color", "Custom"],
          "description": "Type of visual feedback when switched"
        },
        {
          "name": "SWITCH_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList", "Default"],
          "description": "Animation to play when switched"
        },
        {
          "name": "REQUIRE_ITEM",
          "type": "string",
          "default": "",
          "description": "Required item name to activate switch"
        }
      ],
      "features": [
        "Multiple activation methods",
        "Range-based interaction",
        "Visual state feedback",
        "Animation support",
        "Timer functionality",
        "Hold-to-activate mode",
        "One-shot switches",
        "Item requirements",
        "Sound effect integration",
        "Event system triggers"
      ],
      "keywords": ["switch", "toggle", "interact", "button", "trigger", "activate", "control", "state"],
      "tutorial": {
        "videoId": "7hKK2lMqk6A",
        "timestamp": "0",
        "steps": [
          "Create or select switch object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the object_switch behavior",
          "Choose activation and switch types",
          "Configure interaction range",
          "Set up target object if needed",
          "Add activation sound to Sound0",
          "Add deactivation sound to Sound1",
          "Test switch functionality"
        ]
      },
      "relatedBehaviors": ["mouse_switch", "trigger_zone", "actionplate", "button"]
    },    
    "sit": {
      "name": "Sit",
      "file": "objects/sit.lua",
      "description": "Creates an interactive sitting spot that allows players to sit on chairs, benches, or other furniture. Features customizable sitting positions, animations, and interaction controls.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "Press E to sit",
          "description": "Text shown when player can sit"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 80,
          "description": "Distance at which player can interact"
        },
        {
          "name": "SIT_OFFSET_X",
          "type": "number",
          "range": "-100-100",
          "default": 0,
          "description": "Left/right position adjustment"
        },
        {
          "name": "SIT_OFFSET_Y",
          "type": "number",
          "range": "-100-100",
          "default": 0,
          "description": "Up/down position adjustment"
        },
        {
          "name": "SIT_OFFSET_Z",
          "type": "number",
          "range": "-100-100",
          "default": 0,
          "description": "Forward/back position adjustment"
        },
        {
          "name": "ROTATION_OFFSET",
          "type": "number",
          "range": "0-360",
          "default": 0,
          "description": "Rotation adjustment in degrees"
        },
        {
          "name": "SIT_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList", "Default"],
          "description": "Animation to play while sitting"
        },
        {
          "name": "STAND_KEY",
          "type": "string",
          "default": "E",
          "description": "Key to press to stand up"
        },
        {
          "name": "ALLOW_LOOK",
          "type": "boolean",
          "default": true,
          "description": "Whether player can look around while sitting"
        },
        {
          "name": "DISABLE_WEAPONS",
          "type": "boolean",
          "default": true,
          "description": "Whether to disable weapons while sitting"
        }
      ],
      "features": [
        "Customizable sitting positions",
        "Position offset controls",
        "Rotation adjustment",
        "Animation integration",
        "Interaction prompts",
        "Weapon control",
        "Look controls",
        "Sound effect support",
        "Multiple furniture types",
        "Performance optimized"
      ],
      "keywords": ["sit", "chair", "furniture", "interaction", "position", "animation", "comfort", "rest"],
      "tutorial": {
        "videoId": "VhRUtM40JJM",
        "timestamp": "0",
        "steps": [
          "Create or select furniture object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the sit behavior",
          "Configure sitting position offsets",
          "Set up interaction range",
          "Add sit sound to Sound0",
          "Add stand sound to Sound1",
          "Configure animation settings",
          "Test sitting interaction"
        ]
      },
      "relatedBehaviors": ["player_control", "animation_system", "interaction_zone", "furniture_system"]
    },
    "sleep": {
      "name": "Sleep",
      "file": "objects/sleep.lua",
      "description": "Creates an interactive sleeping spot that allows players to rest, pass time, and restore health. Features customizable sleep duration, health regeneration, and time progression controls.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "Press E to sleep",
          "description": "Text shown when player can sleep"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 80,
          "description": "Distance at which player can interact"
        },
        {
          "name": "SLEEP_DURATION",
          "type": "number",
          "range": "1-24",
          "default": 8,
          "description": "Hours of in-game time that pass while sleeping"
        },
        {
          "name": "HEALTH_RESTORE",
          "type": "number",
          "range": "0-100",
          "default": 100,
          "description": "Percentage of health restored after sleeping"
        },
        {
          "name": "SLEEP_POSITION",
          "type": "string",
          "default": "0,0,0",
          "description": "Position offset for sleeping (X,Y,Z)"
        },
        {
          "name": "SLEEP_ROTATION",
          "type": "number",
          "range": "0-360",
          "default": 0,
          "description": "Rotation offset for sleeping position"
        },
        {
          "name": "REQUIRE_TIRED",
          "type": "boolean",
          "default": false,
          "description": "Whether player must be tired to sleep"
        },
        {
          "name": "WAKE_ON_DAMAGE",
          "type": "boolean",
          "default": true,
          "description": "Whether to wake player if damaged"
        },
        {
          "name": "FADE_EFFECT",
          "type": "boolean",
          "default": true,
          "description": "Whether to use screen fade effect"
        },
        {
          "name": "SAVE_ON_SLEEP",
          "type": "boolean",
          "default": false,
          "description": "Whether to auto-save game after sleeping"
        }
      ],
      "features": [
        "Customizable sleep duration",
        "Health regeneration system",
        "Time progression control",
        "Position and rotation adjustment",
        "Tiredness requirement option",
        "Damage interruption",
        "Screen fade transitions",
        "Auto-save functionality",
        "Sound effect support",
        "Multiple bed types"
      ],
      "keywords": ["sleep", "rest", "bed", "health", "time", "restore", "save", "regenerate"],
      "tutorial": {
        "videoId": "xIjVB4pcKyI",
        "timestamp": "0",
        "steps": [
          "Create or select bed object",
          "Set Physics to ON",
          "Set Always Active to ON",
          "Attach the sleep behavior",
          "Configure sleep duration and health restore",
          "Adjust position and rotation offsets",
          "Add sleep sound to Sound0",
          "Add wake sound to Sound1",
          "Test sleep functionality"
        ]
      },
      "relatedBehaviors": ["health_system", "time_system", "save_system", "player_stats"]
    },
    "target": {
      "name": "Target",
      "file": "objects/target.lua",
      "description": "Creates interactive shooting targets with multiple types and behaviors. Features stationary, moving, spinning, flying, breakable, and scenery targets with configurable scoring, reset times, and trigger actions. Perfect for shooting ranges and combat training scenarios.",
      "properties": [
        {
          "name": "HIT_TEXT",
          "type": "string",
          "default": "Target Hit",
          "description": "Text displayed when the target is hit by the player."
        },
        {
          "name": "TARGET_TYPE",
          "type": "dropdown",
          "default": "Stationary",
          "options": ["Stationary", "Moving", "Spinning", "Random Flying", "Breakable", "Scenery"],
          "description": "Type of target behavior. Stationary = static target, Moving = travels along path, Spinning = rotates continuously, Random Flying = flies randomly, Breakable = breaks when hit, Scenery = decorative target."
        },
        {
          "name": "TARGET_MOVE_X",
          "type": "number",
          "range": "0-1000",
          "default": 0,
          "description": "Distance the target moves along the X axis. Only used for Moving targets."
        },
        {
          "name": "TARGET_MOVE_Y",
          "type": "number",
          "range": "0-1000",
          "default": 0,
          "description": "Distance the target moves along the Y axis. Only used for Moving targets."
        },
        {
          "name": "TARGET_MOVE_Z",
          "type": "number",
          "range": "0-1000",
          "default": 0,
          "description": "Distance the target moves along the Z axis. Only used for Moving targets."
        },
        {
          "name": "TARGET_MOVE_SPEED",
          "type": "number",
          "range": "0.0-2.0",
          "default": 0.50,
          "description": "Speed at which the target moves. Higher values create faster movement."
        },
        {
          "name": "TARGET_RESET",
          "type": "number",
          "range": "0-100",
          "default": 10,
          "description": "Time in seconds before the target resets after being hit. Set to 0 for no reset."
        },
        {
          "name": "TARGET_TRIGGER",
          "type": "dropdown",
          "default": "No",
          "options": ["Yes", "No", "Lose Game", "Win Game"],
          "description": "Action to perform when target is hit. Yes = trigger logic connections, No = no action, Lose Game = end game in defeat, Win Game = end game in victory."
        },
        {
          "name": "TARGET_POINTS",
          "type": "number",
          "range": "1-100",
          "default": 1,
          "description": "Number of points awarded or deducted when target is hit."
        },
        {
          "name": "POINTS_ISSUANCE",
          "type": "dropdown",
          "default": "Add",
          "options": ["Add", "Deduct"],
          "description": "Whether to add or deduct points when target is hit."
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "MyPointTally",
          "description": "Name of the user global variable to modify with points (e.g., MyPointTally)."
        },
        {
          "name": "TARGET_MOVE_DELAY",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Delay in seconds before moving targets start moving."
        },
        {
          "name": "TARGET_FACING",
          "type": "dropdown",
          "default": "Fixed",
          "options": ["Fixed", "Random"],
          "description": "How the target faces when reset. Fixed = same direction, Random = random direction."
        },
        {
          "name": "TARGET_ANIMATION",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "AnimSetList"],
          "description": "Animation to play when target is hit. Only used for Breakable targets."
        },
        {
          "name": "SENSE_RANGE",
          "type": "number",
          "range": "0-200",
          "default": 80,
          "description": "Range at which the target can detect nearby entities. Set to 0 to disable. When entities enter range, target automatically triggers."
        }
      ],
      "features": [
        "Six different target types with unique behaviors",
        "Configurable movement patterns and speeds",
        "Point scoring system with global variable integration",
        "Automatic reset timers with customizable delays",
        "Multiple trigger actions including game win/lose",
        "Sound effects for hit, reset, moving, and trigger events",
        "Random facing options for increased challenge",
        "Entity detection and automatic triggering",
        "Animation support for breakable targets",
        "Collision and physics management",
        "Logic connection triggers for game events",
        "Compatible with both keyboard and gamepad controls"
      ],
      "keywords": ["target", "shooting", "range", "points", "scoring", "moving", "spinning", "flying", "breakable", "reset", "trigger"],
      "tutorial": {
        "videoId": "4WlZcWdS_C0",
        "timestamp": "0:00",
        "steps": [
          "Create a target object",
          "Set AlwaysActive to ON, IsImmobile to YES",
          "Attach the target behavior",
          "Choose target type and configure movement",
          "Set up scoring system and global variables",
          "Configure reset times and trigger actions",
          "Add hit sound to Sound0",
          "Add reset sound to Sound1",
          "Add moving sound to Sound2",
          "Add trigger sound to Sound3",
          "Test target functionality and scoring"
        ]
      },
      "relatedBehaviors": ["shooting_range", "scoring_system", "moving_object", "breakable_object", "trigger_zone"]
    },
    "target_dummy": {
      "name": "Target Dummy",
      "file": "objects/target_dummy.lua",
      "description": "Creates a target dummy that responds to being shot with various movement and rotation behaviors. Features flip, rotate, side movement, and vertical movement with hide options. Perfect for shooting practice and combat training scenarios.",
      "properties": [
        {
          "name": "HIT_TEXT",
          "type": "string",
          "default": "Target Hit",
          "description": "Text displayed when the target dummy is hit by the player."
        },
        {
          "name": "TARGET_TYPE",
          "type": "dropdown",
          "default": "Flip",
          "options": ["Flip", "Rotate", "Side Move+Flip", "Vertical Move+Hide"],
          "description": "Type of target dummy behavior. Flip = rotates 90 degrees, Rotate = rotates -90 degrees, Side Move+Flip = moves sideways then flips, Vertical Move+Hide = moves up then hides."
        },
        {
          "name": "TARGET_MOVE_DISTANCE",
          "type": "number",
          "range": "0-500",
          "default": 250,
          "description": "Distance the target dummy moves when using movement types. Higher values create longer movement paths."
        },
        {
          "name": "TARGET_MOVE_SPEED",
          "type": "number",
          "range": "0.0-2.0",
          "default": 0.50,
          "description": "Speed at which the target dummy moves. Higher values create faster movement."
        },
        {
          "name": "TARGET_RESET",
          "type": "number",
          "range": "0-100",
          "default": 10,
          "description": "Time in seconds before the target dummy resets after being hit. Set to 0 for no reset."
        },
        {
          "name": "TARGET_TRIGGER",
          "type": "dropdown",
          "default": "No",
          "options": ["Yes", "No"],
          "description": "Whether to trigger logic connections when the target dummy is hit. Yes = trigger connections, No = no action."
        }
      ],
      "features": [
        "Four different target dummy behaviors with unique responses",
        "Configurable movement distances and speeds",
        "Automatic reset timers with customizable delays",
        "Logic connection triggers for game events",
        "Sound effects for hit, reset, and moving events",
        "Collision management during movement",
        "Position and rotation preservation for accurate resets",
        "Health-based hit detection system",
        "Smooth movement animations",
        "Compatible with both keyboard and gamepad controls"
      ],
      "keywords": ["target", "dummy", "shooting", "practice", "flip", "rotate", "move", "hide", "reset", "training"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create a target dummy object",
          "Set AlwaysActive to ON, IsImmobile to YES",
          "Attach the target_dummy behavior",
          "Choose target type and configure movement",
          "Set up movement distance and speed",
          "Configure reset times and trigger actions",
          "Add hit sound to Sound0",
          "Add reset sound to Sound1",
          "Add moving sound to Sound2",
          "Test target dummy functionality and responses"
        ]
      },
      "relatedBehaviors": ["target", "shooting_range", "moving_object", "trigger_zone", "training_dummy"]
    },
    "zipline": {
      "name": "Zipline",
      "file": "objects/zipline.lua",
      "description": "Creates a zipline system between two anchor points. Features configurable travel types, speeds, release mechanisms, and visual zipline objects. Perfect for creating transportation systems and traversal mechanics.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to use",
          "description": "Text displayed when player can interact with the zipline anchor."
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-300",
          "default": 100,
          "description": "Distance at which the player can interact with the zipline anchor."
        },
        {
          "name": "ZIP_TYPE",
          "type": "dropdown",
          "default": "Two Way Travel",
          "options": ["High to Low Travel", "Two Way Travel"],
          "description": "Type of zipline travel. High to Low = only travel from higher to lower anchor, Two Way = travel in both directions."
        },
        {
          "name": "ZIP_SPEED",
          "type": "number",
          "range": "0.01-2.00",
          "default": 0.10,
          "description": "Speed at which the player travels along the zipline. Higher values create faster travel."
        },
        {
          "name": "ZIP_RELEASE",
          "type": "dropdown",
          "default": "Auto Release",
          "options": ["Manual Release", "Auto Release"],
          "description": "How the player releases from the zipline. Manual Release = press Q to release, Auto Release = automatic release at destination."
        },
        {
          "name": "ZIP_RELEASE_TEXT",
          "type": "string",
          "default": "Q to release",
          "description": "Text displayed during manual release mode. Shows the key to press for release."
        },
        {
          "name": "ZIPLINE_OBJECT",
          "type": "string",
          "default": "",
          "description": "Name of the zipline visual object (e.g., zipline). This object will be scaled and positioned to create the visible zipline line."
        },
        {
          "name": "ANCHOR_STATE",
          "type": "dropdown",
          "default": "Visible",
          "options": ["Visible", "Invisible"],
          "description": "Whether the zipline anchors are visible. Invisible anchors are hidden but still functional."
        },
        {
          "name": "RELEASE_ADJUSTMENT",
          "type": "number",
          "range": "0.10-3.00",
          "default": 0.10,
          "description": "Adjustment factor for automatic release distance. Higher values release the player further from the destination."
        }
      ],
      "features": [
        "Dual anchor zipline system with automatic connection",
        "Configurable travel types and speeds",
        "Manual and automatic release mechanisms",
        "Visual zipline object scaling and positioning",
        "Smooth player transportation along zipline",
        "Height-based travel restrictions",
        "Sound effects for zipline travel",
        "Anchor visibility control",
        "Automatic zipline line creation",
        "Collision management during travel",
        "Compatible with both keyboard and gamepad controls"
      ],
      "keywords": ["zipline", "transport", "travel", "anchor", "cable", "transportation", "traversal", "movement", "speed"],
      "tutorial": {
        "videoId": "81j6gbw_aQU",
        "timestamp": "0:00",
        "steps": [
          "Create two zipline anchor objects with the same name",
          "Set both anchors to Physics=ON, IsImmobile=YES, AlwaysActive=ON",
          "Create a zipline visual object with a unique name",
          "Attach the zipline behavior to both anchors",
          "Configure travel type and speed settings",
          "Set up release mechanism preferences",
          "Enter the zipline object name in the behavior",
          "Add zipline travel sound to Sound0",
          "Test zipline functionality between anchors"
        ]
      },
      "relatedBehaviors": ["transport", "moving_object", "anchor_system", "cable_system", "travel_system"]
    },
    "hack": {
      "name": "Hack System",
      "file": "puzzle/hack.lua",
      "description": "A comprehensive hacking system that allows players to interact with and hack electronic devices. Features timed hacking mechanics, success/failure states, alarm systems, visual progress bars, and integration with logic connections and global variables.",
      "properties": [
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can interact with the hackable object"
        },
        {
          "name": "USE_TEXT",
          "type": "string",
          "default": "E to Hack",
          "description": "Text displayed when player is in range to hack"
        },
        {
          "name": "HACK_TIME",
          "type": "number",
          "range": "1-30",
          "default": 8,
          "description": "Time in seconds required to complete the hack"
        },
        {
          "name": "HACK_TEXT",
          "type": "string",
          "default": "Working...",
          "description": "Text displayed during the hacking process"
        },
        {
          "name": "SUCCESS_TEXT",
          "type": "string",
          "default": "Success..",
          "description": "Text displayed when hack is successful"
        },
        {
          "name": "FAILURE_TEXT",
          "type": "string",
          "default": "Failed..",
          "description": "Text displayed when hack fails"
        },
        {
          "name": "FAILURE_COUNT",
          "type": "number",
          "range": "1-20",
          "default": 3,
          "description": "Number of failures before alarm is triggered"
        },
        {
          "name": "FAILURE_ALARM",
          "type": "dropdown",
          "default": "Off",
          "options": ["Off", "On"],
          "description": "Whether to trigger alarm after maximum failures"
        },
        {
          "name": "ALARM_RESET",
          "type": "number",
          "range": "1-60",
          "default": 5,
          "description": "Time in seconds before alarm resets and hacking can resume"
        },
        {
          "name": "NOISE_RANGE",
          "type": "number",
          "range": "0-5000",
          "default": 500,
          "description": "Range at which hacking noise can be heard by AI"
        },
        {
          "name": "HACK_TRIGGER",
          "type": "dropdown",
          "default": "Off",
          "options": ["Off", "On"],
          "description": "Whether to trigger logic connections and ActivateIfUsed when hack succeeds"
        },
        {
          "name": "IMAGEFILE",
          "type": "string",
          "default": "imagebank\\misc\\testimages\\search-bar.png",
          "description": "Image file for the hacking progress bar"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Name of global variable to modify on successful hack (e.g., MyGlobal)"
        },
        {
          "name": "AFFECT_VALUE",
          "type": "number",
          "range": "1-100",
          "default": 1,
          "description": "Value to add to the global variable on successful hack"
        },
        {
          "name": "NO_FAILURES",
          "type": "boolean",
          "default": false,
          "description": "If enabled, hack will always succeed (no random failure chance)"
        }
      ],
      "features": [
        "Timed hacking mechanics with visual progress bar",
        "Success and failure states with animations",
        "Configurable failure limits and alarm systems",
        "AI noise generation during hacking",
        "Global variable integration for game progression",
        "Logic connection and ActivateIfUsed triggers",
        "Customizable interaction ranges and prompts",
        "Visual progress bar with custom images",
        "Sound effects for hacking, success, failure, and alarms",
        "Automatic object destruction after successful hack",
        "Alarm reset system with configurable timing",
        "Random success/failure chance (can be disabled)",
        "Animation state management (on/off states)",
        "Memory efficient state tracking",
        "VR-compatible interaction system"
      ],
      "keywords": ["hack", "electronic", "security", "timer", "progress", "alarm", "noise", "trigger", "global", "variable", "animation", "sound"],
      "tutorial": {
        "videoId": "N_B_XqHP4t4",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the hackable device",
          "Set AlwaysActive to ON for the object",
          "Attach the hack behavior",
          "Configure USE_RANGE for interaction distance",
          "Set USE_TEXT for interaction prompt",
          "Configure HACK_TIME for hacking duration",
          "Set HACK_TEXT for progress message",
          "Configure SUCCESS_TEXT and FAILURE_TEXT",
          "Set FAILURE_COUNT for failure limit",
          "Choose FAILURE_ALARM setting",
          "Configure ALARM_RESET timing",
          "Set NOISE_RANGE for AI detection",
          "Choose HACK_TRIGGER for logic connections",
          "Set IMAGEFILE for progress bar image",
          "Configure USER_GLOBAL_AFFECTED if using global variables",
          "Set AFFECT_VALUE for global variable modification",
          "Enable NO_FAILURES if guaranteed success is desired",
          "Add sound effects to Sound0 (hacking), Sound1 (success), Sound2 (failure), Sound3 (alarm)",
          "Test interaction range and prompts",
          "Verify hacking progress bar displays correctly",
          "Test success and failure scenarios",
          "Check alarm system functionality",
          "Verify logic connections trigger correctly",
          "Test global variable updates",
          "Check AI noise generation",
          "Verify object destruction after success"
        ]
      },
      "relatedBehaviors": ["security_system", "electronic_device", "timer_system", "alarm_system", "global_variables", "logic_connector"]
    },
    "search_object": {
      "name": "Search Object",
      "file": "puzzle/search_object.lua",
      "description": "A comprehensive search system that allows players to search containers, objects, and areas for various rewards. Features timed searching mechanics, multiple content types (ammo, health, named items, nothing), visual progress bars, and integration with logic connections.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to Search",
          "description": "Text displayed when player is in range to search"
        },
        {
          "name": "CONTENT",
          "type": "dropdown",
          "default": "Health",
          "options": ["Ammo", "Health", "Named Item", "Nothing"],
          "description": "Type of content that will be found when searching"
        },
        {
          "name": "NAMED_ITEM",
          "type": "string",
          "default": "",
          "description": "Unique entity name for named item content (will be auto-hidden until found)"
        },
        {
          "name": "QUANTITY",
          "type": "number",
          "range": "1-50",
          "default": 8,
          "description": "Amount of ammo or health to give, or quantity of named items"
        },
        {
          "name": "SEARCH_TIME",
          "type": "number",
          "range": "1-30",
          "default": 8,
          "description": "Time in seconds required to complete the search"
        },
        {
          "name": "SEARCH_TEXT",
          "type": "string",
          "default": "Searching...",
          "description": "Text displayed during the search process"
        },
        {
          "name": "RESULT_TEXT",
          "type": "string",
          "default": "Found..",
          "description": "Text displayed when search is completed successfully"
        },
        {
          "name": "NOISE_RANGE",
          "type": "number",
          "range": "1-5000",
          "default": 500,
          "description": "Range at which search noise can be heard by AI"
        },
        {
          "name": "SEARCH_TRIGGER",
          "type": "dropdown",
          "default": "Off",
          "options": ["Off", "On"],
          "description": "Whether to trigger logic connections when search is completed"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "0-100",
          "default": 90,
          "description": "Distance at which the player can interact with the searchable object"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "IMAGEFILE",
          "type": "string",
          "default": "imagebank\\misc\\testimages\\search-bar.png",
          "description": "Image file for the search progress bar"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the searchable object"
        }
      ],
      "features": [
        "Timed searching mechanics with visual progress bar",
        "Multiple content types (ammo, health, named items, nothing)",
        "Automatic item hiding and revealing for named items",
        "Configurable search duration and interaction ranges",
        "AI noise generation during searching",
        "Logic connection and ActivateIfUsed triggers",
        "Customizable interaction prompts and result messages",
        "Visual progress bar with custom images",
        "Sound effects for searching and finding items",
        "Animation state management (sealed/opened/searched)",
        "Item highlighting and selection system",
        "Automatic ammo distribution to all weapon slots",
        "Health restoration with maximum health limits",
        "Entity name matching for named item content",
        "Memory efficient state tracking and management"
      ],
      "keywords": ["search", "container", "loot", "ammo", "health", "item", "progress", "timer", "noise", "trigger", "animation", "sound"],
      "tutorial": {
        "videoId": "n3Bn55KmTLo",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the searchable container",
          "Set AlwaysActive to ON for the object",
          "Attach the search_object behavior",
          "Configure PROMPT_TEXT for interaction message",
          "Choose CONTENT type (Ammo, Health, Named Item, Nothing)",
          "Set NAMED_ITEM if using named item content",
          "Configure QUANTITY for reward amount",
          "Set SEARCH_TIME for search duration",
          "Configure SEARCH_TEXT for progress message",
          "Set RESULT_TEXT for completion message",
          "Configure NOISE_RANGE for AI detection",
          "Choose SEARCH_TRIGGER for logic connections",
          "Set USE_RANGE for interaction distance",
          "Choose PROMPT_DISPLAY location preference",
          "Set IMAGEFILE for progress bar image",
          "Choose ITEM_HIGHLIGHT style if desired",
          "Add sound effects to Sound0 (searching) and Sound1 (found)",
          "For named items, create the item entity with exact name match",
          "Set item AlwaysActive to ON and hide it initially",
          "Test interaction range and prompts",
          "Verify search progress bar displays correctly",
          "Test different content types and quantities",
          "Check AI noise generation during searching",
          "Verify logic connections trigger correctly",
          "Test named item hiding and revealing",
          "Check ammo distribution to weapon slots",
          "Verify health restoration with limits",
          "Test animation state changes"
        ]
      },
      "relatedBehaviors": ["loot_system", "container_system", "health_system", "ammo_system", "item_system", "logic_connector", "animation_controller"]
    },
    "task_object": {
      "name": "Task Object",
      "file": "puzzle/task_object.lua",
      "description": "A tool-based interaction system that requires specific tools to activate objects and trigger game events. Features tool requirement checking, customizable prompts, switch value integration, and logic connection triggers for creating puzzle mechanics and progression systems.",
      "properties": [
        {
          "name": "TASK_TEXT",
          "type": "string",
          "default": "Tool is required to use",
          "description": "Text displayed when player doesn't have the required tool"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can interact with the task object"
        },
        {
          "name": "TOOL_REQUIRED",
          "type": "dropdown",
          "default": "Crowbar",
          "options": ["Crowbar", "Screwdriver", "Spanner", "Cutter", "Named Tool"],
          "description": "Type of tool required to complete the task"
        },
        {
          "name": "TOOL_NAME",
          "type": "string",
          "default": "Named Tool",
          "description": "Name of the tool when using 'Named Tool' option"
        },
        {
          "name": "TASK_USE_TEXT",
          "type": "string",
          "default": "E to use the tool to activate",
          "description": "Text displayed when player has the correct tool"
        },
        {
          "name": "TASK_DONE_TEXT",
          "type": "string",
          "default": "Task Completed",
          "description": "Text displayed when task is completed"
        },
        {
          "name": "VISIBLE",
          "type": "dropdown",
          "default": "Yes",
          "options": ["Yes", "No"],
          "description": "Whether the task object is visible and has collision"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "SWITCH_VALUE",
          "type": "number",
          "range": "1-99",
          "default": 1,
          "description": "Success result value for use with combo switches"
        }
      ],
      "features": [
        "Tool requirement checking system",
        "Multiple tool types (Crowbar, Screwdriver, Spanner, Cutter, Named Tool)",
        "Customizable interaction prompts and messages",
        "Switch value integration for combo systems",
        "Logic connection and ActivateIfUsed triggers",
        "Animation state management (on/off states)",
        "Sound effects for tool use and task completion",
        "Visibility and collision control",
        "Global tool state management",
        "Automatic tool reset after use",
        "Configurable interaction ranges",
        "Prompt display location options",
        "Memory efficient state tracking",
        "Multiplayer compatibility with SetActivatedWithMP",
        "Task completion persistence"
      ],
      "keywords": ["task", "tool", "puzzle", "interaction", "requirement", "switch", "combo", "activation", "animation", "sound"],
      "tutorial": {
        "videoId": "DK0OmIWOMd8",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the task object",
          "Set AlwaysActive to ON for the object",
          "Attach the task_object behavior",
          "Configure TASK_TEXT for missing tool message",
          "Set USE_RANGE for interaction distance",
          "Choose TOOL_REQUIRED type",
          "Set TOOL_NAME if using 'Named Tool' option",
          "Configure TASK_USE_TEXT for correct tool message",
          "Set TASK_DONE_TEXT for completion message",
          "Choose VISIBLE setting for object visibility",
          "Set PROMPT_DISPLAY location preference",
          "Configure SWITCH_VALUE for combo system integration",
          "Add sound effects to Sound0 (tool use) and Sound1 (completion)",
          "Create tool objects with appropriate names",
          "Set tool AlwaysActive to ON",
          "Test interaction without required tool",
          "Verify correct prompt displays",
          "Test interaction with correct tool",
          "Check animation state changes",
          "Verify logic connections trigger correctly",
          "Test switch value integration",
          "Check sound effects play correctly",
          "Verify task completion persistence",
          "Test multiplayer compatibility if needed"
        ]
      },
      "relatedBehaviors": ["tool_system", "puzzle_system", "switch_system", "combo_system", "logic_connector", "animation_controller", "interaction_system"]
    },
    "task_tool": {
      "name": "Task Tool",
      "file": "puzzle/task_tool.lua",
      "description": "A tool collection system that provides players with specific tools needed for task objects. Features automatic and manual pickup styles, multiple tool types, global tool state management, and integration with the task object system for creating puzzle progression mechanics.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to collect",
          "description": "Text displayed when player is in range to collect the tool"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can collect the tool"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "dropdown",
          "default": "Automatic",
          "options": ["Automatic", "Manual"],
          "description": "Collection style. Automatic = immediate pickup, Manual = requires E key press"
        },
        {
          "name": "TOOL_TYPE",
          "type": "dropdown",
          "default": "Crowbar",
          "options": ["Crowbar", "Screwdriver", "Spanner", "Cutter", "Named Tool"],
          "description": "Type of tool that will be collected"
        },
        {
          "name": "TOOL_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the tool when using 'Named Tool' option"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the tool object"
        }
      ],
      "features": [
        "Tool collection system with multiple tool types",
        "Automatic and manual pickup styles",
        "Global tool state management (g_tasktool, g_tasktoolname)",
        "Integration with task_object system",
        "Logic connection triggers on collection",
        "Sound effects for tool pickup",
        "Item highlighting and selection system",
        "Configurable interaction ranges and prompts",
        "Automatic object destruction after collection",
        "Collectable entity support",
        "Memory efficient state tracking",
        "Tool type validation and assignment",
        "Prompt display location options",
        "Entity collection state management"
      ],
      "keywords": ["tool", "collection", "pickup", "task", "puzzle", "interaction", "automatic", "manual", "sound", "highlight"],
      "tutorial": {
        "videoId": "DK0OmIWOMd8",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the tool",
          "Set AlwaysActive to ON for the object",
          "Attach the task_tool behavior",
          "Configure PROMPT_TEXT for collection message",
          "Set PICKUP_RANGE for interaction distance",
          "Choose PICKUP_STYLE (Automatic or Manual)",
          "Select TOOL_TYPE from available options",
          "Set TOOL_NAME if using 'Named Tool' option",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Add sound effect to Sound0 slot",
          "Test automatic pickup if using automatic style",
          "Test manual pickup with E key if using manual style",
          "Verify tool is added to global state",
          "Check logic connections trigger correctly",
          "Test with task_object to verify integration",
          "Verify object destruction after collection",
          "Test different tool types and names",
          "Check prompt display and highlighting",
          "Verify sound effects play correctly"
        ]
      },
      "relatedBehaviors": ["task_object", "tool_system", "pickup_system", "collection_system", "logic_connector", "interaction_system"]
    },
    "winobject": {
      "name": "Win Object",
      "file": "puzzle/winobject.lua",
      "description": "A level completion system that allows players to collect an object and then use it to win the level. Features two-stage interaction (pickup then use), configurable prompts, level transition control, and integration with storyboard logic for creating mission objectives and win conditions.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to pickup",
          "description": "Text displayed when player is in range to pickup the win object"
        },
        {
          "name": "USEAGE_TEXT",
          "type": "string",
          "default": "X to use",
          "description": "Text displayed after pickup, indicating how to use the object"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-200",
          "default": 90,
          "description": "Distance at which the player can pickup the win object"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the win object"
        },
        {
          "name": "GoToLevelMode",
          "type": "dropdown",
          "default": "Use Storyboard Logic",
          "options": ["Use Storyboard Logic", "Go to Specific Level"],
          "description": "Controls whether to load the next level in the Storyboard or a specific level"
        },
        {
          "name": "ResetStates",
          "type": "boolean",
          "default": false,
          "description": "Whether to reset states when entering the new level"
        }
      ],
      "features": [
        "Two-stage interaction system (pickup then use)",
        "Level completion and transition control",
        "Storyboard logic integration",
        "Logic connection and ActivateIfUsed triggers",
        "Sound effects for pickup and use",
        "Item highlighting and selection system",
        "Configurable interaction ranges and prompts",
        "Automatic object hiding after pickup",
        "Memory efficient state tracking",
        "Level state reset options",
        "Prompt display location options",
        "Entity visibility and collision management",
        "Mission objective integration",
        "Win condition system"
      ],
      "keywords": ["win", "level", "completion", "objective", "mission", "pickup", "use", "transition", "storyboard", "trigger"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the win object",
          "Set AlwaysActive to ON for the object",
          "Attach the winobject behavior",
          "Configure PROMPT_TEXT for pickup message",
          "Set USEAGE_TEXT for usage instructions",
          "Configure PICKUP_RANGE for interaction distance",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Choose GoToLevelMode for level progression",
          "Enable ResetStates if state reset is needed",
          "Add sound effects to Sound0 (pickup) and Sound1 (use)",
          "Test pickup interaction within range",
          "Verify object hides after pickup",
          "Test usage with U key",
          "Check level transition behavior",
          "Verify logic connections trigger correctly",
          "Test sound effects play correctly",
          "Check storyboard progression if enabled",
          "Verify state reset functionality if enabled",
          "Test with different prompt display settings"
        ]
      },
      "relatedBehaviors": ["level_control", "mission_system", "objective_system", "pickup_system", "logic_connector", "storyboard_system"]
    },
    "binoculars": {
      "name": "Binoculars",
      "file": "rpg/binoculars.lua",
      "description": "A binocular system that provides players with long-range observation capabilities. Features configurable zoom levels, mouse wheel zoom control, weapon switching, visual overlay, and customizable pickup mechanics for creating reconnaissance and exploration gameplay.",
      "properties": [
        {
          "name": "PICKUP_TEXT",
          "type": "string",
          "default": "E to Pickup",
          "description": "Text displayed when player is in range to pickup the binoculars"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can pickup the binoculars"
        },
        {
          "name": "USEAGE_TEXT",
          "type": "string",
          "default": "Hold B to use",
          "description": "Text displayed after pickup, indicating how to use the binoculars"
        },
        {
          "name": "MIN_ZOOM",
          "type": "number",
          "range": "-20-1",
          "default": -20,
          "description": "Minimum zoom level (negative values = wider field of view)"
        },
        {
          "name": "MAX_ZOOM",
          "type": "number",
          "range": "1-30",
          "default": 60,
          "description": "Maximum zoom level (positive values = narrower field of view)"
        },
        {
          "name": "ZOOM_SPEED",
          "type": "number",
          "range": "1-5",
          "default": 1,
          "description": "Speed of zoom changes when using mouse wheel"
        },
        {
          "name": "IMAGEFILE",
          "type": "string",
          "default": "imagebank\\misc\\testimages\\binocs.png",
          "description": "Image file for the binocular overlay screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the binocular object"
        }
      ],
      "features": [
        "Configurable zoom range with mouse wheel control",
        "Automatic weapon switching when using binoculars",
        "Visual overlay screen with custom images",
        "Real-time magnification factor display",
        "Smooth zoom transitions with speed control",
        "Automatic field of view restoration",
        "Item highlighting and selection system",
        "Sound effects for pickup and usage",
        "Memory efficient state tracking",
        "Weapon state preservation and restoration",
        "Configurable interaction ranges and prompts",
        "Automatic object hiding after pickup",
        "Field of view management system",
        "Reconnaissance and exploration support"
      ],
      "keywords": ["binoculars", "zoom", "reconnaissance", "observation", "weapon", "switch", "overlay", "field of view", "mouse wheel", "pickup"],
      "tutorial": {
        "videoId": "rnbjf0QFhUM",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the binoculars",
          "Set AlwaysActive to ON for the object",
          "Attach the binoculars behavior",
          "Configure PICKUP_TEXT for pickup message",
          "Set PICKUP_RANGE for interaction distance",
          "Configure USEAGE_TEXT for usage instructions",
          "Set MIN_ZOOM for minimum zoom level",
          "Configure MAX_ZOOM for maximum zoom level",
          "Set ZOOM_SPEED for zoom sensitivity",
          "Configure IMAGEFILE for overlay image",
          "Choose ITEM_HIGHLIGHT style if desired",
          "Add sound effect to Sound0 slot",
          "Test pickup interaction within range",
          "Verify object hides after pickup",
          "Test binocular usage with B key",
          "Check mouse wheel zoom functionality",
          "Verify weapon switching behavior",
          "Test zoom range limits",
          "Check magnification factor display",
          "Verify field of view restoration",
          "Test overlay image display",
          "Check sound effects play correctly"
        ]
      },
      "relatedBehaviors": ["weapon_system", "camera_control", "pickup_system", "overlay_system", "interaction_system", "reconnaissance_system"]
    },
    "break_open": {
      "name": "Break Open",
      "file": "rpg/break_open.lua",
      "description": "A destructible container system that rewards players for breaking open objects. Features multiple content types (ammo, health, named items, nothing, random), health-based destruction, animation support, AI noise generation, and automatic cleanup with fade effects.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "Break open",
          "description": "Text displayed when player is in range of the breakable object"
        },
        {
          "name": "PROMPT_RANGE",
          "type": "number",
          "range": "0-100",
          "default": 80,
          "description": "Distance at which the prompt is displayed"
        },
        {
          "name": "CONTENT",
          "type": "dropdown",
          "default": "Health",
          "options": ["Ammo", "Health", "Named Item", "Nothing", "Random"],
          "description": "Type of content that will be found when breaking the object"
        },
        {
          "name": "NAMED_ITEM",
          "type": "string",
          "default": "",
          "description": "Name of the specific item to spawn (for Named Item content)"
        },
        {
          "name": "QUANTITY",
          "type": "number",
          "range": "1-5",
          "default": 2,
          "description": "Amount of ammo, health, or items to give"
        },
        {
          "name": "NOISE_RANGE",
          "type": "number",
          "range": "0-5000",
          "default": 500,
          "description": "Range at which breaking noise can be heard by AI"
        },
        {
          "name": "BREAK_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to play when object is broken"
        },
        {
          "name": "OPEN_TRIGGER",
          "type": "dropdown",
          "default": "Off",
          "options": ["Off", "On"],
          "description": "Whether to trigger logic connections when object is broken"
        },
        {
          "name": "COLLECT_TEXT",
          "type": "string",
          "default": "Found..",
          "description": "Text displayed when items are found"
        },
        {
          "name": "FADE_DELAY",
          "type": "number",
          "range": "0-100",
          "default": 10,
          "description": "Time in seconds before object starts fading out"
        },
        {
          "name": "RANDOM_ITEMS",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of entity names for random content"
        },
        {
          "name": "RANDOM_MIN",
          "type": "number",
          "range": "1-50",
          "default": 1,
          "description": "Minimum quantity for random items"
        },
        {
          "name": "RANDOM_MAX",
          "type": "number",
          "range": "1-50",
          "default": 50,
          "description": "Maximum quantity for random items"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        }
      ],
      "features": [
        "Health-based destruction system",
        "Multiple content types (ammo, health, named items, nothing, random)",
        "Automatic ammo distribution to all weapon slots",
        "Health restoration with maximum health limits",
        "Named item spawning and positioning",
        "Random item selection with quantity ranges",
        "Animation support for breaking effects",
        "AI noise generation during destruction",
        "Logic connection and ActivateIfUsed triggers",
        "Automatic cleanup with fade effects",
        "Sound effects for breaking and finding items",
        "Item highlighting and selection system",
        "Configurable interaction ranges and prompts",
        "Memory efficient state tracking",
        "Entity name matching for items"
      ],
      "keywords": ["break", "destructible", "container", "loot", "ammo", "health", "item", "random", "animation", "noise", "fade"],
      "tutorial": {
        "videoId": "92b3olSjFhw",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the breakable container",
          "Set AlwaysActive to ON for the object",
          "Attach the break_open behavior",
          "Configure PROMPT_TEXT for interaction message",
          "Set PROMPT_RANGE for display distance",
          "Choose CONTENT type (Ammo, Health, Named Item, Nothing, Random)",
          "Set NAMED_ITEM if using named item content",
          "Configure QUANTITY for reward amount",
          "Set NOISE_RANGE for AI detection",
          "Choose BREAK_ANIMATION if desired",
          "Set OPEN_TRIGGER for logic connections",
          "Configure COLLECT_TEXT for success message",
          "Set FADE_DELAY for cleanup timing",
          "Configure RANDOM_ITEMS list if using random content",
          "Set RANDOM_MIN and RANDOM_MAX for random quantities",
          "Choose PROMPT_DISPLAY location preference",
          "Add sound effects to Sound0 (breaking) and Sound1 (found)",
          "For named items, create the item entity with exact name match",
          "Set object health to desired break threshold",
          "Test object destruction by reducing health",
          "Verify animation plays correctly",
          "Check content distribution and quantities",
          "Test AI noise generation",
          "Verify logic connections trigger correctly",
          "Check fade out and cleanup effects",
          "Test random item selection if enabled"
        ]
      },
      "relatedBehaviors": ["destructible_system", "loot_system", "health_system", "ammo_system", "item_system", "animation_controller", "logic_connector"]
    },
    "collect_object": {
      "name": "Collect Object",
      "file": "rpg/collect_object.lua",
      "description": "A simple collection system for objects that are set to 'Collectable'. Features automatic and manual pickup styles, configurable interaction ranges, logic connection triggers, and integration with GameGuru's built-in collection system.",
      "properties": [
        {
          "name": "PICKUP_TEXT",
          "type": "string",
          "default": "E to collect",
          "description": "Text displayed when player is in range to collect the object"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can collect the object"
        },
        {
          "name": "PICKUP_STYLE",
          "type": "dropdown",
          "default": "Manual",
          "options": ["Automatic", "Manual"],
          "description": "Collection style. Automatic = immediate pickup, Manual = requires E key press"
        },
        {
          "name": "COLLECTED_TEXT",
          "type": "string",
          "default": "Item collected",
          "description": "Text displayed when object is successfully collected"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the collectable object"
        }
      ],
      "features": [
        "Integration with GameGuru's built-in collection system",
        "Automatic and manual pickup styles",
        "Logic connection triggers on collection",
        "Sound effects for collection feedback",
        "Item highlighting and selection system",
        "Configurable interaction ranges and prompts",
        "Global collection state tracking",
        "Support for both collectable types (1 and 2)",
        "Memory efficient state management",
        "Entity visibility and collision checking",
        "Prompt display location options",
        "Collection state validation"
      ],
      "keywords": ["collect", "pickup", "item", "automatic", "manual", "interaction", "range", "highlight", "sound"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the collectable item",
          "Set AlwaysActive to ON for the object",
          "Set the object's Collectable property to 1 or 2",
          "Attach the collect_object behavior",
          "Configure PICKUP_TEXT for interaction message",
          "Set PICKUP_RANGE for interaction distance",
          "Choose PICKUP_STYLE (Automatic or Manual)",
          "Set COLLECTED_TEXT for success message",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Add sound effect to Sound0 slot",
          "Test automatic pickup if using automatic style",
          "Test manual pickup with E key if using manual style",
          "Verify collection state is set correctly",
          "Check logic connections trigger correctly",
          "Test with different collectable settings",
          "Verify prompt display and highlighting",
          "Check sound effects play correctly",
          "Test collection state validation"
        ]
      },
      "relatedBehaviors": ["pickup_system", "collection_system", "interaction_system", "logic_connector", "item_system"]
    },
    "collection_control": {
      "name": "Collection Control",
      "file": "puzzle/collection_control.lua",
      "description": "A mission control system that manages collection objectives with time limits. Features configurable collection targets, countdown timers, on-screen progress display, and multiple completion/failure actions for creating time-based collection missions and challenges.",
      "properties": [
        {
          "name": "OBJECTIVES",
          "type": "number",
          "range": "1-100",
          "default": 6,
          "description": "Number of items to collect to complete the mission"
        },
        {
          "name": "COLLECTION_TIME",
          "type": "number",
          "range": "10-500",
          "default": 60,
          "description": "Time limit in seconds (500 = unlimited time)"
        },
        {
          "name": "ON_COMPLETION",
          "type": "dropdown",
          "default": "Next Level",
          "options": ["Next Level", "Activate Logic Links", "Activate IfUsed", "Win Game"],
          "description": "Action to take when all objectives are collected"
        },
        {
          "name": "ON_FAILURE",
          "type": "dropdown",
          "default": "Lose Game",
          "options": ["Nothing", "Lose Game"],
          "description": "Action to take when time limit expires"
        },
        {
          "name": "DISPLAY_X",
          "type": "number",
          "range": "0-100",
          "default": 50,
          "description": "Horizontal position of the progress display (percentage of screen width)"
        },
        {
          "name": "DISPLAY_Y",
          "type": "number",
          "range": "0-100",
          "default": 10,
          "description": "Vertical position of the progress display (percentage of screen height)"
        },
        {
          "name": "DISPLAY_SIZE",
          "type": "number",
          "range": "1-5",
          "default": 3,
          "description": "Text size of the progress display"
        },
        {
          "name": "DISPLAY_MODE",
          "type": "dropdown",
          "default": "On",
          "options": ["On", "Off"],
          "description": "Whether to display the progress counter on screen"
        },
        {
          "name": "GoToLevelMode",
          "type": "dropdown",
          "default": "Use Storyboard Logic",
          "options": ["Use Storyboard Logic", "Go to Specific Level"],
          "description": "Controls whether to load the next level in the Storyboard or a specific level"
        }
      ],
      "features": [
        "Configurable collection objectives with progress tracking",
        "Time limit system with countdown display",
        "On-screen progress counter with customizable position and size",
        "Multiple completion actions (next level, logic links, win game)",
        "Failure handling with game over options",
        "Global collection state management",
        "Sound effects for mission completion",
        "Unlimited time option (500 seconds)",
        "Real-time progress display updates",
        "Timer-based mission control",
        "Storyboard and specific level support",
        "Memory efficient state tracking",
        "Mission objective integration"
      ],
      "keywords": ["collection", "mission", "timer", "objective", "progress", "display", "completion", "failure", "countdown", "challenge"],
      "tutorial": {
        "videoId": "OftivWxEcA8",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the collection controller",
          "Set AlwaysActive to ON for the object",
          "Attach the collection_control behavior",
          "Configure OBJECTIVES for number of items to collect",
          "Set COLLECTION_TIME for time limit (500 = unlimited)",
          "Choose ON_COMPLETION action for successful completion",
          "Set ON_FAILURE action for time limit failure",
          "Configure DISPLAY_X and DISPLAY_Y for progress position",
          "Set DISPLAY_SIZE for text size",
          "Choose DISPLAY_MODE for visibility",
          "Select GoToLevelMode for level progression",
          "Add sound effect to Sound0 slot for completion",
          "Create collectable objects with collection_count behavior",
          "Test collection progress tracking",
          "Verify on-screen display updates correctly",
          "Check countdown timer functionality",
          "Test completion actions when objectives met",
          "Verify failure actions when time expires",
          "Test unlimited time mode if using 500 seconds",
          "Check sound effects play correctly",
          "Verify logic connections trigger properly"
        ]
      },
      "relatedBehaviors": ["collection_count", "mission_system", "timer_system", "health_system", "global_variables", "reward_system", "logic_connector"]
    },
    "collection_count": {
      "name": "Collection Count",
      "file": "puzzle/collection_count.lua",
      "description": "A collection item system that increments mission counters and provides various bonuses/penalties. Features time bonuses/penalties, health restoration/damage, global variable modification, and integration with collection_control for creating complex mission objectives with rewards and consequences.",
      "properties": [
        {
          "name": "OBJECTIVES",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Legacy property - number of objectives (use collection_control instead)"
        },
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "0-100",
          "default": 100,
          "description": "Distance at which the item can be collected (minimum 50)"
        },
        {
          "name": "PROMPT_DURATION",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Duration in seconds to display progress prompt (legacy)"
        },
        {
          "name": "TIME_BONUS",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Time bonus in seconds to add to collection timer"
        },
        {
          "name": "TIME_PENALTY",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Time penalty in seconds to subtract from collection timer"
        },
        {
          "name": "HEALTH_BONUS",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Health bonus to restore to player"
        },
        {
          "name": "HEALTH_PENALTY",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Health penalty to damage player"
        },
        {
          "name": "GLOBAL_BONUS",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Value to add to the specified global variable"
        },
        {
          "name": "GLOBAL_PENALTY",
          "type": "number",
          "range": "0-100",
          "default": 0,
          "description": "Value to subtract from the specified global variable"
        },
        {
          "name": "USER_GLOBAL_AFFECTED",
          "type": "string",
          "default": "",
          "description": "Name of the global variable to modify (e.g., 'MyPoints')"
        }
      ],
      "features": [
        "Mission counter increment system",
        "Time bonus/penalty system for collection timers",
        "Health restoration/damage on collection",
        "Global variable modification with bonuses/penalties",
        "Integration with collection_control system",
        "Logic connection triggers on collection",
        "Sound effects for collection feedback",
        "Automatic object destruction after collection",
        "Progress display with prompt duration",
        "Legacy objective system support",
        "Memory efficient state tracking",
        "Global variable validation and management",
        "Health limit enforcement",
        "Collection range validation"
      ],
      "keywords": ["collection", "count", "bonus", "penalty", "time", "health", "global", "variable", "mission", "objective", "reward"],
      "tutorial": {
        "videoId": "OftivWxEcA8",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the collection item",
          "Set AlwaysActive to ON for the object",
          "Attach the collection_count behavior",
          "Configure PICKUP_RANGE for interaction distance",
          "Set TIME_BONUS for time rewards",
          "Configure TIME_PENALTY for time penalties",
          "Set HEALTH_BONUS for health restoration",
          "Configure HEALTH_PENALTY for health damage",
          "Set GLOBAL_BONUS for variable rewards",
          "Configure GLOBAL_PENALTY for variable penalties",
          "Set USER_GLOBAL_AFFECTED with global variable name",
          "Add sound effect to Sound0 slot",
          "Create collection_control object for mission management",
          "Test collection within pickup range",
          "Verify counter increments correctly",
          "Check time bonus/penalty effects",
          "Test health restoration/damage",
          "Verify global variable modifications",
          "Check logic connections trigger correctly",
          "Test sound effects play correctly",
          "Verify object destruction after collection"
        ]
      },
      "relatedBehaviors": ["collection_control", "mission_system", "timer_system", "health_system", "global_variables", "reward_system", "logic_connector"]
    },
    "examine": {
      "name": "Examine",
      "file": "rpg/examine.lua",
      "description": "An interactive examination system that allows players to closely inspect objects in 3D space. Features mouse and keyboard controls for rotation, zoom, and positioning, camera override, weapon switching, and detailed object manipulation for creating immersive inspection mechanics.",
      "properties": [
        {
          "name": "PICKUP_RANGE",
          "type": "number",
          "range": "0-100",
          "default": 100,
          "description": "Distance at which the player can examine the object"
        },
        {
          "name": "PICKUP_MESSAGE",
          "type": "string",
          "default": "E to Examine object",
          "description": "Text displayed when player is in range to examine"
        },
        {
          "name": "EXAMINE_MESSAGE",
          "type": "string",
          "default": "Hmmm...",
          "description": "Text displayed during examination mode"
        },
        {
          "name": "EXAMINE_SPEED",
          "type": "number",
          "range": "1-100",
          "default": 50,
          "description": "Speed of object rotation during examination"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the examinable object"
        }
      ],
      "features": [
        "Interactive 3D object examination system",
        "Mouse and keyboard controls for object manipulation",
        "Camera override for focused examination view",
        "Automatic weapon switching during examination",
        "Object positioning and rotation controls",
        "Mouse wheel zoom functionality",
        "Position and rotation memory for object restoration",
        "Collision and gravity management",
        "Item highlighting and selection system",
        "Configurable interaction ranges and prompts",
        "Real-time object manipulation feedback",
        "Memory efficient state tracking",
        "Object bounding box calculation",
        "Smooth rotation and movement controls"
      ],
      "keywords": ["examine", "inspect", "3d", "rotation", "zoom", "camera", "mouse", "keyboard", "manipulation", "interaction"],
      "tutorial": {
        "videoId": "FAx4F6caW8g",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the examinable item",
          "Set AlwaysActive to ON for the object",
          "Attach the examine behavior",
          "Configure PICKUP_RANGE for interaction distance",
          "Set PICKUP_MESSAGE for examination prompt",
          "Configure EXAMINE_MESSAGE for examination mode text",
          "Set EXAMINE_SPEED for rotation sensitivity",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Test examination activation with E key",
          "Verify camera override switches correctly",
          "Test WASD keys for object rotation",
          "Check mouse click and drag functionality",
          "Test mouse wheel for zoom controls",
          "Verify Q key exits examination mode",
          "Check object returns to original position",
          "Test weapon switching behavior",
          "Verify collision and gravity restoration",
          "Test different examine speeds",
          "Check prompt display and highlighting"
        ]
      },
      "relatedBehaviors": ["camera_control", "interaction_system", "weapon_system", "object_manipulation", "3d_viewer", "inspection_system"]
    },
    "investigate": {
      "name": "Investigate",
      "file": "rpg/investigate.lua",
      "description": "An investigation system that provides detailed information about objects through multiple presentation styles. Features text, sound, and image combinations, screen freeze options, customizable positioning, and automatic exit when player moves too far away.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "E to investigate",
          "description": "Text displayed when player is in range to investigate"
        },
        {
          "name": "USE_RANGE",
          "type": "number",
          "range": "1-100",
          "default": 80,
          "description": "Distance at which the player can investigate the object"
        },
        {
          "name": "INVESTIGATION_STYLE",
          "type": "dropdown",
          "default": "Text",
          "options": ["Text", "Text+Sound", "Image+Sound", "Text+Image+Sound"],
          "description": "Presentation style for investigation information"
        },
        {
          "name": "INVESTIGATION_TEXT",
          "type": "string",
          "default": "Evidence",
          "description": "Text to display during investigation"
        },
        {
          "name": "TEXT_POSITION_Y",
          "type": "number",
          "range": "1-100",
          "default": 90,
          "description": "Vertical position of text on screen (percentage)"
        },
        {
          "name": "FREEZE_SCREEN",
          "type": "dropdown",
          "default": "No",
          "options": ["Yes", "No"],
          "description": "Whether to freeze the screen during investigation"
        },
        {
          "name": "EXIT_TEXT",
          "type": "string",
          "default": "Q to exit",
          "description": "Text displayed during investigation to indicate exit key"
        },
        {
          "name": "IMAGEFILE",
          "type": "string",
          "default": "imagebank\\misc\\testimages\\investigate_01.png",
          "description": "Image file to display during investigation"
        },
        {
          "name": "PROMPT_DISPLAY",
          "type": "dropdown",
          "default": "Local",
          "options": ["Local", "Screen"],
          "description": "Where to display prompts. Local = near object, Screen = center screen"
        },
        {
          "name": "ITEM_HIGHLIGHT",
          "type": "dropdown",
          "default": "None",
          "options": ["None", "Shape", "Outline"],
          "description": "Visual highlighting style for the investigable object"
        },
        {
          "name": "IMAGE_SIZE",
          "type": "number",
          "range": "0-100",
          "default": 8,
          "description": "Size of the investigation image on screen"
        }
      ],
      "features": [
        "Multiple investigation presentation styles",
        "Text, sound, and image combinations",
        "Screen freeze option for focused investigation",
        "Automatic exit when player moves too far",
        "Customizable text positioning and image sizing",
        "Item highlighting and selection system",
        "Sound effects for investigation narration",
        "Image aspect ratio preservation",
        "Configurable interaction ranges and prompts",
        "Memory efficient state tracking",
        "Camera override integration",
        "Sprite management for images",
        "Distance-based auto-exit system"
      ],
      "keywords": ["investigate", "evidence", "information", "text", "sound", "image", "narration", "presentation", "interaction"],
      "tutorial": {
        "videoId": "AlqWOfRQsYo",
        "timestamp": "0:00",
        "steps": [
          "Create an object to represent the investigable item",
          "Set AlwaysActive to ON for the object",
          "Attach the investigate behavior",
          "Configure PROMPT_TEXT for interaction message",
          "Set USE_RANGE for interaction distance",
          "Choose INVESTIGATION_STYLE for presentation type",
          "Set INVESTIGATION_TEXT for information display",
          "Configure TEXT_POSITION_Y for text placement",
          "Choose FREEZE_SCREEN setting for camera control",
          "Set EXIT_TEXT for exit instructions",
          "Configure IMAGEFILE if using image styles",
          "Choose PROMPT_DISPLAY location preference",
          "Set ITEM_HIGHLIGHT style if desired",
          "Configure IMAGE_SIZE for image display",
          "Add sound effect to Sound0 slot if using sound",
          "Test investigation activation with E key",
          "Verify presentation style displays correctly",
          "Check text positioning and image sizing",
          "Test screen freeze functionality if enabled",
          "Verify Q key exits investigation mode",
          "Test auto-exit when moving too far away",
          "Check sound effects play correctly"
        ]
      },
      "relatedBehaviors": ["examine", "evidence_system", "narration_system", "presentation_system", "interaction_system", "camera_control"]
    }
  }
} 