{
  "category": "People",
  "description": "Behaviors for controlling and managing human characters and NPCs",
  "behaviors": {
    "corpse": {
      "name": "Corpse",
      "file": "people/corpse.lua",
      "description": "Converts a character into a static corpse by setting their health to zero and removing active behaviors. Perfect for creating death scenes, crime scenes, or horror environments.",
      "properties": [
        {
          "name": "No editable properties",
          "type": "info",
          "description": "This behavior is fully self-contained with no configurable properties."
        }
      ],
      "features": [
        "Instant character death",
        "Removes active behaviors",
        "Zero health state",
        "Memory efficient",
        "No animation requirements",
        "Compatible with all character models"
      ],
      "keywords": ["corpse", "dead", "body", "death", "static", "npc", "character", "horror"],
      "tutorial": {
        "videoId": "tYCQhSxnvE0",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["rise_and_fall", "crawler", "phantom"]
    },
    "npc_control": {
      "name": "NPC Control",
      "file": "people/npc_control.lua",
      "description": "A comprehensive NPC behavior system that provides full control over character actions, animations, and AI responses. Features include combat, roaming, fleeing, shooting, and complex state management.",
      "properties": [
        {
          "name": "SENSE_TEXT",
          "type": "string",
          "default": "Who's that ..an intruder??",
          "description": "Text displayed when NPC detects player"
        },
        {
          "name": "SENSE_RANGE",
          "type": "number",
          "default": 500,
          "min": 0,
          "max": 2000,
          "description": "Distance at which NPC can detect player"
        },
        {
          "name": "NPC_CAN_FLEE",
          "type": "dropdown",
          "default": "No",
          "options": ["Yes", "No"],
          "description": "Whether NPC can run away when threatened"
        },
        {
          "name": "IDLE_TIME",
          "type": "number",
          "default": 3000,
          "min": 0,
          "max": 20000,
          "description": "Time in milliseconds NPC stays idle"
        },
        {
          "name": "ATTACK_RANGE",
          "type": "number",
          "default": 100,
          "min": 0,
          "max": 1000,
          "description": "Distance at which NPC can attack"
        },
        {
          "name": "ATTACK_DAMAGE",
          "type": "number",
          "default": 10,
          "min": 0,
          "max": 100,
          "description": "Damage dealt by NPC attacks"
        },
        {
          "name": "RANDOM_DAMAGE",
          "type": "dropdown",
          "default": "No",
          "options": ["Yes", "No"],
          "description": "Whether damage is randomized"
        },
        {
          "name": "NPC_CAN_ROAM",
          "type": "dropdown",
          "default": "Yes",
          "options": ["Yes", "No"],
          "description": "Whether NPC can wander around"
        },
        {
          "name": "ROAM_RANGE",
          "type": "number",
          "default": 500,
          "min": 0,
          "max": 3000,
          "description": "Distance NPC can wander from start position"
        },
        {
          "name": "NPC_ANIM_SPEED",
          "type": "number",
          "default": 0.8,
          "min": 0.1,
          "max": 5.0,
          "description": "Animation playback speed multiplier"
        },
        {
          "name": "NPC_MOVE_SPEED",
          "type": "number",
          "default": 100,
          "min": 0,
          "max": 1000,
          "description": "Walking movement speed"
        },
        {
          "name": "NPC_RUN_SPEED",
          "type": "number",
          "default": 110,
          "min": 0,
          "max": 1000,
          "description": "Running movement speed"
        },
        {
          "name": "NPC_TURN_SPEED",
          "type": "number",
          "default": 100,
          "min": 0,
          "max": 1000,
          "description": "Rotation speed"
        },
        {
          "name": "NPC_CAN_SHOOT",
          "type": "dropdown",
          "default": "No",
          "options": ["Yes", "No", "Yes-Weapon Hidden"],
          "description": "Whether NPC can use ranged attacks"
        },
        {
          "name": "IDLE1_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "First idle animation"
        },
        {
          "name": "IDLE2_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Second idle animation"
        },
        {
          "name": "WALK_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Walking animation"
        },
        {
          "name": "RUN_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Running animation"
        },
        {
          "name": "THREAT_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Threat display animation"
        },
        {
          "name": "ATTACK1_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "First attack animation"
        },
        {
          "name": "ATTACK1_HITFRAME",
          "type": "number",
          "default": 10,
          "description": "Frame at which first attack deals damage"
        },
        {
          "name": "ATTACK2_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Second attack animation"
        },
        {
          "name": "ATTACK2_HITFRAME",
          "type": "number",
          "default": 10,
          "description": "Frame at which second attack deals damage"
        },
        {
          "name": "ATTACK3_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Third attack animation"
        },
        {
          "name": "ATTACK3_HITFRAME",
          "type": "number",
          "default": 10,
          "description": "Frame at which third attack deals damage"
        },
        {
          "name": "SHOOT_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Shooting animation"
        },
        {
          "name": "HURT_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Hurt reaction animation"
        },
        {
          "name": "DEATH1_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "First death animation"
        },
        {
          "name": "DEATH2_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Second death animation"
        },
        {
          "name": "LASTFLAG_ANIMATION",
          "type": "dropdown",
          "default": "Default",
          "options": ["AnimSetList", "Default"],
          "description": "Final animation before death"
        },
        {
          "name": "LASTFLAG_TIME",
          "type": "number",
          "default": 3000,
          "min": 0,
          "max": 20000,
          "description": "Duration of final animation in milliseconds"
        },
        {
          "name": "LASTFLAG_LOOP",
          "type": "dropdown",
          "default": "Off",
          "options": ["On", "Off"],
          "description": "Whether final animation loops"
        },
        {
          "name": "FORCE_MOVE",
          "type": "dropdown",
          "default": "Off",
          "options": ["On", "Off"],
          "description": "Whether NPC is forced to move"
        },
        {
          "name": "NPC_TILTING",
          "type": "dropdown",
          "default": "On",
          "options": ["On", "Off"],
          "description": "Whether NPC tilts when turning"
        },
        {
          "name": "DIAGNOSTICS",
          "type": "boolean",
          "default": false,
          "description": "Enable diagnostic information display"
        }
      ],
      "features": [
        "Full animation control system",
        "Configurable AI behaviors",
        "Combat and shooting mechanics",
        "Roaming and patrolling",
        "Player detection and response",
        "Sound effect integration",
        "Health and damage system",
        "Movement and speed control",
        "State-based behavior management",
        "Diagnostic options"
      ],
      "keywords": ["npc", "ai", "control", "combat", "animation", "behavior", "character", "enemy"],
      "tutorial": {
        "videoId": "-25ucuGusa0",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["hot_key", "hudcontrol", "interface"]
    },
    "npc_incover": {
      "name": "NPC In Cover",
      "file": "people/npc_incover.lua",
      "description": "Allows an NPC to take cover and engage in tactical combat, popping in and out of cover to fire at the player. Features customizable cover positions, timing, and animations.",
      "properties": [
        {
          "name": "COVER_STYLE",
          "type": "dropdown",
          "default": "Up/Down",
          "options": [
            "Up/Down",
            "Left",
            "Right"
          ],
          "description": "Type of cover movement the NPC will use"
        },
        {
          "name": "ALERT_DISTANCE",
          "type": "number",
          "range": "1-5000",
          "default": 2000,
          "description": "Distance at which the NPC will detect and engage the player"
        },
        {
          "name": "EXPOSURE_TIME",
          "type": "number",
          "range": "100-5000",
          "default": 1500,
          "description": "How long the NPC stays exposed while firing (in milliseconds)"
        },
        {
          "name": "COVER_TIME",
          "type": "number",
          "range": "100-5000",
          "default": 1200,
          "description": "How long the NPC stays in cover (in milliseconds)"
        },
        {
          "name": "STAND_ANIMATION",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "AnimSetList"
          ],
          "description": "Animation to play when standing and firing"
        },
        {
          "name": "DUCK_ANIMATION",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "AnimSetList"
          ],
          "description": "Animation to play when ducking in cover"
        },
        {
          "name": "LEFT_ANIMATION",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "AnimSetList"
          ],
          "description": "Animation to play when peeking from left cover"
        },
        {
          "name": "RIGHT_ANIMATION",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "AnimSetList"
          ],
          "description": "Animation to play when peeking from right cover"
        },
        {
          "name": "SHOOT_ANIMATION",
          "type": "dropdown",
          "default": "None",
          "options": [
            "None",
            "AnimSetList"
          ],
          "description": "Animation to play when shooting"
        },
        {
          "name": "DEATH_TRIGGER",
          "type": "boolean",
          "default": false,
          "description": "Whether to trigger logic connections when the NPC dies"
        }
      ],
      "features": [
        "Tactical cover system",
        "Customizable cover positions",
        "Timed exposure and cover periods",
        "Weapon integration",
        "Animation system",
        "Player detection",
        "Death triggers",
        "Ammo management"
      ],
      "keywords": ["npc", "combat", "cover", "tactical", "shooting", "animation", "weapon", "ai"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["npc_controller", "weapon_system", "animation_controller"]
    },
    "quest_giver": {
      "name": "Quest Giver",
      "file": "people/quest_giver.lua",
      "description": "Creates an interactive NPC that can give quests to the player. When the player is within range, they can interact to view and accept quests from a quest list.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "1-500",
          "default": 100,
          "description": "Distance at which the player can interact with the quest giver"
        },
        {
          "name": "QUEST_PROMPT",
          "type": "string",
          "default": "Press E to Interact",
          "description": "Text shown when player is in range"
        },
        {
          "name": "QUEST_SCREEN",
          "type": "string",
          "default": "HUD Screen 8",
          "description": "Screen to show when quest is accepted"
        },
        {
          "name": "QuestChoice",
          "type": "dropdown",
          "default": "QuestList",
          "options": [
            "QuestList"
          ],
          "description": "Quest to assign from the quest list"
        },
        {
          "name": "SPEECH1",
          "type": "string",
          "default": "",
          "description": "Speech to play when quest is given"
        }
      ],
      "features": [
        "Quest list integration",
        "Customizable interaction range",
        "Quest screen display",
        "Speech playback",
        "NPC interaction system"
      ],
      "keywords": ["quest", "npc", "interaction", "mission", "objective"],
      "tutorial": {
        "videoId": "E2qor07gR6k",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["npc_interaction", "quest_system"]
    },
    "sniper": {
      "name": "Sniper",
      "file": "people/sniper.lua",
      "description": "Creates a sniper character that will attack the player when within range. Features customizable attack range, delay, damage, and hit chance, along with animation support for different states.",
      "properties": [
        {
          "name": "SNIPER_RANGE",
          "type": "number",
          "range": "0-10000",
          "default": 2000,
          "description": "Maximum range at which the sniper can attack"
        },
        {
          "name": "SNIPER_DELAY",
          "type": "number",
          "range": "0-60",
          "default": 4,
          "description": "Seconds between shots"
        },
        {
          "name": "HIT_DAMAGE",
          "type": "number",
          "range": "1-100",
          "default": 3,
          "description": "Damage dealt to player on hit"
        },
        {
          "name": "HIT_CHANCE",
          "type": "number",
          "range": "0-100",
          "default": 60,
          "description": "Percentage chance to hit the player"
        },
        {
          "name": "IDLE_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": [
            "AnimSetList"
          ],
          "description": "Animation to play while idle"
        },
        {
          "name": "AIM_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": [
            "AnimSetList"
          ],
          "description": "Animation to play while aiming"
        },
        {
          "name": "SHOOT_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": [
            "AnimSetList"
          ],
          "description": "Animation to play while shooting"
        },
        {
          "name": "FLINCH_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": [
            "AnimSetList"
          ],
          "description": "Animation to play when hit"
        }
      ],
      "features": [
        "Long-range combat",
        "Customizable attack parameters",
        "Animation state system",
        "Sound effect integration",
        "Player visibility detection",
        "Weapon integration",
        "Health management",
        "Death handling"
      ],
      "keywords": ["sniper", "combat", "enemy", "ranged", "attack", "weapon", "animation"],
      "tutorial": {
        "videoId": "OTuGRK2XCCU",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["weapon_system", "combat_system", "animation_system"]
    },
    "trader": {
      "name": "Trader",
      "file": "people/trader.lua",
      "description": "Creates an interactive merchant NPC that allows players to buy and sell items through a customizable shop interface. Perfect for creating vendors, merchants, and economic gameplay elements.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "default": 100,
          "description": "Distance at which player can interact with trader"
        },
        {
          "name": "TRADE_PROMPT",
          "type": "string",
          "default": "Press E to trade",
          "description": "Text shown when player is in range"
        },
        {
          "name": "TRADE_SCREEN",
          "type": "string",
          "default": "HUD Screen 5",
          "description": "HUD screen to display shop interface"
        },
        {
          "name": "SHOP_CONTAINER",
          "type": "string",
          "default": "",
          "description": "Container entity that holds shop inventory"
        },
        {
          "name": "SPEECH1",
          "type": "string",
          "default": "",
          "description": "Voice line played when trading begins"
        },
        {
          "name": "TRADE_SHOPNAME",
          "type": "string",
          "default": "The Shop",
          "description": "Name displayed in shop interface"
        }
      ],
      "features": [
        "Interactive trading system",
        "Customizable shop inventory",
        "Buy and sell functionality",
        "Shop name customization",
        "Voice line integration",
        "HUD interface support",
        "Container-based inventory",
        "Proximity detection",
        "Simple interaction model",
        "Memory efficient"
      ],
      "keywords": ["trader", "shop", "merchant", "vendor", "economy", "buy", "sell", "trade", "store"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["quest_giver", "hudcontrol", "interface"]
    },
    "no_kill": {
      "name": "No Kill",
      "file": "objects/no_kill.lua",
      "description": "Global behavior that kills the player if they kill an NPC of the designated type. Attach to an object and set AlwaysActive=ON to monitor and enforce NPC protection.",
      "properties": [
        {
          "name": "NPC_TYPE",
          "type": "dropdown",
          "default": "Ally",
          "options": ["Enemy", "Ally", "Neutral", "Ally+Neutral"],
          "description": "Type of NPC that should not be killed"
        }
      ],
      "features": [
        "Player death on protected NPC kill",
        "Multiple NPC type protection",
        "Global monitoring system",
        "Real-time health checking",
        "Automatic list management",
        "Configurable protection rules"
      ],
      "keywords": ["protection", "kill", "death", "npc", "ally", "enemy", "neutral"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["npc_control", "npc_incover"]
    },
    "npc_alerter": {
      "name": "NPC Alerter",
      "file": "objects/npc_alerter.lua",
      "description": "A global behavior that allows a named NPC to alert other NPCs and can trigger events, lose game, or win game upon death. Attach to an object and set AlwaysActive=ON. Attach any logic links to this object and/or use ActivateIfUsed field.",
      "properties": [
        {
          "name": "NPC_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the NPC that will be the alerter"
        },
        {
          "name": "ALERT_ACTION",
          "type": "dropdown",
          "default": "Call Alert",
          "options": ["Call Alert", "Event Trigger", "Call Alert+EventTrigger", "Lose Game", "Win Game", "None"],
          "description": "Action to take when NPC sees the player"
        },
        {
          "name": "ALERT_RANGE",
          "type": "number",
          "default": 3000,
          "min": 1,
          "max": 5000,
          "description": "Range at which the alert can be heard by other NPCs"
        },
        {
          "name": "DEATH_ACTION",
          "type": "dropdown",
          "default": "None",
          "options": ["Event Trigger", "Lose Game", "Win Game", "None"],
          "description": "Action to take when the alerter NPC dies"
        },
        {
          "name": "ALERTER_ACTIVE",
          "type": "boolean",
          "default": true,
          "description": "Whether the alerter is active by default (if unchecked, use a switch or other trigger to activate/deactivate)"
        }
      ],
      "features": [
        "Named NPC monitoring",
        "Multiple alert actions",
        "Configurable alert range",
        "Death event triggers",
        "Game state control",
        "Logic connection support",
        "Sound effect integration",
        "Activation control"
      ],
      "keywords": ["alerter", "npc", "alert", "trigger", "event", "death", "game state"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["npc_control", "npc_incover"]
    },
    "npc_event": {
      "name": "NPC Event",
      "file": "objects/npc_event.lua",
      "description": "Triggers npc animation event then removes or ragdolls npc after set duration. Attach to a character. Trigger by linked switch or zone or range. Zone is destroyed after event.",
      "properties": [
        {
          "name": "EVENT_DURATION",
          "type": "number",
          "default": "10",
          "min": 1,
          "max": 100,
          "description": "Duration of the event in seconds"
        },
        {
          "name": "IDLE_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList", "Default"],
          "description": "Animation to play while idle"
        },
        {
          "name": "EVENT_ANIMATION",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList", "Default"],
          "description": "Animation to play during event"
        },
        {
          "name": "END_TRIGGER",
          "type": "dropdown",
          "default": "Off",
          "options": ["On", "Off"],
          "description": "Whether to trigger connections when event ends"
        },
        {
          "name": "FADE_SPEED",
          "type": "number",
          "default": "0.5",
          "min": 0.01,
          "max": 10.00,
          "description": "Speed of fade out effect"
        },
        {
          "name": "EVENT_TRIGGER",
          "type": "dropdown",
          "default": "Zone/Switch",
          "options": ["Zone/Switch", "Range"],
          "description": "How to trigger the event"
        },
        {
          "name": "RANGE",
          "type": "number",
          "default": "500",
          "min": 0,
          "max": 3000,
          "description": "Range to trigger event if using range trigger"
        },
        {
          "name": "RAGDOLL",
          "type": "dropdown",
          "default": "No",
          "options": ["Yes", "No"],
          "description": "Whether to ragdoll the NPC after event"
        }
      ],
      "features": [
        "Animation event system",
        "Configurable event duration",
        "Idle and event animations",
        "Fade out effect",
        "Multiple trigger methods",
        "Optional ragdoll effect",
        "Sound support"
      ],
      "keywords": [
        "npc",
        "event",
        "animation",
        "trigger",
        "fade",
        "ragdoll"
      ],
      "tutorial": {
        "videoId": "tYCQhSxnvE0",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["npc_control", "npc_alerter", "corpse"]
    },
    "npc_flashlight": {
      "name": "NPC Flashlight",
      "file": "objects/npc_flashlight.lua",
      "description": "Attaches a flashlight to an NPC that follows their movement and can be positioned on different parts of their body. The light will flicker when the NPC is damaged and turn off when they die.",
      "properties": [
        {
          "name": "FLASHLIGHT_RANGE",
          "type": "number",
          "range": "1-10000",
          "default": 3000,
          "description": "Range of the flashlight beam in units"
        },
        {
          "name": "NPC_OBJECT_NAME",
          "type": "string",
          "default": "Tony1",
          "description": "Name of the NPC entity to attach the flashlight to"
        },
        {
          "name": "FLASHLIGHT_POSITION",
          "type": "dropdown",
          "default": "Hand",
          "options": [
            "Hand",
            "Shoulder",
            "Head"
          ],
          "description": "Position on the NPC where the flashlight will be attached"
        }
      ],
      "features": [
        "Dynamic light attachment to NPCs",
        "Multiple attachment positions",
        "Damage-based flickering",
        "Automatic shutdown on NPC death",
        "Realistic light positioning",
        "Smooth light movement"
      ],
      "keywords": ["npc", "light", "flashlight", "spotlight", "character", "illumination", "dynamic"],
      "tutorial": {
        "videoId": "Ukn1K1AfAFg",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["module_lightcontrol", "npc_controller"]
    },
    "npc_monitor": {
      "name": "NPC Monitor",
      "file": "objects/npc_monitor.lua",
      "description": "A global behavior that monitors an NPC's health and triggers events, game state changes, or level transitions upon their death. Can be used to create mission objectives, boss battles, or story progression triggers.",
      "properties": [
        {
          "name": "NPC_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the NPC to monitor"
        },
        {
          "name": "DEATH_ACTION",
          "type": "dropdown",
          "default": "Event Triggers",
          "options": [
            "Event Triggers",
            "Lose Game",
            "Win Game",
            "Go To Level"
          ],
          "description": "Action to take when the monitored NPC dies"
        },
        {
          "name": "DISPLAY_HEALTH",
          "type": "dropdown",
          "default": "No",
          "options": [
            "Yes",
            "No"
          ],
          "description": "Whether to display the NPC's health"
        },
        {
          "name": "MONITOR_ACTIVE",
          "type": "dropdown",
          "default": "Yes",
          "options": [
            "Yes",
            "No"
          ],
          "description": "Whether the monitor is active by default (No requires activation via zone or switch)"
        },
        {
          "name": "ACTION_DELAY",
          "type": "number",
          "range": "0-100",
          "default": 2,
          "description": "Delay in seconds before activating the death action"
        },
        {
          "name": "USER_GLOBAL",
          "type": "string",
          "default": "",
          "description": "Name of a global variable to set when the NPC dies"
        },
        {
          "name": "USER_GLOBAL_VALUE",
          "type": "number",
          "range": "1-100",
          "default": 100,
          "description": "Value to set in the global variable"
        },
        {
          "name": "GoToLevelMode",
          "type": "dropdown",
          "default": "Use Storyboard Logic",
          "options": [
            "Use Storyboard Logic",
            "Go to Specific Level"
          ],
          "description": "Controls whether to load the next level in the Storyboard or a specific level"
        },
        {
          "name": "ResetStates",
          "type": "boolean",
          "default": false,
          "description": "Whether to reset states when entering the new level"
        }
      ],
      "features": [
        "NPC health monitoring",
        "Multiple death actions",
        "Configurable delays",
        "Global variable support",
        "Level transition control",
        "Health display option",
        "External activation support",
        "Logic connection triggers"
      ],
      "keywords": ["npc", "monitor", "health", "death", "trigger", "game state", "level", "mission"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["npc_controller", "level_controller", "game_state"]
    },
    "player_mode": {
      "name": "Player Mode",
      "file": "objects/player_mode.lua",
      "description": "Controls various player capabilities and restrictions. Can be used to create different gameplay modes, stealth sections, or puzzle areas by enabling/disabling specific player actions.",
      "properties": [
        {
          "name": "PROMPT_TEXT",
          "type": "string",
          "default": "Player modes activated",
          "description": "Message displayed when player modes are changed"
        },
        {
          "name": "RUNNING",
          "type": "boolean",
          "default": true,
          "description": "Whether the player can run"
        },
        {
          "name": "JUMPING",
          "type": "boolean",
          "default": true,
          "description": "Whether the player can jump"
        },
        {
          "name": "FLASHLIGHT",
          "type": "boolean",
          "default": true,
          "description": "Whether the player can use the flashlight"
        },
        {
          "name": "WEAPONS",
          "type": "boolean",
          "default": true,
          "description": "Whether the player can use weapons"
        }
      ],
      "features": [
        "Player capability control",
        "Running toggle",
        "Jumping toggle",
        "Flashlight toggle",
        "Weapon toggle",
        "Custom prompt messages",
        "Switch/zone activation",
        "Immediate effect application"
      ],
      "keywords": ["player", "control", "mode", "restriction", "capability", "gameplay", "stealth", "puzzle"],
      "tutorial": {
        "videoId": "n3lSoY8PjKU",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["player_controller", "zone_trigger", "switch_controller"]
    },
    "player_peek": {
      "name": "Player Peek",
      "file": "objects/player_peek.lua",
      "description": "Adds tactical peeking functionality to the player, allowing them to lean around corners and peek over cover. Features customizable peek angles, speeds, and control schemes.",
      "properties": [
        {
          "name": "PROMPT",
          "type": "string",
          "default": "A=Peek Left, D=Peek Right, W=PeekOver -if crouched",
          "description": "Instructions shown to the player for peeking controls"
        },
        {
          "name": "PEEK_SIDE_AMOUNT",
          "type": "number",
          "range": "0-45",
          "default": 30,
          "description": "Maximum angle for side peeking in degrees"
        },
        {
          "name": "PEEK_UP_AMOUNT",
          "type": "number",
          "range": "0-90",
          "default": 10,
          "description": "Maximum angle for peeking up in degrees"
        },
        {
          "name": "PEEK_SPEED",
          "type": "number",
          "range": "0.1-20.0",
          "default": 10.0,
          "description": "Speed of peek movement"
        },
        {
          "name": "PEEK_STYLE",
          "type": "dropdown",
          "default": "Toggle with key",
          "options": [
            "Toggle with key",
            "Hold MMB"
          ],
          "description": "Control method for peeking"
        },
        {
          "name": "PEEK_TOGGLE_KEY",
          "type": "string",
          "default": "Q",
          "description": "Key used to toggle peeking mode (when using toggle style)"
        },
        {
          "name": "AUTO_CROUCH",
          "type": "boolean",
          "default": false,
          "description": "Whether to automatically crouch while peeking"
        },
        {
          "name": "HIDE_WEAPON",
          "type": "boolean",
          "default": false,
          "description": "Whether to hide the weapon while peeking"
        }
      ],
      "features": [
        "Side peeking (left/right)",
        "Up peeking (when crouched)",
        "Customizable peek angles",
        "Adjustable peek speed",
        "Multiple control schemes",
        "Weapon visibility control",
        "Auto-crouch option",
        "Smooth peek transitions"
      ],
      "keywords": ["player", "peek", "lean", "cover", "tactical", "stealth", "camera", "control"],
      "tutorial": {
        "videoId": "2oC3_I9i-sk",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["player_controller", "camera_control", "weapon_system"]
    },
    "respawn_inplace": {
      "name": "Respawn In-Place",
      "file": "objects/respawn_inplace.lua",
      "description": "Creates an in-place respawn marker when a player death occurs. The marker will be placed at the player's last position and can be used as a respawn point.",
      "properties": [
        {
          "name": "SPAWN_MARKER_USER_GLOBAL",
          "type": "string",
          "default": "MySpawnMarkers",
          "description": "User global variable required for using spawn markers"
        },
        {
          "name": "SPAWN_MARKER_NAME",
          "type": "string",
          "default": "Player Respawn",
          "description": "Name of spawn marker to dynamically respawn to"
        }
      ],
      "features": [
        "Automatic respawn marker creation",
        "Player death detection",
        "Position and rotation preservation",
        "Spawn marker management",
        "Global variable integration"
      ],
      "keywords": ["respawn", "spawn", "death", "player", "marker", "checkpoint"],
      "tutorial": {
        "videoId": "llQSChQbhaA",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["player_controller", "spawn_system"]
    },
    "sense_npc": {
      "name": "Sense NPC",
      "file": "objects/sense_npc.lua",
      "description": "Allows an object to detect when a specific NPC is within range and trigger various actions like logic connections, game state changes, or level transitions. Perfect for creating proximity-based triggers and events.",
      "properties": [
        {
          "name": "SENSE_RANGE",
          "type": "number",
          "range": "0-1000",
          "default": 250,
          "description": "Distance at which the NPC will be detected"
        },
        {
          "name": "NPC_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the NPC to monitor"
        },
        {
          "name": "IF_SENSED",
          "type": "dropdown",
          "default": "Activate Links",
          "options": [
            "Activate Links",
            "Lose Game",
            "Win Game"
          ],
          "description": "Action to take when the NPC is detected in range"
        }
      ],
      "features": [
        "NPC proximity detection",
        "Configurable detection range",
        "Multiple trigger actions",
        "Logic connection support",
        "Game state control",
        "Flat distance calculation",
        "One-time trigger system"
      ],
      "keywords": ["npc", "detection", "proximity", "trigger", "sensor", "range", "game state"],
      "tutorial": {
        "videoId": "coming-soon",
        "timestamp": "0:00"
      },
      "relatedBehaviors": ["npc_controller", "game_state", "logic_connector"]
    },
    "npc_itemdrop": {
      "name": "NPC Item Drop",
      "file": "rpg/npc_itemdrop.lua",
      "description": "Creates a system where NPCs can carry items and drop them when they die. Features named NPC and item linking, automatic item positioning, and death-triggered item drops. Perfect for loot systems, enemy drops, and item distribution mechanics.",
      "properties": [
        {
          "name": "NPC_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the NPC that will carry the item (must match entity name exactly)"
        },
        {
          "name": "ITEM_NAME",
          "type": "string",
          "default": "",
          "description": "Name of the item that will be carried and dropped (must match entity name exactly)"
        }
      ],
      "features": [
        "Named NPC and item linking system",
        "Automatic item carrying by NPCs",
        "Death-triggered item drops",
        "Item positioning relative to NPC location",
        "Automatic item hiding while carried",
        "Physics and collision management",
        "Gravity control for dropped items",
        "Entity name matching system",
        "Automatic entity discovery",
        "Item positioning offset controls",
        "Death detection and response",
        "Item visibility management",
        "Collision state management",
        "Gravity state management",
        "Entity health monitoring"
      ],
      "keywords": ["npc", "item", "drop", "loot", "carry", "death", "enemy", "inventory", "positioning", "physics"],
      "tutorial": {
        "videoId": "3AD8db7fu_o",
        "timestamp": "0:00",
        "steps": [
          "Create an NPC entity with a specific name",
          "Create an item entity with a specific name",
          "Set item AlwaysActive to ON",
          "Set item Physics to ON",
          "Set item Gravity to ON",
          "Attach the npc_itemdrop behavior to the item",
          "Configure NPC_NAME to match the NPC entity name",
          "Configure ITEM_NAME to match the item entity name",
          "Test NPC carrying the item",
          "Kill the NPC to test item drop",
          "Verify item positioning and physics",
          "Check item visibility and collision states"
        ]
      },
      "relatedBehaviors": ["npc_system", "item_system", "loot_system", "death_system", "physics_system"]
    },
    "character_attack": {
      "name": "Character Attack",
      "file": "people/character_attack.lua",
      "description": "A sophisticated AI combat system that controls characters using soldier animations to engage enemies within view. Features path following, retreat mechanics, flanking tactics, sound detection, and advanced combat behaviors. Perfect for creating intelligent NPCs, enemy AI, and combat characters in games.",
      "properties": [
        {
          "name": "FollowAPath",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character follows a path at the start"
        },
        {
          "name": "CanRetreat",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character can retreat when hurt"
        },
        {
          "name": "RetreatRange",
          "type": "number",
          "range": "200-1000",
          "default": 500,
          "description": "Distance the character retreats when hurt"
        },
        {
          "name": "StandGround",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether the character defends their position instead of moving"
        },
        {
          "name": "RandomFlankMode",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character uses random flanking behavior"
        },
        {
          "name": "FlankTarget",
          "type": "dropdown",
          "default": "Stay Back",
          "options": ["Stay Back", "Get Close", "Wide Flank", "Use Cover"],
          "description": "Flanking strategy when not using random mode"
        },
        {
          "name": "Alerted",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether the character starts in an alerted state"
        },
        {
          "name": "AllowHeadshot",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character can perform headshots"
        },
        {
          "name": "CombatTime",
          "type": "number",
          "range": "1000-30000",
          "default": 15000,
          "description": "Time in milliseconds for combat engagement"
        },
        {
          "name": "CanHearSound",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character can hear and respond to sounds"
        },
        {
          "name": "HearingRange",
          "type": "number",
          "range": "100-2000",
          "default": 1250,
          "description": "Range at which the character can hear sounds"
        },
        {
          "name": "StarterAnimation",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether to play a starter animation"
        },
        {
          "name": "StartAnimation",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to play at start (when StarterAnimation is enabled)"
        }
      ],
      "features": [
        "Advanced AI combat system",
        "Soldier animation integration",
        "Path following mechanics",
        "Retreat and defensive behaviors",
        "Flanking tactics and strategies",
        "Sound detection and response",
        "Combat time management",
        "Headshot capability",
        "Alert state management",
        "Cover utilization",
        "Enemy engagement system",
        "Tactical positioning",
        "Rapid damage processing",
        "Master interpreter integration",
        "Multiple sound effect integration",
        "Combat behavior state machine"
      ],
      "keywords": ["character", "attack", "ai", "combat", "soldier", "animation", "retreat", "flank", "sound", "detection", "tactical", "enemy", "engagement"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the character_attack behavior",
          "Configure path following and retreat settings",
          "Set up flanking behavior and strategies",
          "Configure sound detection and hearing range",
          "Set combat time and headshot settings",
          "Configure alert state and starter animation",
          "Add sound effects (Sound0=alerted, Sound1=seen target, Sound2=lost target, Sound3=killed target)",
          "Set up soldier animations for the character",
          "Configure shooting weapon for the character",
          "Test AI combat behavior",
          "Verify enemy engagement and tactical responses",
          "Check sound detection and flanking mechanics"
        ]
      },
      "relatedBehaviors": ["ai_system", "combat_system", "animation_system", "sound_system", "path_system", "tactical_system"]
    },
    "run_away_if_hurt": {
      "name": "Run Away If Hurt",
      "file": "people/run_away_if_hurt.lua",
      "description": "A defensive behavior system that makes characters run away when they are hurt and stop at a specified distance. Features automatic flee mechanics, configurable stop distance, and sound effect integration. Perfect for creating cowardly NPCs, defensive characters, and survival-oriented AI in games.",
      "properties": [
        {
          "name": "STOPDISTANCE",
          "type": "number",
          "range": "100-2000",
          "default": 800,
          "description": "Distance the character runs away before stopping"
        }
      ],
      "features": [
        "Automatic flee behavior when hurt",
        "Configurable stop distance",
        "Sound effect integration",
        "Master interpreter integration",
        "Defensive AI system",
        "Survival-oriented behavior",
        "Automatic movement control",
        "Distance-based stopping",
        "Hurt response system",
        "Character safety mechanics"
      ],
      "keywords": ["run", "away", "hurt", "flee", "defensive", "survival", "distance", "stop", "ai", "character", "safety"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the run_away_if_hurt behavior",
          "Configure stop distance for fleeing",
          "Add hurt sound to Sound0",
          "Test character damage response",
          "Verify flee behavior when hurt",
          "Check stopping at specified distance",
          "Test sound effect integration"
        ]
      },
      "relatedBehaviors": ["ai_system", "defensive_system", "survival_system", "sound_system", "movement_system", "character_system"]
    },
    "zombie_attack": {
      "name": "Zombie Attack",
      "file": "people/zombie_attack.lua",
      "description": "A specialized zombie AI system that controls attacking zombies with unique movement patterns and behaviors. Features zombie animations, melee weapon integration, multiple chase modes, feeding states, and realistic zombie characteristics. Perfect for creating horror game enemies, zombie hordes, and undead AI in games.",
      "properties": [
        {
          "name": "range",
          "type": "number",
          "range": "100-500",
          "default": 300,
          "description": "Engagement range for the zombie attack"
        },
        {
          "name": "maximumrange",
          "type": "number",
          "range": "500-1500",
          "default": 900,
          "description": "Maximum pursuit range before zombie stops chasing"
        },
        {
          "name": "minspeed",
          "type": "number",
          "range": "30-100",
          "default": 60,
          "description": "Minimum movement speed for the zombie"
        },
        {
          "name": "maxspeed",
          "type": "number",
          "range": "30-100",
          "default": 65,
          "description": "Maximum movement speed for the zombie"
        },
        {
          "name": "Feeding",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether the zombie starts in a feeding state"
        },
        {
          "name": "ChaseModes",
          "type": "dropdown",
          "default": "Arms Out",
          "options": ["Arms Out", "Gammy Hand", "Bad Back", "Dash", "Hunchback"],
          "description": "Movement style for the zombie chase"
        },
        {
          "name": "RecoveryTime",
          "type": "number",
          "range": "1000-10000",
          "default": 3000,
          "description": "Recovery time in milliseconds when lunging"
        },
        {
          "name": "CanHearSound",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the zombie can hear and respond to sounds"
        },
        {
          "name": "HearingRange",
          "type": "number",
          "range": "100-1500",
          "default": 750,
          "description": "Range at which the zombie can hear sounds"
        },
        {
          "name": "GetWinded",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether the zombie can get winded during pursuit"
        },
        {
          "name": "AllowHeadshot",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the zombie can be killed with headshots"
        },
        {
          "name": "AllowBrainFeed",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the zombie can feed on brains"
        }
      ],
      "features": [
        "Specialized zombie AI system",
        "Zombie animation integration",
        "Melee weapon combat system",
        "Multiple chase movement modes",
        "Feeding state behavior",
        "Random speed variation",
        "Sound detection and response",
        "Recovery time mechanics",
        "Winded state system",
        "Headshot vulnerability",
        "Brain feeding mechanics",
        "Pursuit range limitations",
        "Rapid damage processing",
        "Master interpreter integration",
        "Multiple sound effect integration",
        "Realistic zombie characteristics"
      ],
      "keywords": ["zombie", "attack", "undead", "horror", "melee", "chase", "feeding", "movement", "ai", "animation", "sound", "pursuit"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a zombie character entity",
          "Set AlwaysActive to ON",
          "Attach the zombie_attack behavior",
          "Configure engagement and pursuit ranges",
          "Set up speed variation (min/max)",
          "Choose chase mode movement style",
          "Configure feeding state and brain feeding",
          "Set recovery time and winded mechanics",
          "Configure sound detection and hearing range",
          "Set up headshot vulnerability",
          "Add sound effects (Sound0=eating, Sound1=alerted, Sound2=attacking, Sound3=dying)",
          "Set up zombie animations for the character",
          "Configure melee weapon for the zombie",
          "Test zombie AI behavior",
          "Verify chase mechanics and pursuit limits",
          "Check feeding and sound detection systems"
        ]
      },
      "relatedBehaviors": ["ai_system", "zombie_system", "melee_system", "horror_system", "animation_system", "sound_system", "movement_system"]
    },
    "get_close_and_speak": {
      "name": "Get Close and Speak",
      "file": "people/get_close_and_speak.lua",
      "description": "A social AI system that makes characters approach the player when they are within view range and speak when they get close enough. Features automatic movement towards the player, configurable speaking distance, and customizable speech content. Perfect for creating friendly NPCs, quest givers, and interactive characters in games.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "50-500",
          "default": 300,
          "description": "Distance at which the character will speak to the player"
        },
        {
          "name": "SPEECH1",
          "type": "string",
          "default": "",
          "description": "Text that the character will speak when close to the player"
        }
      ],
      "features": [
        "Automatic player approach system",
        "Configurable speaking distance",
        "Customizable speech content",
        "View range detection",
        "Movement towards player",
        "Proximity-based interaction",
        "Social AI behavior",
        "Master interpreter integration",
        "Character-player interaction",
        "Dynamic speech system",
        "NPC communication mechanics",
        "Quest giver functionality"
      ],
      "keywords": ["get", "close", "speak", "npc", "social", "interaction", "speech", "approach", "player", "communication", "quest"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the get_close_and_speak behavior",
          "Configure speaking range distance",
          "Set up speech text content",
          "Position the character in your game world",
          "Test player proximity to the character",
          "Verify automatic approach behavior",
          "Check speech delivery at close range",
          "Test view range detection"
        ]
      },
      "relatedBehaviors": ["ai_system", "npc_system", "social_system", "speech_system", "movement_system", "interaction_system"]
    },
    "hostage_runs_away": {
      "name": "Hostage Runs Away",
      "file": "people/hostage_runs_away.lua",
      "description": "A hostage rescue system where an unarmed, bound character can be freed by the player and then runs away to safety. Features rescue mechanics, automatic escape behavior, configurable stop distance, and injury states. Perfect for creating hostage rescue missions, rescue scenarios, and dramatic escape sequences in games.",
      "properties": [
        {
          "name": "StopDistance",
          "type": "number",
          "range": "200-2000",
          "default": 800,
          "description": "Distance the hostage runs before stopping at safety"
        },
        {
          "name": "Injured",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether the hostage starts in an injured state"
        }
      ],
      "features": [
        "Hostage rescue mechanics",
        "Automatic escape behavior",
        "Configurable stop distance",
        "Injury state system",
        "Unarmed character integration",
        "Bound hostage state",
        "Rescue interaction system",
        "Escape sequence mechanics",
        "Sound effect integration",
        "Master interpreter integration",
        "Safety zone mechanics",
        "Dramatic rescue scenarios",
        "Mission objective system"
      ],
      "keywords": ["hostage", "rescue", "escape", "bound", "unarmed", "injury", "safety", "mission", "dramatic", "sequence"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a hostage character entity",
          "Set character as Unarmed",
          "Set AlwaysActive to ON",
          "Attach the hostage_runs_away behavior",
          "Configure stop distance for escape",
          "Set up injury state if needed",
          "Add hurt sound to Sound0",
          "Add freedom sound to Sound1",
          "Position the hostage in your game world",
          "Test rescue interaction with the player",
          "Verify automatic escape behavior",
          "Check stopping at safety distance",
          "Test sound effect integration"
        ]
      },
      "relatedBehaviors": ["ai_system", "rescue_system", "escape_system", "mission_system", "sound_system", "interaction_system"]
    },
    "melee_attack": {
      "name": "Melee Attack",
      "file": "people/melee_attack.lua",
      "description": "A comprehensive melee combat system that allows characters to attack targets within range using melee weapons or fists. Features melee animations, configurable attack range, defensive abilities, patrol behavior, and multiple sound effects. Perfect for creating melee combatants, brawlers, and close-quarters fighters in games.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "100-1000",
          "default": 500,
          "description": "Distance at which the character will attack the target"
        },
        {
          "name": "RunAway",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether the character will run away when hurt"
        },
        {
          "name": "InstantlyKillable",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character can be killed instantly"
        },
        {
          "name": "StarterAnimation",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether to play a starter animation"
        },
        {
          "name": "StartAnimation",
          "type": "dropdown",
          "default": "AnimSetList",
          "options": ["AnimSetList"],
          "description": "Animation to play at start (when StarterAnimation is enabled)"
        },
        {
          "name": "PatrolAtStart",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether the character patrols at the start"
        },
        {
          "name": "Block",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character can block attacks"
        },
        {
          "name": "Counter",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character can counter-attack"
        }
      ],
      "features": [
        "Melee combat system",
        "Melee weapon and fist combat",
        "Melee animation integration",
        "Configurable attack range",
        "Defensive blocking system",
        "Counter-attack mechanics",
        "Patrol behavior at start",
        "Starter animation support",
        "Run away when hurt option",
        "Instant kill vulnerability",
        "Multiple sound effect integration",
        "Rapid damage processing",
        "Master interpreter integration",
        "Target engagement system",
        "Close-quarters combat mechanics"
      ],
      "keywords": ["melee", "attack", "combat", "weapon", "fist", "block", "counter", "patrol", "animation", "range", "close", "quarters"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the melee_attack behavior",
          "Configure attack range distance",
          "Set up defensive abilities (block/counter)",
          "Configure patrol behavior if needed",
          "Set up starter animation if desired",
          "Configure run away and instant kill options",
          "Add attack sounds (Sound0 and Sound1)",
          "Add hurt sounds (Sound2 and Sound3)",
          "Set up melee animations for the character",
          "Configure melee weapon or fists",
          "Test melee combat behavior",
          "Verify attack range and engagement",
          "Check defensive mechanics and patrol behavior"
        ]
      },
      "relatedBehaviors": ["ai_system", "melee_system", "combat_system", "animation_system", "sound_system", "defensive_system"]
    },
    "patrol": {
      "name": "Patrol",
      "file": "people/patrol.lua",
      "description": "A patrol system that makes characters move between flags using nearest or connected flag navigation. Features automatic pathfinding between patrol points, headshot vulnerability options, and rapid damage processing. Perfect for creating guards, sentries, and patrolling NPCs in games.",
      "properties": [
        {
          "name": "AllowHeadshot",
          "type": "dropdown",
          "default": "Yes",
          "options": ["No", "Yes"],
          "description": "Whether the character can be killed with headshots"
        }
      ],
      "features": [
        "Automatic patrol system",
        "Flag-based navigation",
        "Nearest flag pathfinding",
        "Connected flag routing",
        "Headshot vulnerability control",
        "Rapid damage processing",
        "Master interpreter integration",
        "Patrol point management",
        "Guard and sentry behavior",
        "Automatic movement system",
        "Path optimization",
        "Patrol route management"
      ],
      "keywords": ["patrol", "flag", "navigation", "pathfinding", "guard", "sentry", "headshot", "movement", "route", "ai"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the patrol behavior",
          "Configure headshot vulnerability",
          "Place flags in your game world for patrol points",
          "Position the character near a flag",
          "Test patrol behavior between flags",
          "Verify automatic pathfinding",
          "Check headshot mechanics",
          "Test rapid damage processing"
        ]
      },
      "relatedBehaviors": ["ai_system", "movement_system", "navigation_system", "flag_system", "guard_system", "pathfinding_system"]
    },
    "patrol_and_speak": {
      "name": "Patrol and Speak",
      "file": "people/patrol_and_speak.lua",
      "description": "A patrol system combined with speech functionality that makes characters patrol between flags and deliver speech content. Features automatic flag-based navigation, customizable speech content, and patrol route management. Perfect for creating talking guards, NPCs with patrol routes, and characters that speak while moving in games.",
      "properties": [
        {
          "name": "SPEECH1",
          "type": "string",
          "default": "",
          "description": "Text that the character will speak while patrolling"
        }
      ],
      "features": [
        "Patrol system with flag navigation",
        "Speech delivery during patrol",
        "Flag-based movement system",
        "Customizable speech content",
        "Automatic patrol routing",
        "Nearest flag pathfinding",
        "Connected flag navigation",
        "Patrol point management",
        "Speech integration",
        "Guard and NPC behavior",
        "Automatic movement system",
        "Patrol route optimization"
      ],
      "keywords": ["patrol", "speak", "flag", "navigation", "speech", "guard", "npc", "movement", "route", "ai", "communication"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the patrol_and_speak behavior",
          "Configure speech text content",
          "Place flags in your game world for patrol points",
          "Position the character near a flag",
          "Test patrol behavior between flags",
          "Verify speech delivery during patrol",
          "Check automatic pathfinding",
          "Test patrol route functionality"
        ]
      },
      "relatedBehaviors": ["ai_system", "patrol_system", "speech_system", "navigation_system", "flag_system", "npc_system"]
    },
    "stand_and_speak": {
      "name": "Stand and Speak",
      "file": "people/stand_and_speak.lua",
      "description": "A stationary speech system that makes characters face the player and speak when they are within range. Features proximity-based speech activation, automatic player-facing behavior, and customizable speech content. Perfect for creating stationary NPCs, information givers, and characters that speak when approached in games.",
      "properties": [
        {
          "name": "RANGE",
          "type": "number",
          "range": "50-500",
          "default": 300,
          "description": "Distance at which the character will face the player and speak"
        },
        {
          "name": "SPEECH1",
          "type": "string",
          "default": "",
          "description": "Text that the character will speak when the player is within range"
        }
      ],
      "features": [
        "Proximity-based speech activation",
        "Automatic player-facing behavior",
        "Configurable speech range",
        "Customizable speech content",
        "Stationary character behavior",
        "Player detection system",
        "Speech delivery mechanics",
        "Character orientation control",
        "NPC interaction system",
        "Information delivery system",
        "Static character positioning",
        "Proximity-triggered communication"
      ],
      "keywords": ["stand", "speak", "proximity", "range", "speech", "npc", "stationary", "face", "player", "communication", "information"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the stand_and_speak behavior",
          "Configure speech range distance",
          "Set up speech text content",
          "Position the character in your game world",
          "Test player proximity to the character",
          "Verify automatic player-facing behavior",
          "Check speech delivery at close range",
          "Test range-based activation"
        ]
      },
      "relatedBehaviors": ["ai_system", "speech_system", "npc_system", "interaction_system", "proximity_system", "communication_system"]
    },
    "stand_and_speak_more": {
      "name": "Stand and Speak More",
      "file": "people/stand_and_speak_more.lua",
      "description": "An advanced stationary speech system with multiple speech sequences, lip-sync support, and configurable speech parameters. Features multiple speech files, volume control, delay timing, E-key activation, and sequential speech delivery. Perfect for creating detailed NPC conversations, story sequences, and characters with multiple dialogue options in games.",
      "properties": [
        {
          "name": "UseEKey",
          "type": "dropdown",
          "default": "No",
          "options": ["No", "Yes"],
          "description": "Whether to require E key press to advance speech sequence"
        },
        {
          "name": "Volume",
          "type": "number",
          "range": "0-100",
          "default": 80,
          "description": "Volume level for speech playback (0-100)"
        },
        {
          "name": "Delay",
          "type": "number",
          "range": "0-10",
          "default": 1,
          "description": "Delay in seconds between speech sequences"
        },
        {
          "name": "NumberOfSpeaks",
          "type": "number",
          "range": "1-4",
          "default": 1,
          "description": "Number of speech sequences to play (1-4)"
        },
        {
          "name": "SPEECH0",
          "type": "string",
          "default": "",
          "description": "First speech file (.wav) for lip-sync"
        },
        {
          "name": "SPEECH1",
          "type": "string",
          "default": "",
          "description": "Second speech file (.wav) for lip-sync"
        },
        {
          "name": "SPEECH2",
          "type": "string",
          "default": "",
          "description": "Third speech file (.wav) for lip-sync"
        },
        {
          "name": "SPEECH3",
          "type": "string",
          "default": "",
          "description": "Fourth speech file (.wav) for lip-sync"
        }
      ],
      "features": [
        "Multiple speech sequence system",
        "Lip-sync support with .wav files",
        "Volume control for speech playback",
        "Configurable delay between speeches",
        "E-key activation for manual progression",
        "Sequential speech delivery",
        "Player proximity detection",
        "Automatic speech advancement",
        "Character orientation control",
        "Speech state management",
        "Manual and automatic progression modes",
        "Advanced NPC conversation system"
      ],
      "keywords": ["stand", "speak", "multiple", "speech", "lip-sync", "volume", "delay", "sequence", "conversation", "npc", "dialogue"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the stand_and_speak_more behavior",
          "Configure E-key activation if needed",
          "Set up volume and delay parameters",
          "Configure number of speech sequences",
          "Add speech files (.wav) for lip-sync",
          "Position the character in your game world",
          "Test player proximity detection",
          "Verify speech sequence progression",
          "Check lip-sync and volume settings",
          "Test E-key activation functionality"
        ]
      },
      "relatedBehaviors": ["ai_system", "speech_system", "conversation_system", "npc_system", "interaction_system", "lip_sync_system"]
    },
    "stand_idle": {
      "name": "Stand Idle",
      "file": "people/stand_idle.lua",
      "description": "A simple idle behavior system that makes characters remain stationary and idle in their position. Features basic idle state management and master interpreter integration. Perfect for creating stationary NPCs, background characters, and characters that simply stand in place in games.",
      "properties": [],
      "features": [
        "Stationary idle behavior",
        "Character positioning control",
        "Idle state management",
        "Master interpreter integration",
        "Static character placement",
        "Background character support",
        "Simple behavior system",
        "No movement mechanics",
        "Basic AI integration",
        "Character stability system"
      ],
      "keywords": ["stand", "idle", "stationary", "static", "npc", "background", "character", "position", "behavior"],
      "tutorial": {
        "videoId": "cuuovEcjf3s",
        "timestamp": "0:00",
        "steps": [
          "Create a character entity",
          "Set AlwaysActive to ON",
          "Attach the stand_idle behavior",
          "Position the character in your game world",
          "Test character remains stationary",
          "Verify idle behavior functionality",
          "Check character positioning stability"
        ]
      },
      "relatedBehaviors": ["ai_system", "idle_system", "character_system", "background_system", "stationary_system"]
    },
    "walk_away": {
       "name": "Walk Away",
       "file": "people/walk_away.lua",
       "description": "A simple avoidance behavior that makes characters walk away from the player when they get too close. Features configurable detection range and stop distance, automatic movement away from player, and master interpreter integration. Perfect for creating shy NPCs, frightened characters, and entities that avoid player contact in games.",
       "properties": [
         {
           "name": "RANGE",
           "type": "number",
           "range": "50-1000",
           "default": 400,
           "description": "Distance at which the character will start walking away from the player"
         },
         {
           "name": "STOPDISTANCE",
           "type": "number",
           "range": "100-2000",
           "default": 800,
           "description": "Distance from player at which the character will stop walking away"
         }
       ],
       "features": [
         "Player proximity detection",
         "Automatic avoidance behavior",
         "Configurable detection range",
         "Configurable stop distance",
         "Movement away from player",
         "Master interpreter integration",
         "Simple avoidance mechanics",
         "Character positioning control",
         "Player distance monitoring",
         "Automatic movement system",
         "Avoidance state management",
         "Proximity-based behavior"
       ],
       "keywords": ["walk", "away", "avoid", "proximity", "range", "distance", "player", "movement", "avoidance", "shy", "frightened"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create a character entity",
           "Set AlwaysActive to ON",
           "Attach the walk_away behavior",
           "Configure detection range distance",
           "Set up stop distance for avoidance behavior",
           "Position the character in your game world",
           "Test player proximity to the character",
           "Verify character walks away when player gets close",
           "Check character stops moving when far enough away",
           "Test avoidance behavior functionality"
         ]
       },
               "relatedBehaviors": ["ai_system", "movement_system", "avoidance_system", "proximity_system", "character_system", "player_interaction"]
     },
     "wander_around": {
       "name": "Wander Around",
       "file": "people/wander_around.lua",
       "description": "A wandering behavior that makes characters move around randomly when the player is within range. Features configurable activation range, automatic wandering movement, and the ability to start wandering immediately or only when player is nearby. Perfect for creating curious NPCs, exploring characters, and entities that become active when the player approaches in games.",
       "properties": [
         {
           "name": "RANGE",
           "type": "number",
           "range": "0-1000",
           "default": 300,
           "description": "Distance at which the character will start wandering (0 = wander immediately from game start)"
         }
       ],
       "features": [
         "Player proximity detection",
         "Automatic wandering behavior",
         "Configurable activation range",
         "Immediate start option (range = 0)",
         "Random movement patterns",
         "Master interpreter integration",
         "Character positioning control",
         "Player distance monitoring",
         "Automatic movement system",
         "Wandering state management",
         "Proximity-based activation",
         "Exploration behavior"
       ],
       "keywords": ["wander", "around", "random", "movement", "proximity", "range", "exploration", "curious", "npc", "roaming", "patrol"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create a character entity",
           "Set AlwaysActive to ON",
           "Attach the wander_around behavior",
           "Configure activation range distance",
           "Set range to 0 for immediate wandering",
           "Set range to higher value for proximity-based wandering",
           "Position the character in your game world",
           "Test player proximity to the character",
           "Verify character starts wandering when player is close",
           "Check wandering behavior with different range settings",
           "Test immediate wandering with range set to 0"
         ]
       },
               "relatedBehaviors": ["ai_system", "movement_system", "wandering_system", "proximity_system", "character_system", "exploration_system"]
     },
     "cover_attack": {
       "name": "Cover Attack",
       "file": "people/cover_attack.lua",
       "description": "An advanced tactical combat system that controls characters using Soldier Animations to engage enemies from cover positions. Features cover-based combat mechanics, shooting weapon integration, dynamic cover zone movement, and rapid damage processing. Perfect for creating tactical soldiers, cover-based combatants, and characters that use strategic positioning in combat scenarios.",
       "properties": [
         {
           "name": "BreakCoverDistance",
           "type": "number",
           "range": "100-1000",
           "default": 300,
           "description": "Distance at which the character will break cover and move to better cover zones"
         },
         {
           "name": "AwareOfTarget",
           "type": "number",
           "range": "0-1",
           "default": 0,
           "description": "Initial awareness state (0 = quicker response, 1 = normal response)"
         }
       ],
       "features": [
         "Tactical cover-based combat",
         "Soldier animation integration",
         "Shooting weapon support",
         "Dynamic cover zone movement",
         "Enemy engagement system",
         "Cover position optimization",
         "Rapid damage processing",
         "Master interpreter integration",
         "Tactical positioning system",
         "Combat state management",
         "Cover break distance control",
         "Target awareness system",
         "Strategic combat mechanics",
         "Cover zone evaluation"
       ],
       "keywords": ["cover", "attack", "tactical", "soldier", "combat", "shooting", "weapon", "positioning", "strategy", "engagement", "cover zone"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create a character entity",
           "Set AlwaysActive to ON",
           "Attach the cover_attack behavior",
           "Configure break cover distance",
           "Set up target awareness level",
           "Add Soldier Animations to the character",
           "Equip character with shooting weapon",
           "Place cover zones in your game world",
           "Position the character near cover",
           "Test tactical combat behavior",
           "Verify cover-based engagement",
           "Check dynamic cover movement",
           "Test shooting weapon integration",
           "Verify rapid damage processing"
         ]
       },
               "relatedBehaviors": ["ai_system", "combat_system", "cover_system", "tactical_system", "soldier_system", "weapon_system", "animation_system"]
     },
     "prone_attack": {
       "name": "Prone Attack",
       "file": "people/prone_attack.lua",
       "description": "A tactical prone combat system that controls characters using Soldier Animations to engage enemies while lying prone. Features prone position combat, shooting weapon integration, repositioning when in danger, and configurable engagement distances. Perfect for creating sniper characters, prone combatants, and tactical soldiers that fight from lying positions.",
       "properties": [
         {
           "name": "CanReposition",
           "type": "number",
           "range": "0-1",
           "default": 1,
           "description": "Whether the character can reposition when in danger (1 = yes, 0 = no)"
         },
         {
           "name": "AdvanceToDistance",
           "type": "number",
           "range": "100-1000",
           "default": 600,
           "description": "Distance at which the character will advance to get closer to the target"
         },
         {
           "name": "ShootAtDistance",
           "type": "number",
           "range": "50-800",
           "default": 400,
           "description": "Distance at which the character will take shots at the target"
         }
       ],
       "features": [
         "Prone position combat",
         "Soldier animation integration",
         "Shooting weapon support",
         "Tactical repositioning system",
         "Configurable engagement distances",
         "Advance and shoot mechanics",
         "Danger-based repositioning",
         "Rapid damage processing",
         "Master interpreter integration",
         "Prone combat mechanics",
         "Distance-based tactics",
         "Tactical movement system",
         "Combat state management",
         "Prone positioning control"
       ],
       "keywords": ["prone", "attack", "tactical", "soldier", "combat", "shooting", "weapon", "sniper", "positioning", "reposition", "distance", "advance"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create a character entity",
           "Set AlwaysActive to ON",
           "Attach the prone_attack behavior",
           "Configure repositioning ability",
           "Set up advance distance for tactical movement",
           "Configure shoot distance for engagement",
           "Add Soldier Animations to the character",
           "Equip character with shooting weapon",
           "Position the character in prone position",
           "Test prone combat behavior",
           "Verify shooting from prone position",
           "Check tactical repositioning when in danger",
           "Test advance and shoot mechanics",
           "Verify rapid damage processing"
         ]
       },
               "relatedBehaviors": ["ai_system", "combat_system", "tactical_system", "soldier_system", "weapon_system", "animation_system", "sniper_system"]
     },
     "coverzone": {
       "name": "Cover Zone",
       "file": "markers/coverzone.lua",
       "description": "A sophisticated cover zone system that creates tactical cover positions for NPCs to find and use. Features automatic cover position generation, multiple cover types (standing, crouched, prone), spawn control options, and intelligent defender position mapping. Perfect for creating tactical combat environments, cover-based AI systems, and strategic positioning zones in games.",
       "properties": [
         {
           "name": "SpawnAtStart",
           "type": "number",
           "range": "0-1",
           "default": 1,
           "description": "Whether the cover zone spawns at start (1 = yes, 0 = no, use switch/trigger to spawn)"
         },
         {
           "name": "CoverType",
           "type": "number",
           "range": "1-3",
           "default": 1,
           "description": "Type of cover position (1 = Standing, 2 = Crouched, 3 = Prone)"
         }
       ],
       "features": [
         "Automatic cover position generation",
         "Multiple cover types (standing, crouched, prone)",
         "Intelligent defender position mapping",
         "Spawn control system",
         "Switch/trigger activation support",
         "Cover position optimization",
         "Terrain intersection detection",
         "Navmesh integration",
         "Cover angle calculation",
         "Defender map generation",
         "Cover zone activation/deactivation",
         "Tactical positioning system",
         "Cover position validation",
         "Automatic token placement"
       ],
       "keywords": ["cover", "zone", "tactical", "position", "defender", "combat", "ai", "spawn", "standing", "crouched", "prone", "mapping"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create a cover zone object",
           "Set AlwaysActive to ON",
           "Attach the coverzone behavior",
           "Configure spawn at start option",
           "Set up cover type (standing, crouched, or prone)",
           "Position the cover zone in your game world",
           "Test automatic cover position generation",
           "Verify defender position mapping",
           "Check cover zone activation/deactivation",
           "Test switch/trigger activation if needed",
           "Verify terrain intersection detection",
           "Check navmesh integration",
           "Test cover position optimization"
         ]
       },
               "relatedBehaviors": ["marker_system", "cover_system", "tactical_system", "ai_system", "positioning_system", "combat_system", "cover_attack", "prone_attack"]
     },
     "follow_cover": {
       "name": "Follow Cover",
       "file": "people/follow_cover.lua",
       "description": "A tactical following behavior that makes characters move towards the player when within view range, then play speech when close enough. Features player detection, movement towards player, proximity-based speech activation, and configurable interaction ranges. Perfect for creating escort NPCs, following companions, and characters that approach and communicate with the player in games.",
       "properties": [
         {
           "name": "RANGE",
           "type": "number",
           "range": "50-500",
           "default": 300,
           "description": "Distance at which the character will play speech when close to the player"
         },
         {
           "name": "SPEECH1",
           "type": "string",
           "default": "",
           "description": "Text that the character will speak when within range of the player"
         }
       ],
       "features": [
         "Player detection system",
         "Movement towards player",
         "Proximity-based speech activation",
         "Configurable interaction range",
         "Customizable speech content",
         "View range detection",
         "Automatic movement system",
         "Speech delivery mechanics",
         "Player following behavior",
         "Escort companion system",
         "Proximity communication",
         "Character approach behavior"
       ],
       "keywords": ["follow", "cover", "player", "movement", "speech", "proximity", "range", "escort", "companion", "approach", "communication"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create a character entity",
           "Set AlwaysActive to ON",
           "Attach the follow_cover behavior",
           "Configure interaction range distance",
           "Set up speech text content",
           "Position the character in your game world",
           "Test player detection and following",
           "Verify character moves towards player",
           "Check speech activation at close range",
           "Test different range settings",
           "Verify proximity-based communication"
         ]
       },
               "relatedBehaviors": ["ai_system", "movement_system", "speech_system", "proximity_system", "character_system", "escort_system", "companion_system"]
     },
     "loopwaypoint": {
       "name": "Loop Waypoint",
       "file": "objects/loopwaypoint.lua",
       "description": "A waypoint looping system that makes objects follow the nearest waypoint path in a continuous loop while playing sound effects. Features automatic waypoint detection, path following mechanics, dynamic sound volume based on player distance, and configurable audio parameters. Perfect for creating patrolling objects, moving sound sources, and entities that follow predefined paths in games.",
       "properties": [
         {
           "name": "RANGE",
           "type": "number",
           "range": "100-3000",
           "default": 1000,
           "description": "Maximum distance for sound volume calculation based on player distance"
         },
         {
           "name": "MinVolume",
           "type": "number",
           "range": "0-99",
           "default": 50,
           "description": "Minimum volume level for the looping sound effect"
         },
         {
           "name": "MaxVolume",
           "type": "number",
           "range": "1-100",
           "default": 100,
           "description": "Maximum volume level for the looping sound effect"
         }
       ],
       "features": [
         "Automatic waypoint detection",
         "Path following mechanics",
         "Continuous loop movement",
         "Dynamic sound volume system",
         "Player distance-based audio",
         "Configurable volume range",
         "Waypoint path integration",
         "Movement speed control",
         "Sound looping system",
         "Path point navigation",
         "Automatic path completion",
         "Collision-free movement",
         "Rotation-based movement",
         "Distance-based volume scaling"
       ],
       "keywords": ["loop", "waypoint", "path", "movement", "sound", "volume", "patrol", "follow", "audio", "distance", "navigation"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create a waypoint object",
           "Set AlwaysActive to ON",
           "Attach the loopwaypoint behavior",
           "Configure sound range distance",
           "Set up minimum and maximum volume levels",
           "Add looping sound to Sound0",
           "Place waypoint paths in your game world",
           "Position the object near a waypoint path",
           "Test automatic waypoint detection",
           "Verify path following and looping",
           "Check dynamic sound volume based on player distance",
           "Test different volume range settings",
           "Verify continuous loop movement"
         ]
       },
               "relatedBehaviors": ["marker_system", "waypoint_system", "movement_system", "sound_system", "patrol_system", "path_system", "audio_system"]
     },
     "npc_incover": {
       "name": "NPC In Cover",
       "file": "people/npc_incover.lua",
       "description": "An advanced cover-based combat system that allows NPCs to pop in and out of cover to fire at the player. Features multiple cover styles (up/down, left, right), configurable timing, weapon integration, animation support, and tactical combat mechanics. Perfect for creating tactical enemies, cover-based combatants, and NPCs that use strategic positioning in combat scenarios.",
       "properties": [
         {
           "name": "COVER_STYLE",
           "type": "number",
           "range": "1-3",
           "default": 1,
           "description": "Cover style (1 = Up/Down, 2 = Left, 3 = Right)"
         },
         {
           "name": "ALERT_DISTANCE",
           "type": "number",
           "range": "500-5000",
           "default": 2200,
           "description": "Distance at which the NPC becomes alert and starts combat behavior"
         },
         {
           "name": "EXPOSURE_TIME",
           "type": "number",
           "range": "500-3000",
           "default": 1450,
           "description": "Time in milliseconds the NPC stays exposed to fire"
         },
         {
           "name": "COVER_TIME",
           "type": "number",
           "range": "500-3000",
           "default": 2000,
           "description": "Time in milliseconds the NPC stays in cover"
         },
         {
           "name": "STAND_ANIMATION",
           "type": "number",
           "range": "-1-100",
           "default": -1,
           "description": "Animation to play when standing (0 = AnimSetList, -1 = default)"
         },
         {
           "name": "DUCK_ANIMATION",
           "type": "number",
           "range": "-1-100",
           "default": -1,
           "description": "Animation to play when ducking (0 = AnimSetList, -1 = default)"
         },
         {
           "name": "LEFT_ANIMATION",
           "type": "number",
           "range": "-1-100",
           "default": -1,
           "description": "Animation to play when leaning left (0 = AnimSetList, -1 = default)"
         },
         {
           "name": "RIGHT_ANIMATION",
           "type": "number",
           "range": "-1-100",
           "default": -1,
           "description": "Animation to play when leaning right (0 = AnimSetList, -1 = default)"
         },
         {
           "name": "SHOOT_ANIMATION",
           "type": "number",
           "range": "-1-100",
           "default": -1,
           "description": "Animation to play when shooting (0 = AnimSetList, -1 = default)"
         }
       ],
       "features": [
         "Multiple cover styles (up/down, left, right)",
         "Tactical cover-based combat",
         "Configurable timing system",
         "Weapon integration and firing",
         "Animation support for all states",
         "Player distance detection",
         "Automatic cover cycling",
         "Ammo management system",
         "Fire rate control",
         "Cover exposure timing",
         "Tactical positioning system",
         "Combat state management",
         "Sound effect integration",
         "Weapon reload mechanics",
         "Cover style switching"
       ],
       "keywords": ["npc", "cover", "combat", "tactical", "shooting", "weapon", "animation", "timing", "exposure", "duck", "lean", "fire"],
       "tutorial": {
         "videoId": "coming-soon",
         "timestamp": "0:00",
         "steps": [
           "Create an NPC character",
           "Set AlwaysActive to ON",
           "Attach the npc_incover behavior",
           "Configure cover style (up/down, left, or right)",
           "Set up alert distance for combat activation",
           "Configure exposure and cover timing",
           "Set up animations for different states",
           "Equip character with weapon",
           "Position the character near cover",
           "Test cover-based combat behavior",
           "Verify pop-up and pop-down mechanics",
           "Check weapon firing and ammo management",
           "Test different cover styles",
           "Verify timing and animation transitions"
         ]
       },
       "relatedBehaviors": ["ai_system", "combat_system", "cover_system", "tactical_system", "weapon_system", "animation_system", "coverzone"]
     }
  }
} 